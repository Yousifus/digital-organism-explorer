{
  "version": 3,
  "sources": ["browser-external:process", "../../.pnpm/color-name@1.1.4/node_modules/color-name/index.js", "../../.pnpm/color-convert@2.0.1/node_modules/color-convert/conversions.js", "../../.pnpm/color-convert@2.0.1/node_modules/color-convert/route.js", "../../.pnpm/color-convert@2.0.1/node_modules/color-convert/index.js", "../../.pnpm/ansi-styles@4.3.0/node_modules/ansi-styles/index.js", "../../.pnpm/supports-color@7.2.0/node_modules/supports-color/browser.js", "../../.pnpm/chalk@4.1.2/node_modules/chalk/source/util.js", "../../.pnpm/chalk@4.1.2/node_modules/chalk/source/templates.js", "../../.pnpm/chalk@4.1.2/node_modules/chalk/source/index.js", "../../.pnpm/@lmstudio+lms-isomorphic@0.4.6/node_modules/@lmstudio/lms-isomorphic/src/browser/generateRandomBase64.ts", "../../.pnpm/@lmstudio+lms-isomorphic@0.4.6/node_modules/@lmstudio/lms-isomorphic/src/browser/readFileAsBase64.ts", "../../.pnpm/@lmstudio+lms-isomorphic@0.4.6/node_modules/@lmstudio/lms-isomorphic/src/browser/terminalSize.ts", "../../.pnpm/@lmstudio+lms-isomorphic@0.4.6/node_modules/@lmstudio/lms-isomorphic/src/browser/WebSocket.ts", "../../.pnpm/@lmstudio+lms-isomorphic@0.4.6/node_modules/@lmstudio/lms-isomorphic/src/browser.ts", "../../.pnpm/zod@3.24.4/node_modules/zod/lib/index.mjs", "../../.pnpm/@lmstudio+sdk@1.5.0/node_modules/@lmstudio/sdk/dist/index.mjs", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/Options.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/Refs.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/errorMessages.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/any.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/array.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/branded.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/catch.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/date.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/default.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/effects.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/enum.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/literal.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/string.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/record.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/map.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/never.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/null.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/union.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/number.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/object.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/optional.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/promise.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/set.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/selectParser.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/parseDef.js", "../../.pnpm/zod-to-json-schema@3.24.5_zod@3.24.4/node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"process\" has been externalized for browser compatibility. Cannot access \"process.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n", "'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n", "'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n", "'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n", "'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n", "export function generateRandomBase64(bytesOfRandomness = 18) {\r\n  const randomBytes = new Uint8Array(bytesOfRandomness);\r\n  globalThis.crypto.getRandomValues(randomBytes);\r\n  // Using btoa here is safe because the input is not string anyways.\r\n  return btoa(String.fromCharCode(...randomBytes));\r\n}\r\n", "export async function readFileAsBase64(_path: string): Promise<\r\n  | {\r\n      success: true;\r\n      base64: string;\r\n    }\r\n  | {\r\n      success: false;\r\n    }\r\n> {\r\n  return { success: false };\r\n}\r\n", "export function terminalSize() {\r\n  return { columns: 80, rows: 24 };\r\n}\r\n", "export const WebSocket = globalThis.WebSocket;\r\n", "export { generateRandomBase64 } from \"./browser/generateRandomBase64.js\";\r\nexport { readFileAsBase64 } from \"./browser/readFileAsBase64.js\";\r\nexport { terminalSize } from \"./browser/terminalSize.js\";\r\nexport { WebSocket } from \"./browser/WebSocket.js\";\r\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\"\n        ? params(data)\n        : typeof params === \"string\"\n            ? { message: params }\n            : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nfunction custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    var _a, _b;\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "import { z } from 'zod';\nimport process$1 from 'process';\nimport chalk from 'chalk';\nimport { terminalSize, WebSocket, readFileAsBase64, generateRandomBase64 } from '@lmstudio/lms-isomorphic';\nimport { zodToJsonSchema } from 'zod-to-json-schema';\n\nfunction isSignalLike(value) {\n    return (typeof value === \"object\" &&\n        value !== null &&\n        typeof value.get === \"function\" &&\n        typeof value.subscribe === \"function\");\n}\n/**\n * Base class for objects that can be subscribed to. Provides common utility methods.\n */\nclass Subscribable {\n    subscribeWithCleaner(cleaner, listener) {\n        const unsubscribe = this.subscribe(listener);\n        cleaner.register(unsubscribe);\n    }\n    subscribeOnce(listener) {\n        const unsubscribe = this.subscribe(data => {\n            unsubscribe();\n            listener(data);\n        });\n        return unsubscribe;\n    }\n    subscribeOnceWithCleaner(cleaner, listener) {\n        const unsubscribe = this.subscribeOnce(listener);\n        cleaner.register(unsubscribe);\n    }\n    derive(deriver, outputEqualsPredicate = (a, b) => a === b) {\n        if (isSignalLike(this)) {\n            return LazySignal.deriveFrom([this], deriver);\n        }\n        const thisWithGetter = this;\n        if (thisWithGetter.get !== undefined) {\n            const initialValue = thisWithGetter.get();\n            if (initialValue === LazySignal.NOT_AVAILABLE) {\n                return LazySignal.createWithoutInitialValue(setDownstream => {\n                    return thisWithGetter.subscribe(data => {\n                        if (isAvailable(data)) {\n                            setDownstream(deriver(data));\n                        }\n                    });\n                });\n            }\n            const thisNarrowed = thisWithGetter;\n            return LazySignal.create(deriver(thisNarrowed.get()), setDownstream => {\n                return thisNarrowed.subscribe(data => {\n                    setDownstream(deriver(data));\n                });\n            }, outputEqualsPredicate);\n        }\n        return LazySignal.createWithoutInitialValue(setDownstream => {\n            return this.subscribe(data => {\n                if (isAvailable(data)) {\n                    setDownstream(deriver(data));\n                }\n            });\n        }, outputEqualsPredicate);\n    }\n}\n\n/**\n * Represents an event that can be subscribed to. Emitted events will trigger all subscribers in the\n * next microtask. If multiple events are emitted, they will be triggered in the same microtask.\n */\nclass Event extends Subscribable {\n    /**\n     * Internal state that tracks whether the event has any subscribers.\n     */\n    constructor() {\n        super();\n        this.subscribers = new Set();\n        /**\n         * Internal callback that is called when the number of subscribers goes from 0 to 1.\n         */\n        this.onSubscribed = null;\n        /**\n         * Internal callback that is called when the number of subscribers goes from 1 to 0.\n         */\n        this.onUnsubscribed = null;\n    }\n    emit(data) {\n        queueMicrotask(() => {\n            for (const subscriber of this.subscribers) {\n                subscriber(data);\n            }\n        });\n    }\n    static create() {\n        const event = new Event();\n        const emitter = data => {\n            event.emit(data);\n        };\n        return [event, emitter];\n    }\n    subscribe(listener) {\n        const previousSize = this.subscribers.size;\n        this.subscribers.add(listener);\n        if (previousSize === 0 && this.subscribers.size === 1) {\n            this.onSubscribed?.();\n        }\n        return () => {\n            const previousSize = this.subscribers.size;\n            this.subscribers.delete(listener);\n            if (previousSize === 1 && this.subscribers.size === 0) {\n                this.onUnsubscribed?.();\n            }\n        };\n    }\n    batch({ minIdleTimeMs = 200, maxBatchTimeMs = 1000, }) {\n        const [batchedEvent, emitBatchedEvent] = Event.create();\n        batchedEvent.onSubscribed = () => {\n            let batch = [];\n            let emitBatchTimeout = null;\n            let firstEventTime = 0;\n            const emitBatch = () => {\n                emitBatchTimeout = null;\n                emitBatchedEvent(batch);\n                batch = [];\n            };\n            batchedEvent.onUnsubscribed = this.subscribe(data => {\n                batch.push(data);\n                if (emitBatchTimeout === null) {\n                    // No scheduled batch\n                    firstEventTime = Date.now();\n                    emitBatchTimeout = setTimeout(emitBatch, Math.min(minIdleTimeMs, maxBatchTimeMs));\n                }\n                else {\n                    // Reschedule emission\n                    clearTimeout(emitBatchTimeout);\n                    const timeSinceFirstEvent = Date.now() - firstEventTime;\n                    emitBatchTimeout = setTimeout(emitBatch, Math.min(minIdleTimeMs, Math.max(0, maxBatchTimeMs - timeSinceFirstEvent)));\n                }\n            });\n        };\n        return batchedEvent;\n    }\n}\n\nfunction makePromise() {\n    let resolve;\n    let reject;\n    const promise = new Promise((_resolve, _reject) => {\n        resolve = _resolve;\n        reject = _reject;\n    });\n    return { promise, resolve: resolve, reject: reject };\n}\n\n// src/utils/env.ts\nvar NOTHING = Symbol.for(\"immer-nothing\");\nvar DRAFTABLE = Symbol.for(\"immer-draftable\");\nvar DRAFT_STATE = Symbol.for(\"immer-state\");\n\n// src/utils/errors.ts\nvar errors = process.env.NODE_ENV !== \"production\" ? [\n  // All error codes, starting by 0:\n  function(plugin) {\n    return `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`;\n  },\n  function(thing) {\n    return `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`;\n  },\n  \"This object has been frozen and should not be mutated\",\n  function(data) {\n    return \"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + data;\n  },\n  \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n  \"Immer forbids circular references\",\n  \"The first or second argument to `produce` must be a function\",\n  \"The third argument to `produce` must be a function or undefined\",\n  \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n  \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n  function(thing) {\n    return `'current' expects a draft, got: ${thing}`;\n  },\n  \"Object.defineProperty() cannot be used on an Immer draft\",\n  \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n  \"Immer only supports deleting array indices\",\n  \"Immer only supports setting array indices and the 'length' property\",\n  function(thing) {\n    return `'original' expects a draft, got: ${thing}`;\n  }\n  // Note: if more errors are added, the errorOffset in Patches.ts should be increased\n  // See Patches.ts for additional errors\n] : [];\nfunction die(error, ...args) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const e = errors[error];\n    const msg = typeof e === \"function\" ? e.apply(null, args) : e;\n    throw new Error(`[Immer] ${msg}`);\n  }\n  throw new Error(\n    `[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n  );\n}\n\n// src/utils/common.ts\nvar getPrototypeOf = Object.getPrototypeOf;\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\nfunction isDraftable(value) {\n  if (!value)\n    return false;\n  return isPlainObject$2(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!value.constructor?.[DRAFTABLE] || isMap$1(value) || isSet$1(value);\n}\nvar objectCtorString = Object.prototype.constructor.toString();\nfunction isPlainObject$2(value) {\n  if (!value || typeof value !== \"object\")\n    return false;\n  const proto = getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  if (Ctor === Object)\n    return true;\n  return typeof Ctor == \"function\" && Function.toString.call(Ctor) === objectCtorString;\n}\nfunction each(obj, iter) {\n  if (getArchtype(obj) === 0 /* Object */) {\n    Reflect.ownKeys(obj).forEach((key) => {\n      iter(key, obj[key], obj);\n    });\n  } else {\n    obj.forEach((entry, index) => iter(index, entry, obj));\n  }\n}\nfunction getArchtype(thing) {\n  const state = thing[DRAFT_STATE];\n  return state ? state.type_ : Array.isArray(thing) ? 1 /* Array */ : isMap$1(thing) ? 2 /* Map */ : isSet$1(thing) ? 3 /* Set */ : 0 /* Object */;\n}\nfunction has(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction get(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.get(prop) : thing[prop];\n}\nfunction set(thing, propOrOldValue, value) {\n  const t = getArchtype(thing);\n  if (t === 2 /* Map */)\n    thing.set(propOrOldValue, value);\n  else if (t === 3 /* Set */) {\n    thing.add(value);\n  } else\n    thing[propOrOldValue] = value;\n}\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction isMap$1(target) {\n  return target instanceof Map;\n}\nfunction isSet$1(target) {\n  return target instanceof Set;\n}\nfunction latest(state) {\n  return state.copy_ || state.base_;\n}\nfunction shallowCopy(base, strict) {\n  if (isMap$1(base)) {\n    return new Map(base);\n  }\n  if (isSet$1(base)) {\n    return new Set(base);\n  }\n  if (Array.isArray(base))\n    return Array.prototype.slice.call(base);\n  const isPlain = isPlainObject$2(base);\n  if (strict === true || strict === \"class_only\" && !isPlain) {\n    const descriptors = Object.getOwnPropertyDescriptors(base);\n    delete descriptors[DRAFT_STATE];\n    let keys = Reflect.ownKeys(descriptors);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const desc = descriptors[key];\n      if (desc.writable === false) {\n        desc.writable = true;\n        desc.configurable = true;\n      }\n      if (desc.get || desc.set)\n        descriptors[key] = {\n          configurable: true,\n          writable: true,\n          // could live with !!desc.set as well here...\n          enumerable: desc.enumerable,\n          value: base[key]\n        };\n    }\n    return Object.create(getPrototypeOf(base), descriptors);\n  } else {\n    const proto = getPrototypeOf(base);\n    if (proto !== null && isPlain) {\n      return { ...base };\n    }\n    const obj = Object.create(proto);\n    return Object.assign(obj, base);\n  }\n}\nfunction freeze(obj, deep = false) {\n  if (isFrozen(obj) || isDraft(obj) || !isDraftable(obj))\n    return obj;\n  if (getArchtype(obj) > 1) {\n    obj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;\n  }\n  Object.freeze(obj);\n  if (deep)\n    Object.values(obj).forEach((value) => freeze(value, true));\n  return obj;\n}\nfunction dontMutateFrozenCollections() {\n  die(2);\n}\nfunction isFrozen(obj) {\n  return Object.isFrozen(obj);\n}\n\n// src/utils/plugins.ts\nvar plugins = {};\nfunction getPlugin(pluginKey) {\n  const plugin = plugins[pluginKey];\n  if (!plugin) {\n    die(0, pluginKey);\n  }\n  return plugin;\n}\nfunction loadPlugin(pluginKey, implementation) {\n  if (!plugins[pluginKey])\n    plugins[pluginKey] = implementation;\n}\n\n// src/core/scope.ts\nvar currentScope;\nfunction getCurrentScope() {\n  return currentScope;\n}\nfunction createScope(parent_, immer_) {\n  return {\n    drafts_: [],\n    parent_,\n    immer_,\n    // Whenever the modified draft contains a draft from another scope, we\n    // need to prevent auto-freezing so the unowned draft can be finalized.\n    canAutoFreeze_: true,\n    unfinalizedDrafts_: 0\n  };\n}\nfunction usePatchesInScope(scope, patchListener) {\n  if (patchListener) {\n    getPlugin(\"Patches\");\n    scope.patches_ = [];\n    scope.inversePatches_ = [];\n    scope.patchListener_ = patchListener;\n  }\n}\nfunction revokeScope(scope) {\n  leaveScope(scope);\n  scope.drafts_.forEach(revokeDraft);\n  scope.drafts_ = null;\n}\nfunction leaveScope(scope) {\n  if (scope === currentScope) {\n    currentScope = scope.parent_;\n  }\n}\nfunction enterScope(immer2) {\n  return currentScope = createScope(currentScope, immer2);\n}\nfunction revokeDraft(draft) {\n  const state = draft[DRAFT_STATE];\n  if (state.type_ === 0 /* Object */ || state.type_ === 1 /* Array */)\n    state.revoke_();\n  else\n    state.revoked_ = true;\n}\n\n// src/core/finalize.ts\nfunction processResult(result, scope) {\n  scope.unfinalizedDrafts_ = scope.drafts_.length;\n  const baseDraft = scope.drafts_[0];\n  const isReplaced = result !== void 0 && result !== baseDraft;\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified_) {\n      revokeScope(scope);\n      die(4);\n    }\n    if (isDraftable(result)) {\n      result = finalize(scope, result);\n      if (!scope.parent_)\n        maybeFreeze(scope, result);\n    }\n    if (scope.patches_) {\n      getPlugin(\"Patches\").generateReplacementPatches_(\n        baseDraft[DRAFT_STATE].base_,\n        result,\n        scope.patches_,\n        scope.inversePatches_\n      );\n    }\n  } else {\n    result = finalize(scope, baseDraft, []);\n  }\n  revokeScope(scope);\n  if (scope.patches_) {\n    scope.patchListener_(scope.patches_, scope.inversePatches_);\n  }\n  return result !== NOTHING ? result : void 0;\n}\nfunction finalize(rootScope, value, path) {\n  if (isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  if (!state) {\n    each(\n      value,\n      (key, childValue) => finalizeProperty(rootScope, state, value, key, childValue, path)\n    );\n    return value;\n  }\n  if (state.scope_ !== rootScope)\n    return value;\n  if (!state.modified_) {\n    maybeFreeze(rootScope, state.base_, true);\n    return state.base_;\n  }\n  if (!state.finalized_) {\n    state.finalized_ = true;\n    state.scope_.unfinalizedDrafts_--;\n    const result = state.copy_;\n    let resultEach = result;\n    let isSet2 = false;\n    if (state.type_ === 3 /* Set */) {\n      resultEach = new Set(result);\n      result.clear();\n      isSet2 = true;\n    }\n    each(\n      resultEach,\n      (key, childValue) => finalizeProperty(rootScope, state, result, key, childValue, path, isSet2)\n    );\n    maybeFreeze(rootScope, result, false);\n    if (path && rootScope.patches_) {\n      getPlugin(\"Patches\").generatePatches_(\n        state,\n        path,\n        rootScope.patches_,\n        rootScope.inversePatches_\n      );\n    }\n  }\n  return state.copy_;\n}\nfunction finalizeProperty(rootScope, parentState, targetObject, prop, childValue, rootPath, targetIsSet) {\n  if (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n    die(5);\n  if (isDraft(childValue)) {\n    const path = rootPath && parentState && parentState.type_ !== 3 /* Set */ && // Set objects are atomic since they have no keys.\n    !has(parentState.assigned_, prop) ? rootPath.concat(prop) : void 0;\n    const res = finalize(rootScope, childValue, path);\n    set(targetObject, prop, res);\n    if (isDraft(res)) {\n      rootScope.canAutoFreeze_ = false;\n    } else\n      return;\n  } else if (targetIsSet) {\n    targetObject.add(childValue);\n  }\n  if (isDraftable(childValue) && !isFrozen(childValue)) {\n    if (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n      return;\n    }\n    finalize(rootScope, childValue);\n    if ((!parentState || !parentState.scope_.parent_) && typeof prop !== \"symbol\" && Object.prototype.propertyIsEnumerable.call(targetObject, prop))\n      maybeFreeze(rootScope, childValue);\n  }\n}\nfunction maybeFreeze(scope, value, deep = false) {\n  if (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n    freeze(value, deep);\n  }\n}\n\n// src/core/proxy.ts\nfunction createProxyProxy(base, parent) {\n  const isArray = Array.isArray(base);\n  const state = {\n    type_: isArray ? 1 /* Array */ : 0 /* Object */,\n    // Track which produce call this is associated with.\n    scope_: parent ? parent.scope_ : getCurrentScope(),\n    // True for both shallow and deep changes.\n    modified_: false,\n    // Used during finalization.\n    finalized_: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned_: {},\n    // The parent draft state.\n    parent_: parent,\n    // The base state.\n    base_: base,\n    // The base proxy.\n    draft_: null,\n    // set below\n    // The base copy with any updated values.\n    copy_: null,\n    // Called by the `produce` function.\n    revoke_: null,\n    isManual_: false\n  };\n  let target = state;\n  let traps = objectTraps;\n  if (isArray) {\n    target = [state];\n    traps = arrayTraps;\n  }\n  const { revoke, proxy } = Proxy.revocable(target, traps);\n  state.draft_ = proxy;\n  state.revoke_ = revoke;\n  return proxy;\n}\nvar objectTraps = {\n  get(state, prop) {\n    if (prop === DRAFT_STATE)\n      return state;\n    const source = latest(state);\n    if (!has(source, prop)) {\n      return readPropFromProto(state, source, prop);\n    }\n    const value = source[prop];\n    if (state.finalized_ || !isDraftable(value)) {\n      return value;\n    }\n    if (value === peek(state.base_, prop)) {\n      prepareCopy(state);\n      return state.copy_[prop] = createProxy(value, state);\n    }\n    return value;\n  },\n  has(state, prop) {\n    return prop in latest(state);\n  },\n  ownKeys(state) {\n    return Reflect.ownKeys(latest(state));\n  },\n  set(state, prop, value) {\n    const desc = getDescriptorFromProto(latest(state), prop);\n    if (desc?.set) {\n      desc.set.call(state.draft_, value);\n      return true;\n    }\n    if (!state.modified_) {\n      const current2 = peek(latest(state), prop);\n      const currentState = current2?.[DRAFT_STATE];\n      if (currentState && currentState.base_ === value) {\n        state.copy_[prop] = value;\n        state.assigned_[prop] = false;\n        return true;\n      }\n      if (is(value, current2) && (value !== void 0 || has(state.base_, prop)))\n        return true;\n      prepareCopy(state);\n      markChanged(state);\n    }\n    if (state.copy_[prop] === value && // special case: handle new props with value 'undefined'\n    (value !== void 0 || prop in state.copy_) || // special case: NaN\n    Number.isNaN(value) && Number.isNaN(state.copy_[prop]))\n      return true;\n    state.copy_[prop] = value;\n    state.assigned_[prop] = true;\n    return true;\n  },\n  deleteProperty(state, prop) {\n    if (peek(state.base_, prop) !== void 0 || prop in state.base_) {\n      state.assigned_[prop] = false;\n      prepareCopy(state);\n      markChanged(state);\n    } else {\n      delete state.assigned_[prop];\n    }\n    if (state.copy_) {\n      delete state.copy_[prop];\n    }\n    return true;\n  },\n  // Note: We never coerce `desc.value` into an Immer draft, because we can't make\n  // the same guarantee in ES5 mode.\n  getOwnPropertyDescriptor(state, prop) {\n    const owner = latest(state);\n    const desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n    if (!desc)\n      return desc;\n    return {\n      writable: true,\n      configurable: state.type_ !== 1 /* Array */ || prop !== \"length\",\n      enumerable: desc.enumerable,\n      value: owner[prop]\n    };\n  },\n  defineProperty() {\n    die(11);\n  },\n  getPrototypeOf(state) {\n    return getPrototypeOf(state.base_);\n  },\n  setPrototypeOf() {\n    die(12);\n  }\n};\nvar arrayTraps = {};\neach(objectTraps, (key, fn) => {\n  arrayTraps[key] = function() {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\narrayTraps.deleteProperty = function(state, prop) {\n  if (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop)))\n    die(13);\n  return arrayTraps.set.call(this, state, prop, void 0);\n};\narrayTraps.set = function(state, prop, value) {\n  if (process.env.NODE_ENV !== \"production\" && prop !== \"length\" && isNaN(parseInt(prop)))\n    die(14);\n  return objectTraps.set.call(this, state[0], prop, value, state[0]);\n};\nfunction peek(draft, prop) {\n  const state = draft[DRAFT_STATE];\n  const source = state ? latest(state) : draft;\n  return source[prop];\n}\nfunction readPropFromProto(state, source, prop) {\n  const desc = getDescriptorFromProto(source, prop);\n  return desc ? `value` in desc ? desc.value : (\n    // This is a very special case, if the prop is a getter defined by the\n    // prototype, we should invoke it with the draft as context!\n    desc.get?.call(state.draft_)\n  ) : void 0;\n}\nfunction getDescriptorFromProto(source, prop) {\n  if (!(prop in source))\n    return void 0;\n  let proto = getPrototypeOf(source);\n  while (proto) {\n    const desc = Object.getOwnPropertyDescriptor(proto, prop);\n    if (desc)\n      return desc;\n    proto = getPrototypeOf(proto);\n  }\n  return void 0;\n}\nfunction markChanged(state) {\n  if (!state.modified_) {\n    state.modified_ = true;\n    if (state.parent_) {\n      markChanged(state.parent_);\n    }\n  }\n}\nfunction prepareCopy(state) {\n  if (!state.copy_) {\n    state.copy_ = shallowCopy(\n      state.base_,\n      state.scope_.immer_.useStrictShallowCopy_\n    );\n  }\n}\n\n// src/core/immerClass.ts\nvar Immer2 = class {\n  constructor(config) {\n    this.autoFreeze_ = true;\n    this.useStrictShallowCopy_ = false;\n    /**\n     * The `produce` function takes a value and a \"recipe function\" (whose\n     * return value often depends on the base state). The recipe function is\n     * free to mutate its first argument however it wants. All mutations are\n     * only ever applied to a __copy__ of the base state.\n     *\n     * Pass only a function to create a \"curried producer\" which relieves you\n     * from passing the recipe function every time.\n     *\n     * Only plain objects and arrays are made mutable. All other objects are\n     * considered uncopyable.\n     *\n     * Note: This function is __bound__ to its `Immer` instance.\n     *\n     * @param {any} base - the initial state\n     * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n     * @param {Function} patchListener - optional function that will be called with all the patches produced here\n     * @returns {any} a new state, or the initial state if nothing was modified\n     */\n    this.produce = (base, recipe, patchListener) => {\n      if (typeof base === \"function\" && typeof recipe !== \"function\") {\n        const defaultBase = recipe;\n        recipe = base;\n        const self = this;\n        return function curriedProduce(base2 = defaultBase, ...args) {\n          return self.produce(base2, (draft) => recipe.call(this, draft, ...args));\n        };\n      }\n      if (typeof recipe !== \"function\")\n        die(6);\n      if (patchListener !== void 0 && typeof patchListener !== \"function\")\n        die(7);\n      let result;\n      if (isDraftable(base)) {\n        const scope = enterScope(this);\n        const proxy = createProxy(base, void 0);\n        let hasError = true;\n        try {\n          result = recipe(proxy);\n          hasError = false;\n        } finally {\n          if (hasError)\n            revokeScope(scope);\n          else\n            leaveScope(scope);\n        }\n        usePatchesInScope(scope, patchListener);\n        return processResult(result, scope);\n      } else if (!base || typeof base !== \"object\") {\n        result = recipe(base);\n        if (result === void 0)\n          result = base;\n        if (result === NOTHING)\n          result = void 0;\n        if (this.autoFreeze_)\n          freeze(result, true);\n        if (patchListener) {\n          const p = [];\n          const ip = [];\n          getPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip);\n          patchListener(p, ip);\n        }\n        return result;\n      } else\n        die(1, base);\n    };\n    this.produceWithPatches = (base, recipe) => {\n      if (typeof base === \"function\") {\n        return (state, ...args) => this.produceWithPatches(state, (draft) => base(draft, ...args));\n      }\n      let patches, inversePatches;\n      const result = this.produce(base, recipe, (p, ip) => {\n        patches = p;\n        inversePatches = ip;\n      });\n      return [result, patches, inversePatches];\n    };\n    if (typeof config?.autoFreeze === \"boolean\")\n      this.setAutoFreeze(config.autoFreeze);\n    if (typeof config?.useStrictShallowCopy === \"boolean\")\n      this.setUseStrictShallowCopy(config.useStrictShallowCopy);\n  }\n  createDraft(base) {\n    if (!isDraftable(base))\n      die(8);\n    if (isDraft(base))\n      base = current(base);\n    const scope = enterScope(this);\n    const proxy = createProxy(base, void 0);\n    proxy[DRAFT_STATE].isManual_ = true;\n    leaveScope(scope);\n    return proxy;\n  }\n  finishDraft(draft, patchListener) {\n    const state = draft && draft[DRAFT_STATE];\n    if (!state || !state.isManual_)\n      die(9);\n    const { scope_: scope } = state;\n    usePatchesInScope(scope, patchListener);\n    return processResult(void 0, scope);\n  }\n  /**\n   * Pass true to automatically freeze all copies created by Immer.\n   *\n   * By default, auto-freezing is enabled.\n   */\n  setAutoFreeze(value) {\n    this.autoFreeze_ = value;\n  }\n  /**\n   * Pass true to enable strict shallow copy.\n   *\n   * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n   */\n  setUseStrictShallowCopy(value) {\n    this.useStrictShallowCopy_ = value;\n  }\n  applyPatches(base, patches) {\n    let i;\n    for (i = patches.length - 1; i >= 0; i--) {\n      const patch = patches[i];\n      if (patch.path.length === 0 && patch.op === \"replace\") {\n        base = patch.value;\n        break;\n      }\n    }\n    if (i > -1) {\n      patches = patches.slice(i + 1);\n    }\n    const applyPatchesImpl = getPlugin(\"Patches\").applyPatches_;\n    if (isDraft(base)) {\n      return applyPatchesImpl(base, patches);\n    }\n    return this.produce(\n      base,\n      (draft) => applyPatchesImpl(draft, patches)\n    );\n  }\n};\nfunction createProxy(value, parent) {\n  const draft = isMap$1(value) ? getPlugin(\"MapSet\").proxyMap_(value, parent) : isSet$1(value) ? getPlugin(\"MapSet\").proxySet_(value, parent) : createProxyProxy(value, parent);\n  const scope = parent ? parent.scope_ : getCurrentScope();\n  scope.drafts_.push(draft);\n  return draft;\n}\n\n// src/core/current.ts\nfunction current(value) {\n  if (!isDraft(value))\n    die(10, value);\n  return currentImpl(value);\n}\nfunction currentImpl(value) {\n  if (!isDraftable(value) || isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  let copy;\n  if (state) {\n    if (!state.modified_)\n      return state.base_;\n    state.finalized_ = true;\n    copy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_);\n  } else {\n    copy = shallowCopy(value, true);\n  }\n  each(copy, (key, childValue) => {\n    set(copy, key, currentImpl(childValue));\n  });\n  if (state) {\n    state.finalized_ = false;\n  }\n  return copy;\n}\n\n// src/plugins/mapset.ts\nfunction enableMapSet() {\n  class DraftMap extends Map {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 2 /* Map */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        assigned_: void 0,\n        base_: target,\n        draft_: this,\n        isManual_: false,\n        revoked_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(key) {\n      return latest(this[DRAFT_STATE]).has(key);\n    }\n    set(key, value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!latest(state).has(key) || latest(state).get(key) !== value) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_.set(key, true);\n        state.copy_.set(key, value);\n        state.assigned_.set(key, true);\n      }\n      return this;\n    }\n    delete(key) {\n      if (!this.has(key)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareMapCopy(state);\n      markChanged(state);\n      if (state.base_.has(key)) {\n        state.assigned_.set(key, false);\n      } else {\n        state.assigned_.delete(key);\n      }\n      state.copy_.delete(key);\n      return true;\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_ = /* @__PURE__ */ new Map();\n        each(state.base_, (key) => {\n          state.assigned_.set(key, false);\n        });\n        state.copy_.clear();\n      }\n    }\n    forEach(cb, thisArg) {\n      const state = this[DRAFT_STATE];\n      latest(state).forEach((_value, key, _map) => {\n        cb.call(thisArg, this.get(key), key, this);\n      });\n    }\n    get(key) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      const value = latest(state).get(key);\n      if (state.finalized_ || !isDraftable(value)) {\n        return value;\n      }\n      if (value !== state.base_.get(key)) {\n        return value;\n      }\n      const draft = createProxy(value, state);\n      prepareMapCopy(state);\n      state.copy_.set(key, draft);\n      return draft;\n    }\n    keys() {\n      return latest(this[DRAFT_STATE]).keys();\n    }\n    values() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.values(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value\n          };\n        }\n      };\n    }\n    entries() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.entries(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value: [r.value, value]\n          };\n        }\n      };\n    }\n    [(Symbol.iterator)]() {\n      return this.entries();\n    }\n  }\n  function proxyMap_(target, parent) {\n    return new DraftMap(target, parent);\n  }\n  function prepareMapCopy(state) {\n    if (!state.copy_) {\n      state.assigned_ = /* @__PURE__ */ new Map();\n      state.copy_ = new Map(state.base_);\n    }\n  }\n  class DraftSet extends Set {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 3 /* Set */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        base_: target,\n        draft_: this,\n        drafts_: /* @__PURE__ */ new Map(),\n        revoked_: false,\n        isManual_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!state.copy_) {\n        return state.base_.has(value);\n      }\n      if (state.copy_.has(value))\n        return true;\n      if (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n        return true;\n      return false;\n    }\n    add(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!this.has(value)) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.add(value);\n      }\n      return this;\n    }\n    delete(value) {\n      if (!this.has(value)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      markChanged(state);\n      return state.copy_.delete(value) || (state.drafts_.has(value) ? state.copy_.delete(state.drafts_.get(value)) : (\n        /* istanbul ignore next */\n        false\n      ));\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.clear();\n      }\n    }\n    values() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.values();\n    }\n    entries() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.entries();\n    }\n    keys() {\n      return this.values();\n    }\n    [(Symbol.iterator)]() {\n      return this.values();\n    }\n    forEach(cb, thisArg) {\n      const iterator = this.values();\n      let result = iterator.next();\n      while (!result.done) {\n        cb.call(thisArg, result.value, result.value, this);\n        result = iterator.next();\n      }\n    }\n  }\n  function proxySet_(target, parent) {\n    return new DraftSet(target, parent);\n  }\n  function prepareSetCopy(state) {\n    if (!state.copy_) {\n      state.copy_ = /* @__PURE__ */ new Set();\n      state.base_.forEach((value) => {\n        if (isDraftable(value)) {\n          const draft = createProxy(value, state);\n          state.drafts_.set(value, draft);\n          state.copy_.add(draft);\n        } else {\n          state.copy_.add(value);\n        }\n      });\n    }\n  }\n  function assertUnrevoked(state) {\n    if (state.revoked_)\n      die(3, JSON.stringify(latest(state)));\n  }\n  loadPlugin(\"MapSet\", { proxyMap_, proxySet_ });\n}\n\n// src/plugins/patches.ts\nfunction enablePatches() {\n  const errorOffset = 16;\n  if (process.env.NODE_ENV !== \"production\") {\n    errors.push(\n      'Sets cannot have \"replace\" patches.',\n      function(op) {\n        return \"Unsupported patch operation: \" + op;\n      },\n      function(path) {\n        return \"Cannot apply patch, path doesn't resolve: \" + path;\n      },\n      \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n    );\n  }\n  const REPLACE = \"replace\";\n  const ADD = \"add\";\n  const REMOVE = \"remove\";\n  function generatePatches_(state, basePath, patches, inversePatches) {\n    switch (state.type_) {\n      case 0 /* Object */:\n      case 2 /* Map */:\n        return generatePatchesFromAssigned(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n      case 1 /* Array */:\n        return generateArrayPatches(state, basePath, patches, inversePatches);\n      case 3 /* Set */:\n        return generateSetPatches(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n    }\n  }\n  function generateArrayPatches(state, basePath, patches, inversePatches) {\n    let { base_, assigned_ } = state;\n    let copy_ = state.copy_;\n    if (copy_.length < base_.length) {\n      [base_, copy_] = [copy_, base_];\n      [patches, inversePatches] = [inversePatches, patches];\n    }\n    for (let i = 0; i < base_.length; i++) {\n      if (assigned_[i] && copy_[i] !== base_[i]) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REPLACE,\n          path,\n          // Need to maybe clone it, as it can in fact be the original value\n          // due to the base/copy inversion at the start of this function\n          value: clonePatchValueIfNeeded(copy_[i])\n        });\n        inversePatches.push({\n          op: REPLACE,\n          path,\n          value: clonePatchValueIfNeeded(base_[i])\n        });\n      }\n    }\n    for (let i = base_.length; i < copy_.length; i++) {\n      const path = basePath.concat([i]);\n      patches.push({\n        op: ADD,\n        path,\n        // Need to maybe clone it, as it can in fact be the original value\n        // due to the base/copy inversion at the start of this function\n        value: clonePatchValueIfNeeded(copy_[i])\n      });\n    }\n    for (let i = copy_.length - 1; base_.length <= i; --i) {\n      const path = basePath.concat([i]);\n      inversePatches.push({\n        op: REMOVE,\n        path\n      });\n    }\n  }\n  function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n    const { base_, copy_ } = state;\n    each(state.assigned_, (key, assignedValue) => {\n      const origValue = get(base_, key);\n      const value = get(copy_, key);\n      const op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD;\n      if (origValue === value && op === REPLACE)\n        return;\n      const path = basePath.concat(key);\n      patches.push(op === REMOVE ? { op, path } : { op, path, value });\n      inversePatches.push(\n        op === ADD ? { op: REMOVE, path } : op === REMOVE ? { op: ADD, path, value: clonePatchValueIfNeeded(origValue) } : { op: REPLACE, path, value: clonePatchValueIfNeeded(origValue) }\n      );\n    });\n  }\n  function generateSetPatches(state, basePath, patches, inversePatches) {\n    let { base_, copy_ } = state;\n    let i = 0;\n    base_.forEach((value) => {\n      if (!copy_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REMOVE,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: ADD,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n    i = 0;\n    copy_.forEach((value) => {\n      if (!base_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: ADD,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: REMOVE,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n  }\n  function generateReplacementPatches_(baseValue, replacement, patches, inversePatches) {\n    patches.push({\n      op: REPLACE,\n      path: [],\n      value: replacement === NOTHING ? void 0 : replacement\n    });\n    inversePatches.push({\n      op: REPLACE,\n      path: [],\n      value: baseValue\n    });\n  }\n  function applyPatches_(draft, patches) {\n    patches.forEach((patch) => {\n      const { path, op } = patch;\n      let base = draft;\n      for (let i = 0; i < path.length - 1; i++) {\n        const parentType = getArchtype(base);\n        let p = path[i];\n        if (typeof p !== \"string\" && typeof p !== \"number\") {\n          p = \"\" + p;\n        }\n        if ((parentType === 0 /* Object */ || parentType === 1 /* Array */) && (p === \"__proto__\" || p === \"constructor\"))\n          die(errorOffset + 3);\n        if (typeof base === \"function\" && p === \"prototype\")\n          die(errorOffset + 3);\n        base = get(base, p);\n        if (typeof base !== \"object\")\n          die(errorOffset + 2, path.join(\"/\"));\n      }\n      const type = getArchtype(base);\n      const value = deepClonePatchValue(patch.value);\n      const key = path[path.length - 1];\n      switch (op) {\n        case REPLACE:\n          switch (type) {\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              die(errorOffset);\n            default:\n              return base[key] = value;\n          }\n        case ADD:\n          switch (type) {\n            case 1 /* Array */:\n              return key === \"-\" ? base.push(value) : base.splice(key, 0, value);\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              return base.add(value);\n            default:\n              return base[key] = value;\n          }\n        case REMOVE:\n          switch (type) {\n            case 1 /* Array */:\n              return base.splice(key, 1);\n            case 2 /* Map */:\n              return base.delete(key);\n            case 3 /* Set */:\n              return base.delete(patch.value);\n            default:\n              return delete base[key];\n          }\n        default:\n          die(errorOffset + 1, op);\n      }\n    });\n    return draft;\n  }\n  function deepClonePatchValue(obj) {\n    if (!isDraftable(obj))\n      return obj;\n    if (Array.isArray(obj))\n      return obj.map(deepClonePatchValue);\n    if (isMap$1(obj))\n      return new Map(\n        Array.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n      );\n    if (isSet$1(obj))\n      return new Set(Array.from(obj).map(deepClonePatchValue));\n    const cloned = Object.create(getPrototypeOf(obj));\n    for (const key in obj)\n      cloned[key] = deepClonePatchValue(obj[key]);\n    if (has(obj, DRAFTABLE))\n      cloned[DRAFTABLE] = obj[DRAFTABLE];\n    return cloned;\n  }\n  function clonePatchValueIfNeeded(obj) {\n    if (isDraft(obj)) {\n      return deepClonePatchValue(obj);\n    } else\n      return obj;\n  }\n  loadPlugin(\"Patches\", {\n    applyPatches_,\n    generatePatches_,\n    generateReplacementPatches_\n  });\n}\n\n// src/immer.ts\nvar immer = new Immer2();\nimmer.produce;\nvar produceWithPatches = immer.produceWithPatches.bind(\n  immer\n);\nimmer.setAutoFreeze.bind(immer);\nimmer.setUseStrictShallowCopy.bind(immer);\nvar applyPatches = immer.applyPatches.bind(immer);\nimmer.createDraft.bind(immer);\nimmer.finishDraft.bind(immer);\nenableMapSet();\nenablePatches();\n\n/**\n * Concatenate Writable Tags\n */\nfunction cwt(...allTags) {\n    return allTags\n        .filter(tags => tags !== undefined)\n        .reduce((acc, tags) => acc.concat(tags), []);\n}\nfunction makeRootReplacingPatches(value) {\n    return [\n        {\n            op: \"replace\",\n            path: [],\n            value,\n        },\n    ];\n}\n/**\n * Creates a setter function that can be used to update a value. This setter will also return the\n * patches that were applied to the value.\n */\nfunction makeSetterWithPatches(update, prependTagsFn) {\n    const setter = (value, tags) => {\n        update(() => [value, makeRootReplacingPatches(value)], cwt(prependTagsFn?.(), tags));\n    };\n    setter.withProducer = (producer, tags) => {\n        update(oldData => {\n            const [newData, patches] = produceWithPatches(oldData, producer);\n            if (isAvailable(newData)) {\n                return [newData, patches];\n            }\n            throw new Error(\"Cannot update value to NOT_AVAILABLE\");\n        }, cwt(prependTagsFn?.(), tags));\n    };\n    setter.withUpdater = (updater, tags) => {\n        update(oldData => {\n            const newData = updater(oldData);\n            return [newData, makeRootReplacingPatches(newData)];\n        }, cwt(prependTagsFn?.(), tags));\n    };\n    setter.withPatchUpdater = (updater, tags) => {\n        update(updater, cwt(prependTagsFn?.(), tags));\n    };\n    setter.withPatches = (patches, tags) => {\n        update(oldData => {\n            return [applyPatches(oldData, patches), patches];\n        }, cwt(prependTagsFn?.(), tags));\n    };\n    setter.withValueAndPatches = (newValue, patches, tags) => {\n        update(() => [newValue, patches], cwt(prependTagsFn?.(), tags));\n    };\n    return setter;\n}\n\nconst equals = (a, b) => a === b;\n/**\n * A signal is a wrapper for a value. It can be used to notify subscribers when the value changes.\n * For it to work properly, the value should be immutable.\n *\n * To create a signal, please use the `Signal.create` static method. It will return a signal\n * along with a function to update its value.\n */\nclass Signal extends Subscribable {\n    /**\n     * Creates a signal.\n     *\n     * @param value - The initial value of the signal.\n     * @param equalsPredicate - A function to compare two values. The subscribers will only be called\n     * if the value changes according to the `equalsPredicate`. By default, it uses the `===`\n     * operator.\n     * @returns This method returns a tuple with two elements:\n     * - The signal\n     * - A function to update the value\n     **/\n    static create(value, equalsPredicate = equals) {\n        const signal = new Signal(value, equalsPredicate);\n        const update = (updater, tags) => {\n            signal.update(updater, tags);\n        };\n        const setter = makeSetterWithPatches(update);\n        return [signal, setter];\n    }\n    static createReadonly(value) {\n        return Signal.create(value)[0];\n    }\n    constructor(value, equalsPredicate) {\n        super();\n        this.value = value;\n        this.equalsPredicate = equalsPredicate;\n        this.subscribers = new Set();\n        this.queuedUpdaters = [];\n        this.isEmitting = false;\n    }\n    /**\n     * Returns the current value of the signal.\n     */\n    get() {\n        return this.value;\n    }\n    pull() {\n        return this.value;\n    }\n    notifyFull(value, patches, tags) {\n        for (const { type, callback } of this.subscribers) {\n            if (type === \"full\") {\n                callback(value, patches, tags);\n            }\n        }\n    }\n    notifyAll(value, patches, tags) {\n        for (const { type, callback } of this.subscribers) {\n            if (type === \"regular\") {\n                callback(value);\n            }\n            else {\n                callback(value, patches, tags);\n            }\n        }\n    }\n    notifyAndUpdateIfChanged(value, patches, tags) {\n        // If the value has changed, or if there are any tags that need to be flushed, notify\n        if (!this.equalsPredicate(this.value, value)) {\n            this.value = value;\n            // If the values have changed, notify everyone\n            this.notifyAll(value, patches, tags);\n        }\n        else if (tags.length > 0) {\n            // If values not changed, but there is a tag to be flushed, notify only full subscribers\n            this.notifyFull(value, patches, tags);\n        }\n    }\n    isReplaceRoot(patch) {\n        return patch.path.length === 0 && patch.op === \"replace\";\n    }\n    update(updater, tags) {\n        this.queuedUpdaters.push([updater, tags]);\n        // Only one concurrent update may emit\n        if (this.isEmitting) {\n            return;\n        }\n        this.isEmitting = true;\n        try {\n            // Outer while is for handling new updates caused by the notify\n            while (this.queuedUpdaters.length > 0) {\n                let value = this.value;\n                let patches = [];\n                const tags = [];\n                // Inner while is for handling multiple updates\n                while (this.queuedUpdaters.length > 0) {\n                    const [updater, newTags] = this.queuedUpdaters.shift();\n                    const [newValue, newPatches] = updater(value);\n                    value = newValue;\n                    // Extremely rudimentary patch merging\n                    const rootReplacerIndex = newPatches.findIndex(this.isReplaceRoot);\n                    if (rootReplacerIndex !== -1) {\n                        patches = newPatches.slice(rootReplacerIndex);\n                    }\n                    else {\n                        patches.push(...newPatches);\n                    }\n                    if (newTags !== undefined) {\n                        tags.push(...newTags);\n                    }\n                }\n                this.notifyAndUpdateIfChanged(value, patches, tags);\n            }\n        }\n        finally {\n            this.isEmitting = false;\n        }\n    }\n    /**\n     * Subscribes to the signal. The callback will be called whenever the value changes. All callbacks\n     * are called synchronously upon updating. It will NOT be immediately called with the current\n     * value. (Use `get()` to get the current value.) Returns a function to unsubscribe.\n     *\n     * Edge cases involving manipulating the signal in the callback:\n     *\n     * - If the callback adds new subscribers, they will also be called within the same update.\n     * - If the callback causes removal of subscribers that have not been called yet, they will no\n     *   longer be called.\n     * - If the callback causes an update of the value, the update will be queued. If multiple updates\n     *   are queued, only the last one will be executed.\n     *\n     * Edge cases involving adding the same callback multiple times.\n     *\n     *  - Callbacks are tracked with a set. Adding the same subscriber will not cause it to be called\n     *    multiple times.\n     */\n    subscribe(callback) {\n        const subscriber = {\n            type: \"regular\",\n            callback,\n        };\n        this.subscribers.add(subscriber);\n        return () => {\n            this.subscribers.delete(subscriber);\n        };\n    }\n    /**\n     * Subscribes to the signal with the callback and trigger the callback immediately with the\n     * current value.\n     */\n    subscribeAndNow(callback) {\n        const unsubscribe = this.subscribe(callback);\n        callback(this.value);\n        return unsubscribe;\n    }\n    subscribeFull(callback) {\n        const subscriber = {\n            type: \"full\",\n            callback,\n        };\n        this.subscribers.add(subscriber);\n        return () => {\n            this.subscribers.delete(subscriber);\n        };\n    }\n    /**\n     * Wait until the signal satisfies a predicate. If the predicate is already satisfied, it will\n     * return immediately. Otherwise, it will wait until the signal satisfies the predicate.\n     */\n    async until(predicate) {\n        const current = this.get();\n        if (predicate(current)) {\n            return current;\n        }\n        const { promise, resolve } = makePromise();\n        const unsubscribe = this.subscribe(data => {\n            if (predicate(data)) {\n                resolve(data);\n                unsubscribe();\n            }\n        });\n        return await promise;\n    }\n}\n\nfunction isAvailable(data) {\n    return data !== LazySignal.NOT_AVAILABLE;\n}\n/**\n * A lazy signal is a signal that will only subscribe to the upstream when at least one subscriber\n * is attached. It will unsubscribe from the upstream when the last subscriber is removed.\n *\n * A lazy signal can possess a special value \"NOT_AVAILABLE\", accessible from the static property\n * {@link LazySignal.NOT_AVAILABLE}. This value is used to indicate that the value is not available\n * yet. This can happen when the signal is created without an initial value and the upstream has not\n * emitted a value yet.\n */\nclass LazySignal extends Subscribable {\n    static { this.NOT_AVAILABLE = Symbol(\"notAvailable\"); }\n    static create(initialValue, subscribeUpstream, equalsPredicate = (a, b) => a === b) {\n        return new LazySignal(initialValue, subscribeUpstream, equalsPredicate);\n    }\n    static createWithoutInitialValue(subscribeUpstream, equalsPredicate = (a, b) => a === b) {\n        const fullEqualsPredicate = (a, b) => {\n            if (a === LazySignal.NOT_AVAILABLE || b === LazySignal.NOT_AVAILABLE) {\n                return a === b;\n            }\n            return equalsPredicate(a, b);\n        };\n        return new LazySignal(LazySignal.NOT_AVAILABLE, subscribeUpstream, fullEqualsPredicate);\n    }\n    static deriveFrom(sourceSignals, deriver, outputEqualsPredicate) {\n        let fullEqualsPredicate = undefined;\n        if (outputEqualsPredicate !== undefined) {\n            fullEqualsPredicate = (a, b) => {\n                if (a === LazySignal.NOT_AVAILABLE || b === LazySignal.NOT_AVAILABLE) {\n                    return a === b;\n                }\n                return outputEqualsPredicate(a, b);\n            };\n        }\n        const derive = () => {\n            const sourceValues = sourceSignals.map(signal => signal.get());\n            if (sourceValues.some(value => value === LazySignal.NOT_AVAILABLE)) {\n                return LazySignal.NOT_AVAILABLE;\n            }\n            return deriver(...sourceValues);\n        };\n        return new LazySignal(derive(), setDownstream => {\n            const unsubscriber = sourceSignals.map(signal => signal.subscribe(() => {\n                const value = derive();\n                if (isAvailable(value)) {\n                    setDownstream(value);\n                }\n            }));\n            const newValue = derive();\n            if (isAvailable(newValue)) {\n                setDownstream(newValue);\n            }\n            return () => {\n                unsubscriber.forEach(unsub => unsub());\n            };\n        }, fullEqualsPredicate);\n    }\n    static asyncDeriveFrom(strategy, sourceSignals, deriver, outputEqualsPredicate) {\n        let fullEqualsPredicate = undefined;\n        if (outputEqualsPredicate !== undefined) {\n            fullEqualsPredicate = (a, b) => {\n                if (a === LazySignal.NOT_AVAILABLE || b === LazySignal.NOT_AVAILABLE) {\n                    return a === b;\n                }\n                return outputEqualsPredicate(a, b);\n            };\n        }\n        let lastAppliedUpdateId = -1;\n        let lastIssuedUpdateId = -1;\n        return new LazySignal(LazySignal.NOT_AVAILABLE, setDownstream => {\n            const deriveAndUpdate = () => {\n                lastIssuedUpdateId++;\n                const updateId = lastIssuedUpdateId;\n                const sourceValues = sourceSignals.map(signal => signal.get());\n                if (sourceValues.some(value => value === LazySignal.NOT_AVAILABLE)) {\n                    return;\n                }\n                deriver(...sourceValues).then(result => {\n                    if (!isAvailable(result)) {\n                        return;\n                    }\n                    switch (strategy) {\n                        case \"eager\": {\n                            if (updateId > lastAppliedUpdateId) {\n                                lastAppliedUpdateId = updateId;\n                                setDownstream(result);\n                            }\n                            break;\n                        }\n                        default: {\n                            const exhaustiveCheck = strategy;\n                            throw new Error(`Unknown strategy: ${exhaustiveCheck}`);\n                        }\n                    }\n                });\n            };\n            const unsubscriber = sourceSignals.map(signal => signal.subscribe(() => {\n                deriveAndUpdate();\n            }));\n            deriveAndUpdate();\n            return () => {\n                unsubscriber.forEach(unsub => unsub());\n            };\n        }, fullEqualsPredicate);\n    }\n    constructor(initialValue, subscribeUpstream, equalsPredicate = (a, b) => a === b) {\n        super();\n        this.subscribeUpstream = subscribeUpstream;\n        this.dataIsStale = true;\n        this.upstreamUnsubscribe = null;\n        this.subscribersCount = 0;\n        this.isSubscribedToUpstream = false;\n        this.updateReceivedSynchronousCallbacks = new Set();\n        [this.signal, this.setValue] = Signal.create(initialValue, equalsPredicate);\n        [this.updateReceivedEvent, this.emitUpdateReceivedEvent] = Event.create();\n    }\n    /**\n     * Returns whether the value is currently stale.\n     *\n     * A value is stale whenever the upstream subscription is not active. This can happen in three\n     * cases:\n     *\n     * 1. When no subscriber is attached to this signal, the signal will not subscribe to the\n     *    upstream. In this case, the value is always stale.\n     * 2. When a subscriber is attached, but the upstream has not yet emitted a single value, the\n     *    value is also stale.\n     * 3. When the upstream has emitted an error. In this case, the subscription to the upstream is\n     *    terminated and the value is stale.\n     *\n     * If you wish to get the current value and ensure that it is not stale, use the method\n     * {@link LazySignal#pull}.\n     */\n    isStale() {\n        return this.dataIsStale;\n    }\n    subscribeToUpstream() {\n        this.isSubscribedToUpstream = true;\n        let subscribed = true;\n        let becameStale = false;\n        const unsubscribeFromUpstream = this.subscribeUpstream(makeSetterWithPatches((updater, tags) => {\n            if (!subscribed) {\n                return;\n            }\n            this.setValue.withPatchUpdater(updater, tags);\n            this.dataIsStale = becameStale;\n            this.emitUpdateReceivedEvent();\n            for (const callback of this.updateReceivedSynchronousCallbacks) {\n                callback();\n            }\n        }), error => {\n            if (!subscribed) {\n                return;\n            }\n            Promise.reject(error); // Prints a global error for now\n            this.dataIsStale = true;\n            this.isSubscribedToUpstream = false;\n            this.upstreamUnsubscribe = null;\n            subscribed = false;\n        });\n        this.upstreamUnsubscribe = () => {\n            if (subscribed) {\n                subscribed = false;\n                becameStale = true;\n                unsubscribeFromUpstream();\n            }\n        };\n    }\n    unsubscribeFromUpstream() {\n        this.isSubscribedToUpstream = false;\n        if (this.upstreamUnsubscribe !== null) {\n            this.upstreamUnsubscribe();\n            this.upstreamUnsubscribe = null;\n            this.dataIsStale = true;\n        }\n    }\n    /**\n     * Gets the current value of the signal. If the value is not available, it will return\n     * {@link LazySignal.NOT_AVAILABLE}. (A value will only be unavailable if the signal is created\n     * without an initial value and the upstream has not emitted a value yet.)\n     *\n     * In addition, the value returned by this method may be stale. Use {@link LazySignal#isStale} to\n     * check if the value is stale.\n     *\n     * If you wish to get the current value and ensure that it is not stale, use the method\n     * {@link LazySignal#pull}.\n     */\n    get() {\n        return this.signal.get();\n    }\n    /**\n     * Pulls the current value of the signal. If the value is stale, it will subscribe and wait for\n     * the next value from the upstream and return it.\n     */\n    async pull() {\n        const { promise, resolve } = makePromise();\n        if (!this.isStale()) {\n            // If not stale, definitely not \"NOT_AVAILABLE\"\n            resolve(this.get());\n        }\n        else {\n            const unsubscribe = this.subscribe(() => { });\n            this.updateReceivedEvent.subscribeOnce(() => {\n                resolve(this.get());\n            });\n            promise.then(unsubscribe);\n        }\n        return promise;\n    }\n    /**\n     * If the data is not stale, the callback will be called synchronously with the current value.\n     *\n     * If the data is stale, it will pull the current value and call the callback with the value.\n     */\n    runOnNextFreshData(callback) {\n        if (!this.isStale()) {\n            callback(this.get());\n        }\n        else {\n            let unsubscribe = null;\n            const updateCallback = () => {\n                this.updateReceivedSynchronousCallbacks.delete(updateCallback);\n                callback(this.get());\n                unsubscribe?.();\n            };\n            this.updateReceivedSynchronousCallbacks.add(updateCallback);\n            unsubscribe = this.subscribe(() => { });\n        }\n    }\n    async ensureAvailable() {\n        await this.pull();\n        return this;\n    }\n    subscribe(subscriber) {\n        if (!this.isSubscribedToUpstream) {\n            this.subscribeToUpstream();\n        }\n        this.subscribersCount++;\n        const unsubscribe = this.signal.subscribe(subscriber);\n        let unsubscribeCalled = false;\n        return () => {\n            if (unsubscribeCalled) {\n                return;\n            }\n            unsubscribe();\n            unsubscribeCalled = true;\n            this.subscribersCount--;\n            if (this.subscribersCount === 0 && this.isSubscribedToUpstream) {\n                this.unsubscribeFromUpstream();\n            }\n        };\n    }\n    subscribeFull(subscriber) {\n        if (!this.isSubscribedToUpstream) {\n            this.subscribeToUpstream();\n        }\n        this.subscribersCount++;\n        const unsubscribe = this.signal.subscribeFull(subscriber);\n        let unsubscribeCalled = false;\n        return () => {\n            if (unsubscribeCalled) {\n                return;\n            }\n            unsubscribe();\n            unsubscribeCalled = true;\n            this.subscribersCount--;\n            if (this.subscribersCount === 0 && this.isSubscribedToUpstream) {\n                this.unsubscribeFromUpstream();\n            }\n        };\n    }\n    /**\n     * Subscribes to the signal. Will not cause the signal to subscribe to the upstream.\n     */\n    passiveSubscribe(subscriber) {\n        return this.signal.subscribe(subscriber);\n    }\n    passiveSubscribeFull(subscriber) {\n        return this.signal.subscribeFull(subscriber);\n    }\n    async until(predicate) {\n        const current = this.get();\n        if (isAvailable(current) && predicate(current)) {\n            return current;\n        }\n        const { promise, resolve } = makePromise();\n        const unsubscribe = this.subscribe(data => {\n            if (isAvailable(data) && predicate(data)) {\n                resolve(data);\n                unsubscribe();\n            }\n        });\n        return await promise;\n    }\n}\n\nconst apiServerPorts = [41343, 52993, 16141, 39414, 22931];\n\nconst waitForNextMicroTask = Symbol();\n/**\n * A buffered event will buffer events in a queue if no subscribers are present. When a subscriber\n * is added, all buffered events will trigger sequentially in the next microtask.\n *\n * Similar to Event, events are always emitted during the next microtask.\n *\n * Attempting to add more than one subscriber will resulting in an error.\n */\nclass BufferedEvent extends Subscribable {\n    static create() {\n        const event = new BufferedEvent();\n        const emitter = data => {\n            event.emit(data);\n        };\n        return [event, emitter];\n    }\n    constructor() {\n        super();\n        this.subscriber = null;\n        this.queued = [];\n        this.isNotifying = false;\n    }\n    emit(data) {\n        if (this.queued.length === 0 && this.queued.at(-1) !== waitForNextMicroTask) {\n            this.queued.push(waitForNextMicroTask);\n        }\n        this.queued.push(data);\n        if (!this.isNotifying) {\n            this.notifier();\n        }\n    }\n    async notifier() {\n        this.isNotifying = true;\n        while (this.subscriber !== null && this.queued.length > 0) {\n            const data = this.queued.shift();\n            if (data === waitForNextMicroTask) {\n                await Promise.resolve();\n            }\n            else {\n                this.subscriber(data);\n            }\n        }\n        this.isNotifying = false;\n    }\n    subscribe(listener) {\n        if (this.subscriber !== null) {\n            throw new Error(\"Cannot have more than one subscriber\");\n        }\n        this.subscriber = listener;\n        if (!this.isNotifying && this.queued.length > 0) {\n            this.queued = [\n                waitForNextMicroTask,\n                ...this.queued.filter(data => data !== waitForNextMicroTask),\n            ];\n            this.notifier();\n        }\n        return () => {\n            this.subscriber = null;\n        };\n    }\n    /**\n     * Convert this buffered event to an event by stop buffering and triggering events on the new\n     * returned event.\n     */\n    flow() {\n        const [event, emit] = Event.create();\n        this.subscribe(emit);\n        return event;\n    }\n}\n\nclass CancelEvent extends Subscribable {\n    constructor() {\n        super(...arguments);\n        this.canceled = false;\n        this.listeners = new Set();\n    }\n    subscribe(listener) {\n        if (this.canceled) {\n            let callbackCanceled = false;\n            Promise.resolve().then(() => {\n                if (!callbackCanceled) {\n                    listener();\n                }\n            });\n            return () => {\n                callbackCanceled = true;\n            };\n        }\n        this.listeners.add(listener);\n        return () => {\n            this.listeners.delete(listener);\n        };\n    }\n    cancel() {\n        if (this.canceled) {\n            throw new Error(\"Already canceled\");\n        }\n        this.canceled = true;\n        for (const listener of this.listeners) {\n            listener();\n        }\n    }\n    isCanceled() {\n        return this.canceled;\n    }\n}\n\nclass Cleaner {\n    constructor() {\n        this.eagerCleaned = false;\n        this.disposed = false;\n        this.cleanups = [];\n    }\n    register(fn) {\n        if (this.eagerCleaned) {\n            throw new Error(\"Cannot register a cleanup after eagerClean() was called.\");\n        }\n        if (this.disposed) {\n            throw new Error(\"Cannot register a cleanup after the Cleaner was disposed.\");\n        }\n        this.cleanups.push(fn);\n    }\n    runCleanersInternal() {\n        for (const cleanup of this.cleanups) {\n            cleanup();\n        }\n        // Just to free some memory because why not\n        this.cleanups.length = 0;\n    }\n    [Symbol.dispose]() {\n        if (this.eagerCleaned) {\n            // Already eagerly cleaned. Nothing to do.\n            return;\n        }\n        if (this.disposed) {\n            throw new Error(\"Cannot dispose a Cleaner that was already disposed.\");\n        }\n        this.runCleanersInternal();\n    }\n    eagerClean() {\n        if (this.eagerCleaned) {\n            throw new Error(\"Cannot call eagerClean() twice.\");\n        }\n        if (this.disposed) {\n            throw new Error(\"Cannot call eagerClean() after the Cleaner was disposed.\");\n        }\n        this.eagerCleaned = true;\n        this.runCleanersInternal();\n    }\n}\n\n// Error stack manipulation related functions\nfunction getCurrentStack(goAbove = 0) {\n    const stack = new Error().stack;\n    if (!stack) {\n        return \"\";\n    }\n    const lines = stack.split(\"\\n\");\n    return lines.slice(2 + goAbove).join(\"\\n\");\n}\nfunction changeErrorStackInPlace(error, newStack) {\n    if (process$1.env.LMS_KEEP_INTERNAL_STACK) {\n        return;\n    }\n    const stackContent = error.stack ?? \"\";\n    error.stack = (stackContent.substring(0, stackContent.indexOf(\"\\n    at \")).trimEnd() +\n        \"\\n\" +\n        newStack).trimEnd();\n}\n\nclass IdGiver {\n    constructor(firstId = 0) {\n        this.nextId = firstId;\n    }\n    next() {\n        const id = this.nextId;\n        this.nextId++;\n        return id;\n    }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar boxen$1 = {exports: {}};\n\nvar stringWidth = {exports: {}};\n\nvar ansiRegex;\nvar hasRequiredAnsiRegex;\n\nfunction requireAnsiRegex () {\n\tif (hasRequiredAnsiRegex) return ansiRegex;\n\thasRequiredAnsiRegex = 1;\n\n\tansiRegex = ({onlyFirst = false} = {}) => {\n\t\tconst pattern = [\n\t\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t\t].join('|');\n\n\t\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n\t};\n\treturn ansiRegex;\n}\n\nvar stripAnsi;\nvar hasRequiredStripAnsi;\n\nfunction requireStripAnsi () {\n\tif (hasRequiredStripAnsi) return stripAnsi;\n\thasRequiredStripAnsi = 1;\n\tconst ansiRegex = requireAnsiRegex();\n\n\tstripAnsi = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n\treturn stripAnsi;\n}\n\nvar isFullwidthCodePoint = {exports: {}};\n\n/* eslint-disable yoda */\n\nvar hasRequiredIsFullwidthCodePoint;\n\nfunction requireIsFullwidthCodePoint () {\n\tif (hasRequiredIsFullwidthCodePoint) return isFullwidthCodePoint.exports;\n\thasRequiredIsFullwidthCodePoint = 1;\n\n\tconst isFullwidthCodePoint$1 = codePoint => {\n\t\tif (Number.isNaN(codePoint)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Code points are derived from:\n\t\t// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\t\tif (\n\t\t\tcodePoint >= 0x1100 && (\n\t\t\t\tcodePoint <= 0x115F || // Hangul Jamo\n\t\t\t\tcodePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n\t\t\t\tcodePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n\t\t\t\t// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n\t\t\t\t(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\n\t\t\t\t// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n\t\t\t\t(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\n\t\t\t\t// CJK Unified Ideographs .. Yi Radicals\n\t\t\t\t(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\n\t\t\t\t// Hangul Jamo Extended-A\n\t\t\t\t(0xA960 <= codePoint && codePoint <= 0xA97C) ||\n\t\t\t\t// Hangul Syllables\n\t\t\t\t(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n\t\t\t\t// CJK Compatibility Ideographs\n\t\t\t\t(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n\t\t\t\t// Vertical Forms\n\t\t\t\t(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n\t\t\t\t// CJK Compatibility Forms .. Small Form Variants\n\t\t\t\t(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\n\t\t\t\t// Halfwidth and Fullwidth Forms\n\t\t\t\t(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n\t\t\t\t(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\n\t\t\t\t// Kana Supplement\n\t\t\t\t(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n\t\t\t\t// Enclosed Ideographic Supplement\n\t\t\t\t(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\n\t\t\t\t// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n\t\t\t\t(0x20000 <= codePoint && codePoint <= 0x3FFFD)\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tisFullwidthCodePoint.exports = isFullwidthCodePoint$1;\n\tisFullwidthCodePoint.exports.default = isFullwidthCodePoint$1;\n\treturn isFullwidthCodePoint.exports;\n}\n\nvar emojiRegex;\nvar hasRequiredEmojiRegex;\n\nfunction requireEmojiRegex () {\n\tif (hasRequiredEmojiRegex) return emojiRegex;\n\thasRequiredEmojiRegex = 1;\n\n\temojiRegex = function () {\n\t  // https://mths.be/emoji\n\t  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n\t};\n\treturn emojiRegex;\n}\n\nvar hasRequiredStringWidth;\n\nfunction requireStringWidth () {\n\tif (hasRequiredStringWidth) return stringWidth.exports;\n\thasRequiredStringWidth = 1;\n\tconst stripAnsi = requireStripAnsi();\n\tconst isFullwidthCodePoint = requireIsFullwidthCodePoint();\n\tconst emojiRegex = requireEmojiRegex();\n\n\tconst stringWidth$1 = string => {\n\t\tif (typeof string !== 'string' || string.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tstring = stripAnsi(string);\n\n\t\tif (string.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tstring = string.replace(emojiRegex(), '  ');\n\n\t\tlet width = 0;\n\n\t\tfor (let i = 0; i < string.length; i++) {\n\t\t\tconst code = string.codePointAt(i);\n\n\t\t\t// Ignore control characters\n\t\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Ignore combining characters\n\t\t\tif (code >= 0x300 && code <= 0x36F) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Surrogates\n\t\t\tif (code > 0xFFFF) {\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\n\t\t}\n\n\t\treturn width;\n\t};\n\n\tstringWidth.exports = stringWidth$1;\n\t// TODO: remove this in the next major version\n\tstringWidth.exports.default = stringWidth$1;\n\treturn stringWidth.exports;\n}\n\nvar widestLine = {exports: {}};\n\nvar hasRequiredWidestLine;\n\nfunction requireWidestLine () {\n\tif (hasRequiredWidestLine) return widestLine.exports;\n\thasRequiredWidestLine = 1;\n\tconst stringWidth = requireStringWidth();\n\n\tconst widestLine$1 = input => {\n\t\tlet max = 0;\n\n\t\tfor (const line of input.split('\\n')) {\n\t\t\tmax = Math.max(max, stringWidth(line));\n\t\t}\n\n\t\treturn max;\n\t};\n\n\twidestLine.exports = widestLine$1;\n\t// TODO: remove this in the next major version\n\twidestLine.exports.default = widestLine$1;\n\treturn widestLine.exports;\n}\n\nvar cliBoxes = {exports: {}};\n\nvar single = {\n\ttopLeft: \"┌\",\n\ttopRight: \"┐\",\n\tbottomRight: \"┘\",\n\tbottomLeft: \"└\",\n\tvertical: \"│\",\n\thorizontal: \"─\"\n};\nvar double = {\n\ttopLeft: \"╔\",\n\ttopRight: \"╗\",\n\tbottomRight: \"╝\",\n\tbottomLeft: \"╚\",\n\tvertical: \"║\",\n\thorizontal: \"═\"\n};\nvar round = {\n\ttopLeft: \"╭\",\n\ttopRight: \"╮\",\n\tbottomRight: \"╯\",\n\tbottomLeft: \"╰\",\n\tvertical: \"│\",\n\thorizontal: \"─\"\n};\nvar bold = {\n\ttopLeft: \"┏\",\n\ttopRight: \"┓\",\n\tbottomRight: \"┛\",\n\tbottomLeft: \"┗\",\n\tvertical: \"┃\",\n\thorizontal: \"━\"\n};\nvar singleDouble = {\n\ttopLeft: \"╓\",\n\ttopRight: \"╖\",\n\tbottomRight: \"╜\",\n\tbottomLeft: \"╙\",\n\tvertical: \"║\",\n\thorizontal: \"─\"\n};\nvar doubleSingle = {\n\ttopLeft: \"╒\",\n\ttopRight: \"╕\",\n\tbottomRight: \"╛\",\n\tbottomLeft: \"╘\",\n\tvertical: \"│\",\n\thorizontal: \"═\"\n};\nvar classic = {\n\ttopLeft: \"+\",\n\ttopRight: \"+\",\n\tbottomRight: \"+\",\n\tbottomLeft: \"+\",\n\tvertical: \"|\",\n\thorizontal: \"-\"\n};\nvar require$$0 = {\n\tsingle: single,\n\tdouble: double,\n\tround: round,\n\tbold: bold,\n\tsingleDouble: singleDouble,\n\tdoubleSingle: doubleSingle,\n\tclassic: classic\n};\n\nvar hasRequiredCliBoxes;\n\nfunction requireCliBoxes () {\n\tif (hasRequiredCliBoxes) return cliBoxes.exports;\n\thasRequiredCliBoxes = 1;\n\tconst cliBoxes$1 = require$$0;\n\n\tcliBoxes.exports = cliBoxes$1;\n\t// TODO: Remove this for the next major release\n\tcliBoxes.exports.default = cliBoxes$1;\n\treturn cliBoxes.exports;\n}\n\nvar camelcase = {exports: {}};\n\nvar hasRequiredCamelcase;\n\nfunction requireCamelcase () {\n\tif (hasRequiredCamelcase) return camelcase.exports;\n\thasRequiredCamelcase = 1;\n\n\tconst UPPERCASE = /[\\p{Lu}]/u;\n\tconst LOWERCASE = /[\\p{Ll}]/u;\n\tconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\n\tconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\n\tconst SEPARATORS = /[_.\\- ]+/;\n\n\tconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\n\tconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\n\tconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\n\tconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\t\tlet isLastCharLower = false;\n\t\tlet isLastCharUpper = false;\n\t\tlet isLastLastCharUpper = false;\n\n\t\tfor (let i = 0; i < string.length; i++) {\n\t\t\tconst character = string[i];\n\n\t\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\t\tisLastCharLower = false;\n\t\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\t\tisLastCharUpper = true;\n\t\t\t\ti++;\n\t\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\t\tisLastCharUpper = false;\n\t\t\t\tisLastCharLower = true;\n\t\t\t} else {\n\t\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t\t}\n\t\t}\n\n\t\treturn string;\n\t};\n\n\tconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\t\tLEADING_CAPITAL.lastIndex = 0;\n\n\t\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n\t};\n\n\tconst postProcess = (input, toUpperCase) => {\n\t\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\t\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\t\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n\t};\n\n\tconst camelCase = (input, options) => {\n\t\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t\t}\n\n\t\toptions = {\n\t\t\tpascalCase: false,\n\t\t\tpreserveConsecutiveUppercase: false,\n\t\t\t...options\n\t\t};\n\n\t\tif (Array.isArray(input)) {\n\t\t\tinput = input.map(x => x.trim())\n\t\t\t\t.filter(x => x.length)\n\t\t\t\t.join('-');\n\t\t} else {\n\t\t\tinput = input.trim();\n\t\t}\n\n\t\tif (input.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst toLowerCase = options.locale === false ?\n\t\t\tstring => string.toLowerCase() :\n\t\t\tstring => string.toLocaleLowerCase(options.locale);\n\t\tconst toUpperCase = options.locale === false ?\n\t\t\tstring => string.toUpperCase() :\n\t\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\t\tif (input.length === 1) {\n\t\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t\t}\n\n\t\tconst hasUpperCase = input !== toLowerCase(input);\n\n\t\tif (hasUpperCase) {\n\t\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t\t}\n\n\t\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\t\tif (options.preserveConsecutiveUppercase) {\n\t\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t\t} else {\n\t\t\tinput = toLowerCase(input);\n\t\t}\n\n\t\tif (options.pascalCase) {\n\t\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t\t}\n\n\t\treturn postProcess(input, toUpperCase);\n\t};\n\n\tcamelcase.exports = camelCase;\n\t// TODO: Remove this for the next major release\n\tcamelcase.exports.default = camelCase;\n\treturn camelcase.exports;\n}\n\nvar ansiAlign_1;\nvar hasRequiredAnsiAlign;\n\nfunction requireAnsiAlign () {\n\tif (hasRequiredAnsiAlign) return ansiAlign_1;\n\thasRequiredAnsiAlign = 1;\n\n\tconst stringWidth = requireStringWidth();\n\n\tfunction ansiAlign (text, opts) {\n\t  if (!text) return text\n\n\t  opts = opts || {};\n\t  const align = opts.align || 'center';\n\n\t  // short-circuit `align: 'left'` as no-op\n\t  if (align === 'left') return text\n\n\t  const split = opts.split || '\\n';\n\t  const pad = opts.pad || ' ';\n\t  const widthDiffFn = align !== 'right' ? halfDiff : fullDiff;\n\n\t  let returnString = false;\n\t  if (!Array.isArray(text)) {\n\t    returnString = true;\n\t    text = String(text).split(split);\n\t  }\n\n\t  let width;\n\t  let maxWidth = 0;\n\t  text = text.map(function (str) {\n\t    str = String(str);\n\t    width = stringWidth(str);\n\t    maxWidth = Math.max(width, maxWidth);\n\t    return {\n\t      str,\n\t      width\n\t    }\n\t  }).map(function (obj) {\n\t    return new Array(widthDiffFn(maxWidth, obj.width) + 1).join(pad) + obj.str\n\t  });\n\n\t  return returnString ? text.join(split) : text\n\t}\n\n\tansiAlign.left = function left (text) {\n\t  return ansiAlign(text, { align: 'left' })\n\t};\n\n\tansiAlign.center = function center (text) {\n\t  return ansiAlign(text, { align: 'center' })\n\t};\n\n\tansiAlign.right = function right (text) {\n\t  return ansiAlign(text, { align: 'right' })\n\t};\n\n\tansiAlign_1 = ansiAlign;\n\n\tfunction halfDiff (maxWidth, curWidth) {\n\t  return Math.floor((maxWidth - curWidth) / 2)\n\t}\n\n\tfunction fullDiff (maxWidth, curWidth) {\n\t  return maxWidth - curWidth\n\t}\n\treturn ansiAlign_1;\n}\n\nvar ansiStyles = {exports: {}};\n\nvar colorName;\nvar hasRequiredColorName;\n\nfunction requireColorName () {\n\tif (hasRequiredColorName) return colorName;\n\thasRequiredColorName = 1;\n\r\n\tcolorName = {\r\n\t\t\"aliceblue\": [240, 248, 255],\r\n\t\t\"antiquewhite\": [250, 235, 215],\r\n\t\t\"aqua\": [0, 255, 255],\r\n\t\t\"aquamarine\": [127, 255, 212],\r\n\t\t\"azure\": [240, 255, 255],\r\n\t\t\"beige\": [245, 245, 220],\r\n\t\t\"bisque\": [255, 228, 196],\r\n\t\t\"black\": [0, 0, 0],\r\n\t\t\"blanchedalmond\": [255, 235, 205],\r\n\t\t\"blue\": [0, 0, 255],\r\n\t\t\"blueviolet\": [138, 43, 226],\r\n\t\t\"brown\": [165, 42, 42],\r\n\t\t\"burlywood\": [222, 184, 135],\r\n\t\t\"cadetblue\": [95, 158, 160],\r\n\t\t\"chartreuse\": [127, 255, 0],\r\n\t\t\"chocolate\": [210, 105, 30],\r\n\t\t\"coral\": [255, 127, 80],\r\n\t\t\"cornflowerblue\": [100, 149, 237],\r\n\t\t\"cornsilk\": [255, 248, 220],\r\n\t\t\"crimson\": [220, 20, 60],\r\n\t\t\"cyan\": [0, 255, 255],\r\n\t\t\"darkblue\": [0, 0, 139],\r\n\t\t\"darkcyan\": [0, 139, 139],\r\n\t\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\t\"darkgray\": [169, 169, 169],\r\n\t\t\"darkgreen\": [0, 100, 0],\r\n\t\t\"darkgrey\": [169, 169, 169],\r\n\t\t\"darkkhaki\": [189, 183, 107],\r\n\t\t\"darkmagenta\": [139, 0, 139],\r\n\t\t\"darkolivegreen\": [85, 107, 47],\r\n\t\t\"darkorange\": [255, 140, 0],\r\n\t\t\"darkorchid\": [153, 50, 204],\r\n\t\t\"darkred\": [139, 0, 0],\r\n\t\t\"darksalmon\": [233, 150, 122],\r\n\t\t\"darkseagreen\": [143, 188, 143],\r\n\t\t\"darkslateblue\": [72, 61, 139],\r\n\t\t\"darkslategray\": [47, 79, 79],\r\n\t\t\"darkslategrey\": [47, 79, 79],\r\n\t\t\"darkturquoise\": [0, 206, 209],\r\n\t\t\"darkviolet\": [148, 0, 211],\r\n\t\t\"deeppink\": [255, 20, 147],\r\n\t\t\"deepskyblue\": [0, 191, 255],\r\n\t\t\"dimgray\": [105, 105, 105],\r\n\t\t\"dimgrey\": [105, 105, 105],\r\n\t\t\"dodgerblue\": [30, 144, 255],\r\n\t\t\"firebrick\": [178, 34, 34],\r\n\t\t\"floralwhite\": [255, 250, 240],\r\n\t\t\"forestgreen\": [34, 139, 34],\r\n\t\t\"fuchsia\": [255, 0, 255],\r\n\t\t\"gainsboro\": [220, 220, 220],\r\n\t\t\"ghostwhite\": [248, 248, 255],\r\n\t\t\"gold\": [255, 215, 0],\r\n\t\t\"goldenrod\": [218, 165, 32],\r\n\t\t\"gray\": [128, 128, 128],\r\n\t\t\"green\": [0, 128, 0],\r\n\t\t\"greenyellow\": [173, 255, 47],\r\n\t\t\"grey\": [128, 128, 128],\r\n\t\t\"honeydew\": [240, 255, 240],\r\n\t\t\"hotpink\": [255, 105, 180],\r\n\t\t\"indianred\": [205, 92, 92],\r\n\t\t\"indigo\": [75, 0, 130],\r\n\t\t\"ivory\": [255, 255, 240],\r\n\t\t\"khaki\": [240, 230, 140],\r\n\t\t\"lavender\": [230, 230, 250],\r\n\t\t\"lavenderblush\": [255, 240, 245],\r\n\t\t\"lawngreen\": [124, 252, 0],\r\n\t\t\"lemonchiffon\": [255, 250, 205],\r\n\t\t\"lightblue\": [173, 216, 230],\r\n\t\t\"lightcoral\": [240, 128, 128],\r\n\t\t\"lightcyan\": [224, 255, 255],\r\n\t\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\t\"lightgray\": [211, 211, 211],\r\n\t\t\"lightgreen\": [144, 238, 144],\r\n\t\t\"lightgrey\": [211, 211, 211],\r\n\t\t\"lightpink\": [255, 182, 193],\r\n\t\t\"lightsalmon\": [255, 160, 122],\r\n\t\t\"lightseagreen\": [32, 178, 170],\r\n\t\t\"lightskyblue\": [135, 206, 250],\r\n\t\t\"lightslategray\": [119, 136, 153],\r\n\t\t\"lightslategrey\": [119, 136, 153],\r\n\t\t\"lightsteelblue\": [176, 196, 222],\r\n\t\t\"lightyellow\": [255, 255, 224],\r\n\t\t\"lime\": [0, 255, 0],\r\n\t\t\"limegreen\": [50, 205, 50],\r\n\t\t\"linen\": [250, 240, 230],\r\n\t\t\"magenta\": [255, 0, 255],\r\n\t\t\"maroon\": [128, 0, 0],\r\n\t\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\t\"mediumblue\": [0, 0, 205],\r\n\t\t\"mediumorchid\": [186, 85, 211],\r\n\t\t\"mediumpurple\": [147, 112, 219],\r\n\t\t\"mediumseagreen\": [60, 179, 113],\r\n\t\t\"mediumslateblue\": [123, 104, 238],\r\n\t\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\t\"mediumturquoise\": [72, 209, 204],\r\n\t\t\"mediumvioletred\": [199, 21, 133],\r\n\t\t\"midnightblue\": [25, 25, 112],\r\n\t\t\"mintcream\": [245, 255, 250],\r\n\t\t\"mistyrose\": [255, 228, 225],\r\n\t\t\"moccasin\": [255, 228, 181],\r\n\t\t\"navajowhite\": [255, 222, 173],\r\n\t\t\"navy\": [0, 0, 128],\r\n\t\t\"oldlace\": [253, 245, 230],\r\n\t\t\"olive\": [128, 128, 0],\r\n\t\t\"olivedrab\": [107, 142, 35],\r\n\t\t\"orange\": [255, 165, 0],\r\n\t\t\"orangered\": [255, 69, 0],\r\n\t\t\"orchid\": [218, 112, 214],\r\n\t\t\"palegoldenrod\": [238, 232, 170],\r\n\t\t\"palegreen\": [152, 251, 152],\r\n\t\t\"paleturquoise\": [175, 238, 238],\r\n\t\t\"palevioletred\": [219, 112, 147],\r\n\t\t\"papayawhip\": [255, 239, 213],\r\n\t\t\"peachpuff\": [255, 218, 185],\r\n\t\t\"peru\": [205, 133, 63],\r\n\t\t\"pink\": [255, 192, 203],\r\n\t\t\"plum\": [221, 160, 221],\r\n\t\t\"powderblue\": [176, 224, 230],\r\n\t\t\"purple\": [128, 0, 128],\r\n\t\t\"rebeccapurple\": [102, 51, 153],\r\n\t\t\"red\": [255, 0, 0],\r\n\t\t\"rosybrown\": [188, 143, 143],\r\n\t\t\"royalblue\": [65, 105, 225],\r\n\t\t\"saddlebrown\": [139, 69, 19],\r\n\t\t\"salmon\": [250, 128, 114],\r\n\t\t\"sandybrown\": [244, 164, 96],\r\n\t\t\"seagreen\": [46, 139, 87],\r\n\t\t\"seashell\": [255, 245, 238],\r\n\t\t\"sienna\": [160, 82, 45],\r\n\t\t\"silver\": [192, 192, 192],\r\n\t\t\"skyblue\": [135, 206, 235],\r\n\t\t\"slateblue\": [106, 90, 205],\r\n\t\t\"slategray\": [112, 128, 144],\r\n\t\t\"slategrey\": [112, 128, 144],\r\n\t\t\"snow\": [255, 250, 250],\r\n\t\t\"springgreen\": [0, 255, 127],\r\n\t\t\"steelblue\": [70, 130, 180],\r\n\t\t\"tan\": [210, 180, 140],\r\n\t\t\"teal\": [0, 128, 128],\r\n\t\t\"thistle\": [216, 191, 216],\r\n\t\t\"tomato\": [255, 99, 71],\r\n\t\t\"turquoise\": [64, 224, 208],\r\n\t\t\"violet\": [238, 130, 238],\r\n\t\t\"wheat\": [245, 222, 179],\r\n\t\t\"white\": [255, 255, 255],\r\n\t\t\"whitesmoke\": [245, 245, 245],\r\n\t\t\"yellow\": [255, 255, 0],\r\n\t\t\"yellowgreen\": [154, 205, 50]\r\n\t};\n\treturn colorName;\n}\n\n/* MIT license */\n\nvar conversions;\nvar hasRequiredConversions;\n\nfunction requireConversions () {\n\tif (hasRequiredConversions) return conversions;\n\thasRequiredConversions = 1;\n\t/* eslint-disable no-mixed-operators */\n\tconst cssKeywords = requireColorName();\n\n\t// NOTE: conversions should only return primitive values (i.e. arrays, or\n\t//       values that give correct `typeof` results).\n\t//       do not use box values types (i.e. Number(), String(), etc.)\n\n\tconst reverseKeywords = {};\n\tfor (const key of Object.keys(cssKeywords)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n\n\tconst convert = {\n\t\trgb: {channels: 3, labels: 'rgb'},\n\t\thsl: {channels: 3, labels: 'hsl'},\n\t\thsv: {channels: 3, labels: 'hsv'},\n\t\thwb: {channels: 3, labels: 'hwb'},\n\t\tcmyk: {channels: 4, labels: 'cmyk'},\n\t\txyz: {channels: 3, labels: 'xyz'},\n\t\tlab: {channels: 3, labels: 'lab'},\n\t\tlch: {channels: 3, labels: 'lch'},\n\t\thex: {channels: 1, labels: ['hex']},\n\t\tkeyword: {channels: 1, labels: ['keyword']},\n\t\tansi16: {channels: 1, labels: ['ansi16']},\n\t\tansi256: {channels: 1, labels: ['ansi256']},\n\t\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\t\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\t\tgray: {channels: 1, labels: ['gray']}\n\t};\n\n\tconversions = convert;\n\n\t// Hide .channels and .labels properties\n\tfor (const model of Object.keys(convert)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tconst {channels, labels} = convert[model];\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n\n\tconvert.rgb.hsl = function (rgb) {\n\t\tconst r = rgb[0] / 255;\n\t\tconst g = rgb[1] / 255;\n\t\tconst b = rgb[2] / 255;\n\t\tconst min = Math.min(r, g, b);\n\t\tconst max = Math.max(r, g, b);\n\t\tconst delta = max - min;\n\t\tlet h;\n\t\tlet s;\n\n\t\tif (max === min) {\n\t\t\th = 0;\n\t\t} else if (r === max) {\n\t\t\th = (g - b) / delta;\n\t\t} else if (g === max) {\n\t\t\th = 2 + (b - r) / delta;\n\t\t} else if (b === max) {\n\t\t\th = 4 + (r - g) / delta;\n\t\t}\n\n\t\th = Math.min(h * 60, 360);\n\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\tconst l = (min + max) / 2;\n\n\t\tif (max === min) {\n\t\t\ts = 0;\n\t\t} else if (l <= 0.5) {\n\t\t\ts = delta / (max + min);\n\t\t} else {\n\t\t\ts = delta / (2 - max - min);\n\t\t}\n\n\t\treturn [h, s * 100, l * 100];\n\t};\n\n\tconvert.rgb.hsv = function (rgb) {\n\t\tlet rdif;\n\t\tlet gdif;\n\t\tlet bdif;\n\t\tlet h;\n\t\tlet s;\n\n\t\tconst r = rgb[0] / 255;\n\t\tconst g = rgb[1] / 255;\n\t\tconst b = rgb[2] / 255;\n\t\tconst v = Math.max(r, g, b);\n\t\tconst diff = v - Math.min(r, g, b);\n\t\tconst diffc = function (c) {\n\t\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t\t};\n\n\t\tif (diff === 0) {\n\t\t\th = 0;\n\t\t\ts = 0;\n\t\t} else {\n\t\t\ts = diff / v;\n\t\t\trdif = diffc(r);\n\t\t\tgdif = diffc(g);\n\t\t\tbdif = diffc(b);\n\n\t\t\tif (r === v) {\n\t\t\t\th = bdif - gdif;\n\t\t\t} else if (g === v) {\n\t\t\t\th = (1 / 3) + rdif - bdif;\n\t\t\t} else if (b === v) {\n\t\t\t\th = (2 / 3) + gdif - rdif;\n\t\t\t}\n\n\t\t\tif (h < 0) {\n\t\t\t\th += 1;\n\t\t\t} else if (h > 1) {\n\t\t\t\th -= 1;\n\t\t\t}\n\t\t}\n\n\t\treturn [\n\t\t\th * 360,\n\t\t\ts * 100,\n\t\t\tv * 100\n\t\t];\n\t};\n\n\tconvert.rgb.hwb = function (rgb) {\n\t\tconst r = rgb[0];\n\t\tconst g = rgb[1];\n\t\tlet b = rgb[2];\n\t\tconst h = convert.rgb.hsl(rgb)[0];\n\t\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\t\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\t\treturn [h, w * 100, b * 100];\n\t};\n\n\tconvert.rgb.cmyk = function (rgb) {\n\t\tconst r = rgb[0] / 255;\n\t\tconst g = rgb[1] / 255;\n\t\tconst b = rgb[2] / 255;\n\n\t\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\t\tconst c = (1 - r - k) / (1 - k) || 0;\n\t\tconst m = (1 - g - k) / (1 - k) || 0;\n\t\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\t\treturn [c * 100, m * 100, y * 100, k * 100];\n\t};\n\n\tfunction comparativeDistance(x, y) {\n\t\t/*\n\t\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t\t*/\n\t\treturn (\n\t\t\t((x[0] - y[0]) ** 2) +\n\t\t\t((x[1] - y[1]) ** 2) +\n\t\t\t((x[2] - y[2]) ** 2)\n\t\t);\n\t}\n\n\tconvert.rgb.keyword = function (rgb) {\n\t\tconst reversed = reverseKeywords[rgb];\n\t\tif (reversed) {\n\t\t\treturn reversed;\n\t\t}\n\n\t\tlet currentClosestDistance = Infinity;\n\t\tlet currentClosestKeyword;\n\n\t\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\t\tconst value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\n\t\treturn currentClosestKeyword;\n\t};\n\n\tconvert.keyword.rgb = function (keyword) {\n\t\treturn cssKeywords[keyword];\n\t};\n\n\tconvert.rgb.xyz = function (rgb) {\n\t\tlet r = rgb[0] / 255;\n\t\tlet g = rgb[1] / 255;\n\t\tlet b = rgb[2] / 255;\n\n\t\t// Assume sRGB\n\t\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\t\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\t\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\t\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\t\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\t\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\t\treturn [x * 100, y * 100, z * 100];\n\t};\n\n\tconvert.rgb.lab = function (rgb) {\n\t\tconst xyz = convert.rgb.xyz(rgb);\n\t\tlet x = xyz[0];\n\t\tlet y = xyz[1];\n\t\tlet z = xyz[2];\n\n\t\tx /= 95.047;\n\t\ty /= 100;\n\t\tz /= 108.883;\n\n\t\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\t\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\t\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\t\tconst l = (116 * y) - 16;\n\t\tconst a = 500 * (x - y);\n\t\tconst b = 200 * (y - z);\n\n\t\treturn [l, a, b];\n\t};\n\n\tconvert.hsl.rgb = function (hsl) {\n\t\tconst h = hsl[0] / 360;\n\t\tconst s = hsl[1] / 100;\n\t\tconst l = hsl[2] / 100;\n\t\tlet t2;\n\t\tlet t3;\n\t\tlet val;\n\n\t\tif (s === 0) {\n\t\t\tval = l * 255;\n\t\t\treturn [val, val, val];\n\t\t}\n\n\t\tif (l < 0.5) {\n\t\t\tt2 = l * (1 + s);\n\t\t} else {\n\t\t\tt2 = l + s - l * s;\n\t\t}\n\n\t\tconst t1 = 2 * l - t2;\n\n\t\tconst rgb = [0, 0, 0];\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\t\tif (t3 < 0) {\n\t\t\t\tt3++;\n\t\t\t}\n\n\t\t\tif (t3 > 1) {\n\t\t\t\tt3--;\n\t\t\t}\n\n\t\t\tif (6 * t3 < 1) {\n\t\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t\t} else if (2 * t3 < 1) {\n\t\t\t\tval = t2;\n\t\t\t} else if (3 * t3 < 2) {\n\t\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t\t} else {\n\t\t\t\tval = t1;\n\t\t\t}\n\n\t\t\trgb[i] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t};\n\n\tconvert.hsl.hsv = function (hsl) {\n\t\tconst h = hsl[0];\n\t\tlet s = hsl[1] / 100;\n\t\tlet l = hsl[2] / 100;\n\t\tlet smin = s;\n\t\tconst lmin = Math.max(l, 0.01);\n\n\t\tl *= 2;\n\t\ts *= (l <= 1) ? l : 2 - l;\n\t\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\t\tconst v = (l + s) / 2;\n\t\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\t\treturn [h, sv * 100, v * 100];\n\t};\n\n\tconvert.hsv.rgb = function (hsv) {\n\t\tconst h = hsv[0] / 60;\n\t\tconst s = hsv[1] / 100;\n\t\tlet v = hsv[2] / 100;\n\t\tconst hi = Math.floor(h) % 6;\n\n\t\tconst f = h - Math.floor(h);\n\t\tconst p = 255 * v * (1 - s);\n\t\tconst q = 255 * v * (1 - (s * f));\n\t\tconst t = 255 * v * (1 - (s * (1 - f)));\n\t\tv *= 255;\n\n\t\tswitch (hi) {\n\t\t\tcase 0:\n\t\t\t\treturn [v, t, p];\n\t\t\tcase 1:\n\t\t\t\treturn [q, v, p];\n\t\t\tcase 2:\n\t\t\t\treturn [p, v, t];\n\t\t\tcase 3:\n\t\t\t\treturn [p, q, v];\n\t\t\tcase 4:\n\t\t\t\treturn [t, p, v];\n\t\t\tcase 5:\n\t\t\t\treturn [v, p, q];\n\t\t}\n\t};\n\n\tconvert.hsv.hsl = function (hsv) {\n\t\tconst h = hsv[0];\n\t\tconst s = hsv[1] / 100;\n\t\tconst v = hsv[2] / 100;\n\t\tconst vmin = Math.max(v, 0.01);\n\t\tlet sl;\n\t\tlet l;\n\n\t\tl = (2 - s) * v;\n\t\tconst lmin = (2 - s) * vmin;\n\t\tsl = s * vmin;\n\t\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\t\tsl = sl || 0;\n\t\tl /= 2;\n\n\t\treturn [h, sl * 100, l * 100];\n\t};\n\n\t// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\tconvert.hwb.rgb = function (hwb) {\n\t\tconst h = hwb[0] / 360;\n\t\tlet wh = hwb[1] / 100;\n\t\tlet bl = hwb[2] / 100;\n\t\tconst ratio = wh + bl;\n\t\tlet f;\n\n\t\t// Wh + bl cant be > 1\n\t\tif (ratio > 1) {\n\t\t\twh /= ratio;\n\t\t\tbl /= ratio;\n\t\t}\n\n\t\tconst i = Math.floor(6 * h);\n\t\tconst v = 1 - bl;\n\t\tf = 6 * h - i;\n\n\t\tif ((i & 0x01) !== 0) {\n\t\t\tf = 1 - f;\n\t\t}\n\n\t\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\t\tlet r;\n\t\tlet g;\n\t\tlet b;\n\t\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\t\tswitch (i) {\n\t\t\tdefault:\n\t\t\tcase 6:\n\t\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\t\tcase 5: r = v;  g = wh; b = n; break;\n\t\t}\n\t\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\t\treturn [r * 255, g * 255, b * 255];\n\t};\n\n\tconvert.cmyk.rgb = function (cmyk) {\n\t\tconst c = cmyk[0] / 100;\n\t\tconst m = cmyk[1] / 100;\n\t\tconst y = cmyk[2] / 100;\n\t\tconst k = cmyk[3] / 100;\n\n\t\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\t\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\t\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\t\treturn [r * 255, g * 255, b * 255];\n\t};\n\n\tconvert.xyz.rgb = function (xyz) {\n\t\tconst x = xyz[0] / 100;\n\t\tconst y = xyz[1] / 100;\n\t\tconst z = xyz[2] / 100;\n\t\tlet r;\n\t\tlet g;\n\t\tlet b;\n\n\t\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\t\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\t\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t\t// Assume sRGB\n\t\tr = r > 0.0031308\n\t\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t\t: r * 12.92;\n\n\t\tg = g > 0.0031308\n\t\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t\t: g * 12.92;\n\n\t\tb = b > 0.0031308\n\t\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t\t: b * 12.92;\n\n\t\tr = Math.min(Math.max(0, r), 1);\n\t\tg = Math.min(Math.max(0, g), 1);\n\t\tb = Math.min(Math.max(0, b), 1);\n\n\t\treturn [r * 255, g * 255, b * 255];\n\t};\n\n\tconvert.xyz.lab = function (xyz) {\n\t\tlet x = xyz[0];\n\t\tlet y = xyz[1];\n\t\tlet z = xyz[2];\n\n\t\tx /= 95.047;\n\t\ty /= 100;\n\t\tz /= 108.883;\n\n\t\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\t\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\t\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\t\tconst l = (116 * y) - 16;\n\t\tconst a = 500 * (x - y);\n\t\tconst b = 200 * (y - z);\n\n\t\treturn [l, a, b];\n\t};\n\n\tconvert.lab.xyz = function (lab) {\n\t\tconst l = lab[0];\n\t\tconst a = lab[1];\n\t\tconst b = lab[2];\n\t\tlet x;\n\t\tlet y;\n\t\tlet z;\n\n\t\ty = (l + 16) / 116;\n\t\tx = a / 500 + y;\n\t\tz = y - b / 200;\n\n\t\tconst y2 = y ** 3;\n\t\tconst x2 = x ** 3;\n\t\tconst z2 = z ** 3;\n\t\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\t\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\t\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\t\tx *= 95.047;\n\t\ty *= 100;\n\t\tz *= 108.883;\n\n\t\treturn [x, y, z];\n\t};\n\n\tconvert.lab.lch = function (lab) {\n\t\tconst l = lab[0];\n\t\tconst a = lab[1];\n\t\tconst b = lab[2];\n\t\tlet h;\n\n\t\tconst hr = Math.atan2(b, a);\n\t\th = hr * 360 / 2 / Math.PI;\n\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\tconst c = Math.sqrt(a * a + b * b);\n\n\t\treturn [l, c, h];\n\t};\n\n\tconvert.lch.lab = function (lch) {\n\t\tconst l = lch[0];\n\t\tconst c = lch[1];\n\t\tconst h = lch[2];\n\n\t\tconst hr = h / 360 * 2 * Math.PI;\n\t\tconst a = c * Math.cos(hr);\n\t\tconst b = c * Math.sin(hr);\n\n\t\treturn [l, a, b];\n\t};\n\n\tconvert.rgb.ansi16 = function (args, saturation = null) {\n\t\tconst [r, g, b] = args;\n\t\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\t\tvalue = Math.round(value / 50);\n\n\t\tif (value === 0) {\n\t\t\treturn 30;\n\t\t}\n\n\t\tlet ansi = 30\n\t\t\t+ ((Math.round(b / 255) << 2)\n\t\t\t| (Math.round(g / 255) << 1)\n\t\t\t| Math.round(r / 255));\n\n\t\tif (value === 2) {\n\t\t\tansi += 60;\n\t\t}\n\n\t\treturn ansi;\n\t};\n\n\tconvert.hsv.ansi16 = function (args) {\n\t\t// Optimization here; we already know the value and don't need to get\n\t\t// it converted for us.\n\t\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n\t};\n\n\tconvert.rgb.ansi256 = function (args) {\n\t\tconst r = args[0];\n\t\tconst g = args[1];\n\t\tconst b = args[2];\n\n\t\t// We use the extended greyscale palette here, with the exception of\n\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\tif (r === g && g === b) {\n\t\t\tif (r < 8) {\n\t\t\t\treturn 16;\n\t\t\t}\n\n\t\t\tif (r > 248) {\n\t\t\t\treturn 231;\n\t\t\t}\n\n\t\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t\t}\n\n\t\tconst ansi = 16\n\t\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t\t+ Math.round(b / 255 * 5);\n\n\t\treturn ansi;\n\t};\n\n\tconvert.ansi16.rgb = function (args) {\n\t\tlet color = args % 10;\n\n\t\t// Handle greyscale\n\t\tif (color === 0 || color === 7) {\n\t\t\tif (args > 50) {\n\t\t\t\tcolor += 3.5;\n\t\t\t}\n\n\t\t\tcolor = color / 10.5 * 255;\n\n\t\t\treturn [color, color, color];\n\t\t}\n\n\t\tconst mult = (~~(args > 50) + 1) * 0.5;\n\t\tconst r = ((color & 1) * mult) * 255;\n\t\tconst g = (((color >> 1) & 1) * mult) * 255;\n\t\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\t\treturn [r, g, b];\n\t};\n\n\tconvert.ansi256.rgb = function (args) {\n\t\t// Handle greyscale\n\t\tif (args >= 232) {\n\t\t\tconst c = (args - 232) * 10 + 8;\n\t\t\treturn [c, c, c];\n\t\t}\n\n\t\targs -= 16;\n\n\t\tlet rem;\n\t\tconst r = Math.floor(args / 36) / 5 * 255;\n\t\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\t\tconst b = (rem % 6) / 5 * 255;\n\n\t\treturn [r, g, b];\n\t};\n\n\tconvert.rgb.hex = function (args) {\n\t\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t\t+ (Math.round(args[2]) & 0xFF);\n\n\t\tconst string = integer.toString(16).toUpperCase();\n\t\treturn '000000'.substring(string.length) + string;\n\t};\n\n\tconvert.hex.rgb = function (args) {\n\t\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\t\tif (!match) {\n\t\t\treturn [0, 0, 0];\n\t\t}\n\n\t\tlet colorString = match[0];\n\n\t\tif (match[0].length === 3) {\n\t\t\tcolorString = colorString.split('').map(char => {\n\t\t\t\treturn char + char;\n\t\t\t}).join('');\n\t\t}\n\n\t\tconst integer = parseInt(colorString, 16);\n\t\tconst r = (integer >> 16) & 0xFF;\n\t\tconst g = (integer >> 8) & 0xFF;\n\t\tconst b = integer & 0xFF;\n\n\t\treturn [r, g, b];\n\t};\n\n\tconvert.rgb.hcg = function (rgb) {\n\t\tconst r = rgb[0] / 255;\n\t\tconst g = rgb[1] / 255;\n\t\tconst b = rgb[2] / 255;\n\t\tconst max = Math.max(Math.max(r, g), b);\n\t\tconst min = Math.min(Math.min(r, g), b);\n\t\tconst chroma = (max - min);\n\t\tlet grayscale;\n\t\tlet hue;\n\n\t\tif (chroma < 1) {\n\t\t\tgrayscale = min / (1 - chroma);\n\t\t} else {\n\t\t\tgrayscale = 0;\n\t\t}\n\n\t\tif (chroma <= 0) {\n\t\t\thue = 0;\n\t\t} else\n\t\tif (max === r) {\n\t\t\thue = ((g - b) / chroma) % 6;\n\t\t} else\n\t\tif (max === g) {\n\t\t\thue = 2 + (b - r) / chroma;\n\t\t} else {\n\t\t\thue = 4 + (r - g) / chroma;\n\t\t}\n\n\t\thue /= 6;\n\t\thue %= 1;\n\n\t\treturn [hue * 360, chroma * 100, grayscale * 100];\n\t};\n\n\tconvert.hsl.hcg = function (hsl) {\n\t\tconst s = hsl[1] / 100;\n\t\tconst l = hsl[2] / 100;\n\n\t\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\t\tlet f = 0;\n\t\tif (c < 1.0) {\n\t\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t\t}\n\n\t\treturn [hsl[0], c * 100, f * 100];\n\t};\n\n\tconvert.hsv.hcg = function (hsv) {\n\t\tconst s = hsv[1] / 100;\n\t\tconst v = hsv[2] / 100;\n\n\t\tconst c = s * v;\n\t\tlet f = 0;\n\n\t\tif (c < 1.0) {\n\t\t\tf = (v - c) / (1 - c);\n\t\t}\n\n\t\treturn [hsv[0], c * 100, f * 100];\n\t};\n\n\tconvert.hcg.rgb = function (hcg) {\n\t\tconst h = hcg[0] / 360;\n\t\tconst c = hcg[1] / 100;\n\t\tconst g = hcg[2] / 100;\n\n\t\tif (c === 0.0) {\n\t\t\treturn [g * 255, g * 255, g * 255];\n\t\t}\n\n\t\tconst pure = [0, 0, 0];\n\t\tconst hi = (h % 1) * 6;\n\t\tconst v = hi % 1;\n\t\tconst w = 1 - v;\n\t\tlet mg = 0;\n\n\t\t/* eslint-disable max-statements-per-line */\n\t\tswitch (Math.floor(hi)) {\n\t\t\tcase 0:\n\t\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\t\tcase 1:\n\t\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\t\tcase 2:\n\t\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\t\tcase 3:\n\t\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\t\tcase 4:\n\t\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\t\tdefault:\n\t\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t\t}\n\t\t/* eslint-enable max-statements-per-line */\n\n\t\tmg = (1.0 - c) * g;\n\n\t\treturn [\n\t\t\t(c * pure[0] + mg) * 255,\n\t\t\t(c * pure[1] + mg) * 255,\n\t\t\t(c * pure[2] + mg) * 255\n\t\t];\n\t};\n\n\tconvert.hcg.hsv = function (hcg) {\n\t\tconst c = hcg[1] / 100;\n\t\tconst g = hcg[2] / 100;\n\n\t\tconst v = c + g * (1.0 - c);\n\t\tlet f = 0;\n\n\t\tif (v > 0.0) {\n\t\t\tf = c / v;\n\t\t}\n\n\t\treturn [hcg[0], f * 100, v * 100];\n\t};\n\n\tconvert.hcg.hsl = function (hcg) {\n\t\tconst c = hcg[1] / 100;\n\t\tconst g = hcg[2] / 100;\n\n\t\tconst l = g * (1.0 - c) + 0.5 * c;\n\t\tlet s = 0;\n\n\t\tif (l > 0.0 && l < 0.5) {\n\t\t\ts = c / (2 * l);\n\t\t} else\n\t\tif (l >= 0.5 && l < 1.0) {\n\t\t\ts = c / (2 * (1 - l));\n\t\t}\n\n\t\treturn [hcg[0], s * 100, l * 100];\n\t};\n\n\tconvert.hcg.hwb = function (hcg) {\n\t\tconst c = hcg[1] / 100;\n\t\tconst g = hcg[2] / 100;\n\t\tconst v = c + g * (1.0 - c);\n\t\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n\t};\n\n\tconvert.hwb.hcg = function (hwb) {\n\t\tconst w = hwb[1] / 100;\n\t\tconst b = hwb[2] / 100;\n\t\tconst v = 1 - b;\n\t\tconst c = v - w;\n\t\tlet g = 0;\n\n\t\tif (c < 1) {\n\t\t\tg = (v - c) / (1 - c);\n\t\t}\n\n\t\treturn [hwb[0], c * 100, g * 100];\n\t};\n\n\tconvert.apple.rgb = function (apple) {\n\t\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n\t};\n\n\tconvert.rgb.apple = function (rgb) {\n\t\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n\t};\n\n\tconvert.gray.rgb = function (args) {\n\t\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n\t};\n\n\tconvert.gray.hsl = function (args) {\n\t\treturn [0, 0, args[0]];\n\t};\n\n\tconvert.gray.hsv = convert.gray.hsl;\n\n\tconvert.gray.hwb = function (gray) {\n\t\treturn [0, 100, gray[0]];\n\t};\n\n\tconvert.gray.cmyk = function (gray) {\n\t\treturn [0, 0, 0, gray[0]];\n\t};\n\n\tconvert.gray.lab = function (gray) {\n\t\treturn [gray[0], 0, 0];\n\t};\n\n\tconvert.gray.hex = function (gray) {\n\t\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\t\tconst integer = (val << 16) + (val << 8) + val;\n\n\t\tconst string = integer.toString(16).toUpperCase();\n\t\treturn '000000'.substring(string.length) + string;\n\t};\n\n\tconvert.rgb.gray = function (rgb) {\n\t\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\t\treturn [val / 255 * 100];\n\t};\n\treturn conversions;\n}\n\nvar route;\nvar hasRequiredRoute;\n\nfunction requireRoute () {\n\tif (hasRequiredRoute) return route;\n\thasRequiredRoute = 1;\n\tconst conversions = requireConversions();\n\n\t/*\n\t\tThis function routes a model to all other models.\n\n\t\tall functions that are routed have a property `.conversion` attached\n\t\tto the returned synthetic function. This property is an array\n\t\tof strings, each with the steps in between the 'from' and 'to'\n\t\tcolor models (inclusive).\n\n\t\tconversions that are not possible simply are not included.\n\t*/\n\n\tfunction buildGraph() {\n\t\tconst graph = {};\n\t\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\t\tconst models = Object.keys(conversions);\n\n\t\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\t\tgraph[models[i]] = {\n\t\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t\t// micro-opt, but this is simple.\n\t\t\t\tdistance: -1,\n\t\t\t\tparent: null\n\t\t\t};\n\t\t}\n\n\t\treturn graph;\n\t}\n\n\t// https://en.wikipedia.org/wiki/Breadth-first_search\n\tfunction deriveBFS(fromModel) {\n\t\tconst graph = buildGraph();\n\t\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\t\tgraph[fromModel].distance = 0;\n\n\t\twhile (queue.length) {\n\t\t\tconst current = queue.pop();\n\t\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\t\tconst adjacent = adjacents[i];\n\t\t\t\tconst node = graph[adjacent];\n\n\t\t\t\tif (node.distance === -1) {\n\t\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\t\tnode.parent = current;\n\t\t\t\t\tqueue.unshift(adjacent);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn graph;\n\t}\n\n\tfunction link(from, to) {\n\t\treturn function (args) {\n\t\t\treturn to(from(args));\n\t\t};\n\t}\n\n\tfunction wrapConversion(toModel, graph) {\n\t\tconst path = [graph[toModel].parent, toModel];\n\t\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\t\tlet cur = graph[toModel].parent;\n\t\twhile (graph[cur].parent) {\n\t\t\tpath.unshift(graph[cur].parent);\n\t\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\t\tcur = graph[cur].parent;\n\t\t}\n\n\t\tfn.conversion = path;\n\t\treturn fn;\n\t}\n\n\troute = function (fromModel) {\n\t\tconst graph = deriveBFS(fromModel);\n\t\tconst conversion = {};\n\n\t\tconst models = Object.keys(graph);\n\t\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\t\tconst toModel = models[i];\n\t\t\tconst node = graph[toModel];\n\n\t\t\tif (node.parent === null) {\n\t\t\t\t// No possible conversion, or this node is the source model.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t\t}\n\n\t\treturn conversion;\n\t};\n\treturn route;\n}\n\nvar colorConvert;\nvar hasRequiredColorConvert;\n\nfunction requireColorConvert () {\n\tif (hasRequiredColorConvert) return colorConvert;\n\thasRequiredColorConvert = 1;\n\tconst conversions = requireConversions();\n\tconst route = requireRoute();\n\n\tconst convert = {};\n\n\tconst models = Object.keys(conversions);\n\n\tfunction wrapRaw(fn) {\n\t\tconst wrappedFn = function (...args) {\n\t\t\tconst arg0 = args[0];\n\t\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\t\treturn arg0;\n\t\t\t}\n\n\t\t\tif (arg0.length > 1) {\n\t\t\t\targs = arg0;\n\t\t\t}\n\n\t\t\treturn fn(args);\n\t\t};\n\n\t\t// Preserve .conversion property if there is one\n\t\tif ('conversion' in fn) {\n\t\t\twrappedFn.conversion = fn.conversion;\n\t\t}\n\n\t\treturn wrappedFn;\n\t}\n\n\tfunction wrapRounded(fn) {\n\t\tconst wrappedFn = function (...args) {\n\t\t\tconst arg0 = args[0];\n\n\t\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\t\treturn arg0;\n\t\t\t}\n\n\t\t\tif (arg0.length > 1) {\n\t\t\t\targs = arg0;\n\t\t\t}\n\n\t\t\tconst result = fn(args);\n\n\t\t\t// We're assuming the result is an array here.\n\t\t\t// see notice in conversions.js; don't use box types\n\t\t\t// in conversion functions.\n\t\t\tif (typeof result === 'object') {\n\t\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t// Preserve .conversion property if there is one\n\t\tif ('conversion' in fn) {\n\t\t\twrappedFn.conversion = fn.conversion;\n\t\t}\n\n\t\treturn wrappedFn;\n\t}\n\n\tmodels.forEach(fromModel => {\n\t\tconvert[fromModel] = {};\n\n\t\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\t\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\t\tconst routes = route(fromModel);\n\t\tconst routeModels = Object.keys(routes);\n\n\t\trouteModels.forEach(toModel => {\n\t\t\tconst fn = routes[toModel];\n\n\t\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t\t});\n\t});\n\n\tcolorConvert = convert;\n\treturn colorConvert;\n}\n\nansiStyles.exports;\n\nvar hasRequiredAnsiStyles;\n\nfunction requireAnsiStyles () {\n\tif (hasRequiredAnsiStyles) return ansiStyles.exports;\n\thasRequiredAnsiStyles = 1;\n\t(function (module) {\n\n\t\tconst wrapAnsi16 = (fn, offset) => (...args) => {\n\t\t\tconst code = fn(...args);\n\t\t\treturn `\\u001B[${code + offset}m`;\n\t\t};\n\n\t\tconst wrapAnsi256 = (fn, offset) => (...args) => {\n\t\t\tconst code = fn(...args);\n\t\t\treturn `\\u001B[${38 + offset};5;${code}m`;\n\t\t};\n\n\t\tconst wrapAnsi16m = (fn, offset) => (...args) => {\n\t\t\tconst rgb = fn(...args);\n\t\t\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n\t\t};\n\n\t\tconst ansi2ansi = n => n;\n\t\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\t\tconst setLazyProperty = (object, property, get) => {\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tget: () => {\n\t\t\t\t\tconst value = get();\n\n\t\t\t\t\tObject.defineProperty(object, property, {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t});\n\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\t};\n\n\t\t/** @type {typeof import('color-convert')} */\n\t\tlet colorConvert;\n\t\tconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\t\t\tif (colorConvert === undefined) {\n\t\t\t\tcolorConvert = requireColorConvert();\n\t\t\t}\n\n\t\t\tconst offset = isBackground ? 10 : 0;\n\t\t\tconst styles = {};\n\n\t\t\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\t\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\t\t\tif (sourceSpace === targetSpace) {\n\t\t\t\t\tstyles[name] = wrap(identity, offset);\n\t\t\t\t} else if (typeof suite === 'object') {\n\t\t\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn styles;\n\t\t};\n\n\t\tfunction assembleStyles() {\n\t\t\tconst codes = new Map();\n\t\t\tconst styles = {\n\t\t\t\tmodifier: {\n\t\t\t\t\treset: [0, 0],\n\t\t\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\t\t\tbold: [1, 22],\n\t\t\t\t\tdim: [2, 22],\n\t\t\t\t\titalic: [3, 23],\n\t\t\t\t\tunderline: [4, 24],\n\t\t\t\t\tinverse: [7, 27],\n\t\t\t\t\thidden: [8, 28],\n\t\t\t\t\tstrikethrough: [9, 29]\n\t\t\t\t},\n\t\t\t\tcolor: {\n\t\t\t\t\tblack: [30, 39],\n\t\t\t\t\tred: [31, 39],\n\t\t\t\t\tgreen: [32, 39],\n\t\t\t\t\tyellow: [33, 39],\n\t\t\t\t\tblue: [34, 39],\n\t\t\t\t\tmagenta: [35, 39],\n\t\t\t\t\tcyan: [36, 39],\n\t\t\t\t\twhite: [37, 39],\n\n\t\t\t\t\t// Bright color\n\t\t\t\t\tblackBright: [90, 39],\n\t\t\t\t\tredBright: [91, 39],\n\t\t\t\t\tgreenBright: [92, 39],\n\t\t\t\t\tyellowBright: [93, 39],\n\t\t\t\t\tblueBright: [94, 39],\n\t\t\t\t\tmagentaBright: [95, 39],\n\t\t\t\t\tcyanBright: [96, 39],\n\t\t\t\t\twhiteBright: [97, 39]\n\t\t\t\t},\n\t\t\t\tbgColor: {\n\t\t\t\t\tbgBlack: [40, 49],\n\t\t\t\t\tbgRed: [41, 49],\n\t\t\t\t\tbgGreen: [42, 49],\n\t\t\t\t\tbgYellow: [43, 49],\n\t\t\t\t\tbgBlue: [44, 49],\n\t\t\t\t\tbgMagenta: [45, 49],\n\t\t\t\t\tbgCyan: [46, 49],\n\t\t\t\t\tbgWhite: [47, 49],\n\n\t\t\t\t\t// Bright color\n\t\t\t\t\tbgBlackBright: [100, 49],\n\t\t\t\t\tbgRedBright: [101, 49],\n\t\t\t\t\tbgGreenBright: [102, 49],\n\t\t\t\t\tbgYellowBright: [103, 49],\n\t\t\t\t\tbgBlueBright: [104, 49],\n\t\t\t\t\tbgMagentaBright: [105, 49],\n\t\t\t\t\tbgCyanBright: [106, 49],\n\t\t\t\t\tbgWhiteBright: [107, 49]\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Alias bright black as gray (and grey)\n\t\t\tstyles.color.gray = styles.color.blackBright;\n\t\t\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\t\t\tstyles.color.grey = styles.color.blackBright;\n\t\t\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\t\t\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\t\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\t\t\tstyles[styleName] = {\n\t\t\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t\t\t};\n\n\t\t\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\t\t\tcodes.set(style[0], style[1]);\n\t\t\t\t}\n\n\t\t\t\tObject.defineProperty(styles, groupName, {\n\t\t\t\t\tvalue: group,\n\t\t\t\t\tenumerable: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tObject.defineProperty(styles, 'codes', {\n\t\t\t\tvalue: codes,\n\t\t\t\tenumerable: false\n\t\t\t});\n\n\t\t\tstyles.color.close = '\\u001B[39m';\n\t\t\tstyles.bgColor.close = '\\u001B[49m';\n\n\t\t\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\t\t\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\t\t\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\t\t\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\t\t\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\t\t\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\t\t\treturn styles;\n\t\t}\n\n\t\t// Make the export immutable\n\t\tObject.defineProperty(module, 'exports', {\n\t\t\tenumerable: true,\n\t\t\tget: assembleStyles\n\t\t}); \n\t} (ansiStyles));\n\treturn ansiStyles.exports;\n}\n\nvar wrapAnsi_1;\nvar hasRequiredWrapAnsi;\n\nfunction requireWrapAnsi () {\n\tif (hasRequiredWrapAnsi) return wrapAnsi_1;\n\thasRequiredWrapAnsi = 1;\n\tconst stringWidth = requireStringWidth();\n\tconst stripAnsi = requireStripAnsi();\n\tconst ansiStyles = requireAnsiStyles();\n\n\tconst ESCAPES = new Set([\n\t\t'\\u001B',\n\t\t'\\u009B'\n\t]);\n\n\tconst END_CODE = 39;\n\n\tconst ANSI_ESCAPE_BELL = '\\u0007';\n\tconst ANSI_CSI = '[';\n\tconst ANSI_OSC = ']';\n\tconst ANSI_SGR_TERMINATOR = 'm';\n\tconst ANSI_ESCAPE_LINK = `${ANSI_OSC}8;;`;\n\n\tconst wrapAnsi = code => `${ESCAPES.values().next().value}${ANSI_CSI}${code}${ANSI_SGR_TERMINATOR}`;\n\tconst wrapAnsiHyperlink = uri => `${ESCAPES.values().next().value}${ANSI_ESCAPE_LINK}${uri}${ANSI_ESCAPE_BELL}`;\n\n\t// Calculate the length of words split on ' ', ignoring\n\t// the extra characters added by ansi escape codes\n\tconst wordLengths = string => string.split(' ').map(character => stringWidth(character));\n\n\t// Wrap a long word across multiple rows\n\t// Ansi escape codes do not count towards length\n\tconst wrapWord = (rows, word, columns) => {\n\t\tconst characters = [...word];\n\n\t\tlet isInsideEscape = false;\n\t\tlet isInsideLinkEscape = false;\n\t\tlet visible = stringWidth(stripAnsi(rows[rows.length - 1]));\n\n\t\tfor (const [index, character] of characters.entries()) {\n\t\t\tconst characterLength = stringWidth(character);\n\n\t\t\tif (visible + characterLength <= columns) {\n\t\t\t\trows[rows.length - 1] += character;\n\t\t\t} else {\n\t\t\t\trows.push(character);\n\t\t\t\tvisible = 0;\n\t\t\t}\n\n\t\t\tif (ESCAPES.has(character)) {\n\t\t\t\tisInsideEscape = true;\n\t\t\t\tisInsideLinkEscape = characters.slice(index + 1).join('').startsWith(ANSI_ESCAPE_LINK);\n\t\t\t}\n\n\t\t\tif (isInsideEscape) {\n\t\t\t\tif (isInsideLinkEscape) {\n\t\t\t\t\tif (character === ANSI_ESCAPE_BELL) {\n\t\t\t\t\t\tisInsideEscape = false;\n\t\t\t\t\t\tisInsideLinkEscape = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (character === ANSI_SGR_TERMINATOR) {\n\t\t\t\t\tisInsideEscape = false;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvisible += characterLength;\n\n\t\t\tif (visible === columns && index < characters.length - 1) {\n\t\t\t\trows.push('');\n\t\t\t\tvisible = 0;\n\t\t\t}\n\t\t}\n\n\t\t// It's possible that the last row we copy over is only\n\t\t// ansi escape characters, handle this edge-case\n\t\tif (!visible && rows[rows.length - 1].length > 0 && rows.length > 1) {\n\t\t\trows[rows.length - 2] += rows.pop();\n\t\t}\n\t};\n\n\t// Trims spaces from a string ignoring invisible sequences\n\tconst stringVisibleTrimSpacesRight = string => {\n\t\tconst words = string.split(' ');\n\t\tlet last = words.length;\n\n\t\twhile (last > 0) {\n\t\t\tif (stringWidth(words[last - 1]) > 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlast--;\n\t\t}\n\n\t\tif (last === words.length) {\n\t\t\treturn string;\n\t\t}\n\n\t\treturn words.slice(0, last).join(' ') + words.slice(last).join('');\n\t};\n\n\t// The wrap-ansi module can be invoked in either 'hard' or 'soft' wrap mode\n\t//\n\t// 'hard' will never allow a string to take up more than columns characters\n\t//\n\t// 'soft' allows long words to expand past the column length\n\tconst exec = (string, columns, options = {}) => {\n\t\tif (options.trim !== false && string.trim() === '') {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet returnValue = '';\n\t\tlet escapeCode;\n\t\tlet escapeUrl;\n\n\t\tconst lengths = wordLengths(string);\n\t\tlet rows = [''];\n\n\t\tfor (const [index, word] of string.split(' ').entries()) {\n\t\t\tif (options.trim !== false) {\n\t\t\t\trows[rows.length - 1] = rows[rows.length - 1].trimStart();\n\t\t\t}\n\n\t\t\tlet rowLength = stringWidth(rows[rows.length - 1]);\n\n\t\t\tif (index !== 0) {\n\t\t\t\tif (rowLength >= columns && (options.wordWrap === false || options.trim === false)) {\n\t\t\t\t\t// If we start with a new word but the current row length equals the length of the columns, add a new row\n\t\t\t\t\trows.push('');\n\t\t\t\t\trowLength = 0;\n\t\t\t\t}\n\n\t\t\t\tif (rowLength > 0 || options.trim === false) {\n\t\t\t\t\trows[rows.length - 1] += ' ';\n\t\t\t\t\trowLength++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In 'hard' wrap mode, the length of a line is never allowed to extend past 'columns'\n\t\t\tif (options.hard && lengths[index] > columns) {\n\t\t\t\tconst remainingColumns = (columns - rowLength);\n\t\t\t\tconst breaksStartingThisLine = 1 + Math.floor((lengths[index] - remainingColumns - 1) / columns);\n\t\t\t\tconst breaksStartingNextLine = Math.floor((lengths[index] - 1) / columns);\n\t\t\t\tif (breaksStartingNextLine < breaksStartingThisLine) {\n\t\t\t\t\trows.push('');\n\t\t\t\t}\n\n\t\t\t\twrapWord(rows, word, columns);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (rowLength + lengths[index] > columns && rowLength > 0 && lengths[index] > 0) {\n\t\t\t\tif (options.wordWrap === false && rowLength < columns) {\n\t\t\t\t\twrapWord(rows, word, columns);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\trows.push('');\n\t\t\t}\n\n\t\t\tif (rowLength + lengths[index] > columns && options.wordWrap === false) {\n\t\t\t\twrapWord(rows, word, columns);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\trows[rows.length - 1] += word;\n\t\t}\n\n\t\tif (options.trim !== false) {\n\t\t\trows = rows.map(stringVisibleTrimSpacesRight);\n\t\t}\n\n\t\tconst pre = [...rows.join('\\n')];\n\n\t\tfor (const [index, character] of pre.entries()) {\n\t\t\treturnValue += character;\n\n\t\t\tif (ESCAPES.has(character)) {\n\t\t\t\tconst {groups} = new RegExp(`(?:\\\\${ANSI_CSI}(?<code>\\\\d+)m|\\\\${ANSI_ESCAPE_LINK}(?<uri>.*)${ANSI_ESCAPE_BELL})`).exec(pre.slice(index).join('')) || {groups: {}};\n\t\t\t\tif (groups.code !== undefined) {\n\t\t\t\t\tconst code = Number.parseFloat(groups.code);\n\t\t\t\t\tescapeCode = code === END_CODE ? undefined : code;\n\t\t\t\t} else if (groups.uri !== undefined) {\n\t\t\t\t\tescapeUrl = groups.uri.length === 0 ? undefined : groups.uri;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst code = ansiStyles.codes.get(Number(escapeCode));\n\n\t\t\tif (pre[index + 1] === '\\n') {\n\t\t\t\tif (escapeUrl) {\n\t\t\t\t\treturnValue += wrapAnsiHyperlink('');\n\t\t\t\t}\n\n\t\t\t\tif (escapeCode && code) {\n\t\t\t\t\treturnValue += wrapAnsi(code);\n\t\t\t\t}\n\t\t\t} else if (character === '\\n') {\n\t\t\t\tif (escapeCode && code) {\n\t\t\t\t\treturnValue += wrapAnsi(escapeCode);\n\t\t\t\t}\n\n\t\t\t\tif (escapeUrl) {\n\t\t\t\t\treturnValue += wrapAnsiHyperlink(escapeUrl);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn returnValue;\n\t};\n\n\t// For each newline, invoke the method separately\n\twrapAnsi_1 = (string, columns, options) => {\n\t\treturn String(string)\n\t\t\t.normalize()\n\t\t\t.replace(/\\r\\n/g, '\\n')\n\t\t\t.split('\\n')\n\t\t\t.map(line => exec(line, columns, options))\n\t\t\t.join('\\n');\n\t};\n\treturn wrapAnsi_1;\n}\n\nvar hasRequiredBoxen;\n\nfunction requireBoxen () {\n\tif (hasRequiredBoxen) return boxen$1.exports;\n\thasRequiredBoxen = 1;\n\tconst stringWidth = requireStringWidth();\n\tconst chalk$1 = chalk;\n\tconst widestLine = requireWidestLine();\n\tconst cliBoxes = requireCliBoxes();\n\tconst camelCase = requireCamelcase();\n\tconst ansiAlign = requireAnsiAlign();\n\tconst wrapAnsi = requireWrapAnsi();\n\n\tconst NL = '\\n';\n\tconst PAD = ' ';\n\n\tconst terminalColumns = () => {\n\t\tconst {env, stdout, stderr} = process;\n\n\t\tif (stdout && stdout.columns) {\n\t\t\treturn stdout.columns;\n\t\t}\n\n\t\tif (stderr && stderr.columns) {\n\t\t\treturn stderr.columns;\n\t\t}\n\n\t\tif (env.COLUMNS) {\n\t\t\treturn Number.parseInt(env.COLUMNS, 10);\n\t\t}\n\n\t\treturn 80;\n\t};\n\n\tconst getObject = detail => {\n\t\treturn typeof detail === 'number' ? {\n\t\t\ttop: detail,\n\t\t\tright: detail * 3,\n\t\t\tbottom: detail,\n\t\t\tleft: detail * 3\n\t\t} : {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0,\n\t\t\t...detail\n\t\t};\n\t};\n\n\tconst getBorderChars = borderStyle => {\n\t\tconst sides = [\n\t\t\t'topLeft',\n\t\t\t'topRight',\n\t\t\t'bottomRight',\n\t\t\t'bottomLeft',\n\t\t\t'vertical',\n\t\t\t'horizontal'\n\t\t];\n\n\t\tlet chararacters;\n\n\t\tif (typeof borderStyle === 'string') {\n\t\t\tchararacters = cliBoxes[borderStyle];\n\n\t\t\tif (!chararacters) {\n\t\t\t\tthrow new TypeError(`Invalid border style: ${borderStyle}`);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const side of sides) {\n\t\t\t\tif (!borderStyle[side] || typeof borderStyle[side] !== 'string') {\n\t\t\t\t\tthrow new TypeError(`Invalid border style: ${side}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchararacters = borderStyle;\n\t\t}\n\n\t\treturn chararacters;\n\t};\n\n\tconst makeTitle = (text, horizontal, alignement) => {\n\t\tlet title = '';\n\n\t\tconst textWidth = stringWidth(text);\n\n\t\tswitch (alignement) {\n\t\t\tcase 'left':\n\t\t\t\ttitle = text + horizontal.slice(textWidth);\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\ttitle = horizontal.slice(textWidth) + text;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thorizontal = horizontal.slice(textWidth);\n\n\t\t\t\tif (horizontal.length % 2 === 1) { // This is needed in case the length is odd\n\t\t\t\t\thorizontal = horizontal.slice(Math.floor(horizontal.length / 2));\n\t\t\t\t\ttitle = horizontal.slice(1) + text + horizontal; // We reduce the left part of one character to avoid the bar to go beyond its limit\n\t\t\t\t} else {\n\t\t\t\t\thorizontal = horizontal.slice(horizontal.length / 2);\n\t\t\t\t\ttitle = horizontal + text + horizontal;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn title;\n\t};\n\n\tconst makeContentText = (text, padding, columns, align) => {\n\t\ttext = ansiAlign(text, {align});\n\t\tlet lines = text.split(NL);\n\t\tconst textWidth = widestLine(text);\n\n\t\tconst max = columns - padding.left - padding.right;\n\n\t\tif (textWidth > max) {\n\t\t\tconst newLines = [];\n\t\t\tfor (const line of lines) {\n\t\t\t\tconst createdLines = wrapAnsi(line, max, {hard: true});\n\t\t\t\tconst alignedLines = ansiAlign(createdLines, {align});\n\t\t\t\tconst alignedLinesArray = alignedLines.split('\\n');\n\t\t\t\tconst longestLength = Math.max(...alignedLinesArray.map(s => stringWidth(s)));\n\n\t\t\t\tfor (const alignedLine of alignedLinesArray) {\n\t\t\t\t\tlet paddedLine;\n\t\t\t\t\tswitch (align) {\n\t\t\t\t\t\tcase 'center':\n\t\t\t\t\t\t\tpaddedLine = PAD.repeat((max - longestLength) / 2) + alignedLine;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'right':\n\t\t\t\t\t\t\tpaddedLine = PAD.repeat(max - longestLength) + alignedLine;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tpaddedLine = alignedLine;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewLines.push(paddedLine);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlines = newLines;\n\t\t}\n\n\t\tif (align === 'center' && textWidth < max) {\n\t\t\tlines = lines.map(line => PAD.repeat((max - textWidth) / 2) + line);\n\t\t} else if (align === 'right' && textWidth < max) {\n\t\t\tlines = lines.map(line => PAD.repeat(max - textWidth) + line);\n\t\t}\n\n\t\tconst paddingLeft = PAD.repeat(padding.left);\n\t\tconst paddingRight = PAD.repeat(padding.right);\n\n\t\tlines = lines.map(line => paddingLeft + line + paddingRight);\n\n\t\tlines = lines.map(line => {\n\t\t\tif (columns - stringWidth(line) > 0) {\n\t\t\t\tswitch (align) {\n\t\t\t\t\tcase 'center':\n\t\t\t\t\t\treturn line + PAD.repeat(columns - stringWidth(line));\n\t\t\t\t\tcase 'right':\n\t\t\t\t\t\treturn line + PAD.repeat(columns - stringWidth(line));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn line + PAD.repeat(columns - stringWidth(line));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn line;\n\t\t});\n\n\t\tif (padding.top > 0) {\n\t\t\tlines = new Array(padding.top).fill(PAD.repeat(columns)).concat(lines);\n\t\t}\n\n\t\tif (padding.bottom > 0) {\n\t\t\tlines = lines.concat(new Array(padding.bottom).fill(PAD.repeat(columns)));\n\t\t}\n\n\t\treturn lines.join(NL);\n\t};\n\n\tconst isHex = color => color.match(/^#(?:[0-f]{3}){1,2}$/i);\n\tconst isColorValid = color => typeof color === 'string' && ((chalk$1[color]) || isHex(color));\n\tconst getColorFn = color => isHex(color) ? chalk$1.hex(color) : chalk$1[color];\n\tconst getBGColorFn = color => isHex(color) ? chalk$1.bgHex(color) : chalk$1[camelCase(['bg', color])];\n\n\tboxen$1.exports = (text, options) => {\n\t\toptions = {\n\t\t\tpadding: 0,\n\t\t\tborderStyle: 'single',\n\t\t\tdimBorder: false,\n\t\t\ttextAlignment: 'left',\n\t\t\tfloat: 'left',\n\t\t\ttitleAlignment: 'left',\n\t\t\t...options\n\t\t};\n\n\t\t// This option is deprecated\n\t\tif (options.align) {\n\t\t\toptions.textAlignment = options.align;\n\t\t}\n\n\t\tconst BORDERS_WIDTH = 2;\n\n\t\tif (options.borderColor && !isColorValid(options.borderColor)) {\n\t\t\tthrow new Error(`${options.borderColor} is not a valid borderColor`);\n\t\t}\n\n\t\tif (options.backgroundColor && !isColorValid(options.backgroundColor)) {\n\t\t\tthrow new Error(`${options.backgroundColor} is not a valid backgroundColor`);\n\t\t}\n\n\t\tconst chars = getBorderChars(options.borderStyle);\n\t\tconst padding = getObject(options.padding);\n\t\tconst margin = getObject(options.margin);\n\n\t\tconst colorizeBorder = border => {\n\t\t\tconst newBorder = options.borderColor ? getColorFn(options.borderColor)(border) : border;\n\t\t\treturn options.dimBorder ? chalk$1.dim(newBorder) : newBorder;\n\t\t};\n\n\t\tconst colorizeContent = content => options.backgroundColor ? getBGColorFn(options.backgroundColor)(content) : content;\n\n\t\tconst columns = terminalColumns() - 1;\n\n\t\tlet contentWidth = widestLine(wrapAnsi(text, columns - BORDERS_WIDTH, {hard: true, trim: false})) + padding.left + padding.right;\n\n\t\t// This prevents the title bar to exceed the console's width\n\t\tlet title = options.title && options.title.slice(0, columns - 4 - margin.left - margin.right);\n\n\t\tif (title) {\n\t\t\ttitle = ` ${title} `;\n\t\t\t// Make the box larger to fit a larger title\n\t\t\tif (stringWidth(title) > contentWidth) {\n\t\t\t\tcontentWidth = stringWidth(title);\n\t\t\t}\n\t\t}\n\n\t\tif ((margin.left && margin.right) && contentWidth + BORDERS_WIDTH + margin.left + margin.right > columns) {\n\t\t\t// Let's assume we have margins: left = 3, right = 5, in total = 8\n\t\t\tconst spaceForMargins = columns - contentWidth - BORDERS_WIDTH;\n\t\t\t// Let's assume we have space = 4\n\t\t\tconst multiplier = spaceForMargins / (margin.left + margin.right);\n\t\t\t// Here: multiplier = 4/8 = 0.5\n\t\t\tmargin.left = Math.max(0, Math.floor(margin.left * multiplier));\n\t\t\tmargin.right = Math.max(0, Math.floor(margin.right * multiplier));\n\t\t\t// Left: 3 * 0.5 = 1.5 -> 1\n\t\t\t// Right: 6 * 0.5 = 3\n\t\t}\n\n\t\t// Prevent content from exceeding the console's width\n\t\tcontentWidth = Math.min(contentWidth, columns - BORDERS_WIDTH - margin.left - margin.right);\n\n\t\ttext = makeContentText(text, padding, contentWidth, options.textAlignment);\n\n\t\tlet marginLeft = PAD.repeat(margin.left);\n\n\t\tif (options.float === 'center') {\n\t\t\tconst marginWidth = Math.max((columns - contentWidth - BORDERS_WIDTH) / 2, 0);\n\t\t\tmarginLeft = PAD.repeat(marginWidth);\n\t\t} else if (options.float === 'right') {\n\t\t\tconst marginWidth = Math.max(columns - contentWidth - margin.right - BORDERS_WIDTH, 0);\n\t\t\tmarginLeft = PAD.repeat(marginWidth);\n\t\t}\n\n\t\tconst horizontal = chars.horizontal.repeat(contentWidth);\n\t\tconst top = colorizeBorder(NL.repeat(margin.top) + marginLeft + chars.topLeft + (title ? makeTitle(title, horizontal, options.titleAlignment) : horizontal) + chars.topRight);\n\t\tconst bottom = colorizeBorder(marginLeft + chars.bottomLeft + horizontal + chars.bottomRight + NL.repeat(margin.bottom));\n\t\tconst side = colorizeBorder(chars.vertical);\n\n\t\tconst LINE_SEPARATOR = NL;\n\n\t\tconst lines = text.split(NL);\n\n\t\tconst middle = lines.map(line => {\n\t\t\treturn marginLeft + side + colorizeContent(line) + side;\n\t\t}).join(LINE_SEPARATOR);\n\n\t\treturn top + LINE_SEPARATOR + middle + LINE_SEPARATOR + bottom;\n\t};\n\n\tboxen$1.exports._borderStyles = cliBoxes;\n\treturn boxen$1.exports;\n}\n\nvar boxenExports = requireBoxen();\nvar boxen = /*@__PURE__*/getDefaultExportFromCjs(boxenExports);\n\nfunction makeTitledPrettyError(title, content, stack) {\n    return makePrettyError(chalk.redBright(title) + \"\\n\\n\" + content, stack);\n}\nfunction makePrettyError(content, stack) {\n    if (process$1.browser || process$1.env.LMS_NO_FANCY_ERRORS || terminalSize().columns < 80) {\n        const error = new Error(content);\n        if (stack === undefined) {\n            changeErrorStackInPlace(error, \"\");\n        }\n        else {\n            changeErrorStackInPlace(error, stack);\n        }\n        return error;\n    }\n    else {\n        if (stack !== undefined) {\n            content +=\n                \"\\n\\n\\n \" + chalk.bgWhite.black(\"  </> STACK TRACE  \") + \"\\n\\n\" + chalk.gray(stack);\n        }\n        const error = new Error(\"\\n\" + boxen(content, { padding: 1, margin: 1, borderColor: \"redBright\", title: \"Error\" }));\n        Object.defineProperty(error, \"lmstudioRawError\", { value: content, enumerable: false });\n        changeErrorStackInPlace(error, \"\");\n        return error;\n    }\n}\n\n/**\n * A cache for avoiding recompiling the same template strings.\n *\n * The cached value is a string with 2N + 1 elements, where N is the number of variables in the\n * template.\n */\nconst compiledTemplatesCache = new WeakMap();\n/**\n * A string literal tag function that does the following:\n *\n * - Removes leading new lines\n * - Removes trailing new lines and whitespace\n * - Removes common indentation from the start of each line (Empty lines are ignored)\n * - Single newlines are replaced with a space + extra whitespace is removed\n *\n * Note: Only spaces are considered.\n *\n * @remarks\n *\n * The exact implementation of this function is not guaranteed to be the same, as we may add\n * additional edge case handling in the future. However, the general behavior should remain the\n * same.\n *\n * @public\n */\nfunction text(strings, ...values) {\n    if (values.length + 1 !== strings.length) {\n        throw new Error(\"text called with the wrong number of arguments.\");\n    }\n    let compiled = compiledTemplatesCache.get(strings);\n    if (compiled === undefined) {\n        compiled = compile(strings);\n        compiledTemplatesCache.set(strings, compiled);\n    }\n    // We can modify the array in place because JavaScript is single-threaded and the array is not\n    // being accessed by any other code.\n    for (let i = 0; i < values.length; i++) {\n        if (typeof values[i] === \"object\") {\n            if (typeof values[i].stack === \"string\") {\n                compiled[i * 2 + 1] = values[i].stack;\n            }\n            else {\n                try {\n                    compiled[i * 2 + 1] = JSON.stringify(values[i]);\n                }\n                catch (error) {\n                    compiled[i * 2 + 1] = \"[Object failed to stringify]\";\n                }\n            }\n        }\n        else {\n            compiled[i * 2 + 1] = String(values[i]);\n        }\n    }\n    return compiled.join(\"\");\n}\nfunction removeLeadingNewlines(input) {\n    return input.replace(/^\\n+/, \"\");\n}\nfunction removeTrailingNewlinesAndWhitespace(input) {\n    return input.replace(/[\\n ]+$/, \"\");\n}\nfunction removeLeadingWhitespace(input) {\n    return input.replace(/^ +/, \"\");\n}\nfunction removeTrailingWhitespace(input) {\n    return input.replace(/ +$/, \"\");\n}\nfunction breakIntoLines(strings) {\n    const lines = [];\n    let currentLine = [];\n    for (const string of strings) {\n        let prevNewlineIndex = -1;\n        let nextNewlineIndex;\n        while ((nextNewlineIndex = string.indexOf(\"\\n\", prevNewlineIndex + 1)) !== -1) {\n            currentLine.push(string.substring(prevNewlineIndex + 1, nextNewlineIndex));\n            lines.push(currentLine);\n            currentLine = [];\n            prevNewlineIndex = nextNewlineIndex;\n        }\n        currentLine.push(string.substring(prevNewlineIndex + 1));\n    }\n    lines.push(currentLine);\n    return lines;\n}\n/**\n * Returns the number of spaces at the start of the string. If the string only contains spaces,\n * returns infinity.\n */\nfunction countStringIndentations(string) {\n    let count = 0;\n    for (const char of string) {\n        if (char === \" \") {\n            count++;\n        }\n        else {\n            return count;\n        }\n    }\n    return Infinity;\n}\nfunction countLineIndentations(line) {\n    const firstPart = line[0];\n    const firstPartIndentation = countStringIndentations(firstPart);\n    if (firstPartIndentation === Infinity) {\n        if (line.length === 1) {\n            return Infinity;\n        }\n        else {\n            // If there is a variable after it, the length of indentation is the same as the length of the\n            // first part.\n            return firstPart.length;\n        }\n    }\n    return firstPartIndentation;\n}\nfunction findMaxCommonIndentation(lines) {\n    let minIndentation = Infinity;\n    for (const line of lines) {\n        minIndentation = Math.min(minIndentation, countLineIndentations(line));\n    }\n    return minIndentation;\n}\nfunction removeIndentation(line, indentation) {\n    if (line.length < indentation) {\n        return \"\";\n    }\n    return line.slice(indentation);\n}\nfunction removeAllIndentation(lines, indentation) {\n    for (const line of lines) {\n        line[0] = removeIndentation(line[0], indentation);\n    }\n}\nfunction isEmptyLine(line) {\n    if (line.length !== 1) {\n        return false;\n    }\n    for (const char of line[0]) {\n        if (char !== \" \") {\n            return false;\n        }\n    }\n    return true;\n}\nfunction mergeLines(lines) {\n    const linesAreEmpty = lines.map(isEmptyLine);\n    const paragraphs = [];\n    let currentParagraph = [];\n    for (let i = 0; i < lines.length; i++) {\n        if (linesAreEmpty[i]) {\n            if (currentParagraph.length !== 0) {\n                paragraphs.push(currentParagraph);\n                currentParagraph = [];\n            }\n            continue;\n        }\n        if (currentParagraph.length !== 0) {\n            const last = removeTrailingWhitespace(currentParagraph[currentParagraph.length - 1]);\n            const next = removeLeadingWhitespace(lines[i][0]);\n            currentParagraph[currentParagraph.length - 1] = last + \" \" + next;\n            currentParagraph.push(...lines[i].slice(1));\n        }\n        else {\n            currentParagraph.push(...lines[i]);\n        }\n    }\n    if (currentParagraph.length !== 0) {\n        paragraphs.push(currentParagraph);\n    }\n    return paragraphs;\n}\nfunction mergeParagraphs(paragraphs) {\n    const result = [];\n    if (paragraphs.length === 0) {\n        return [\"\"];\n    }\n    result.push(...paragraphs[0]);\n    for (let i = 1; i < paragraphs.length; i++) {\n        result[result.length - 1] += \"\\n\\n\" + paragraphs[i][0];\n        result.push(...paragraphs[i].slice(1));\n    }\n    return result;\n}\nfunction addHolesForVariables(strings) {\n    const result = [];\n    for (let i = 0; i < strings.length; i++) {\n        result.push(strings[i]);\n        if (i < strings.length - 1) {\n            result.push(\"\");\n        }\n    }\n    return result;\n}\nfunction compile(readonlyStrings) {\n    const strings = [...readonlyStrings];\n    strings[0] = removeLeadingNewlines(strings[0]);\n    strings[strings.length - 1] = removeTrailingNewlinesAndWhitespace(strings[strings.length - 1]);\n    const lines = breakIntoLines(strings);\n    const commonIndentation = findMaxCommonIndentation(lines);\n    removeAllIndentation(lines, commonIndentation);\n    const paragraphs = mergeLines(lines);\n    return addHolesForVariables(mergeParagraphs(paragraphs));\n}\n\n/**\n * Represents some underlying data that may or may not be mutable.\n *\n * @public\n */\nclass MaybeMutable {\n    constructor(data, mutable) {\n        this.data = data;\n        this.mutable = mutable;\n    }\n    /**\n     * Gets the underlying data without any access control. Only used internally.\n     *\n     * @internal\n     */\n    _internalGetData() {\n        return this.data;\n    }\n    /**\n     * If this instance is mutable, return as is.\n     *\n     * If this instance is immutable, return a mutable copy.\n     *\n     * Very easy to misuse, thus internal only for now.\n     *\n     * @internal\n     */\n    _internalToMutable() {\n        if (this.mutable) {\n            return this;\n        }\n        return this.asMutableCopy();\n    }\n    asMutableCopy() {\n        return this.create(this.cloneData(this.data), true);\n    }\n    asImmutableCopy() {\n        if (this.mutable) {\n            return this.create(this.cloneData(this.data), false);\n        }\n        return this;\n    }\n    guardMutable() {\n        if (!this.mutable) {\n            throw new Error(text `\r\n        Cannot modify immutable ${this.getClassName()} instance. Use asMutableCopy() to get a\r\n        mutable copy.\r\n      `);\n        }\n    }\n}\nfunction accessMaybeMutableInternals(maybeMutable) {\n    return maybeMutable;\n}\n\n/**\n * OWLSignal - Optimistic Writable Lazy Signal\n *\n * - Signal: It is a signal, i.e. an observable that remembers its current value\n * - Lazy: It is lazy, i.e. it does not subscribe to the upstream until a subscriber is attached\n * - Writable: It is writable, i.e. it has a setter to update its value\n * - Optimistic: It is optimistic, i.e. it updates its value optimistically and then waits for the\n *   upstream to confirm the update\n *   - Once the setter is called, the value is updated optimistically and all subscribers are\n *     notified synchronously\n *\n * Guarantees:\n *\n * - The OWLSignal is designed for single-writer multiple-reader scenarios, as the coordination of\n *   writes are tracked inside the OWLSignal. If there are multiple writers for the same data (i.e.\n *   multiple OWLSignal backed by the same upstream), there are no strong guarantees. For example,\n *   two updaters may read the same value, update it, and write it back to the upstream, causing one\n *   of the updates to be lost. The following guarantees are provided for single-writer scenarios:\n * - The updates are applied in the order they are received, and each updater is guaranteed to see\n *   all updates that were applied before it.\n * - If there are updaters [u_0, u_1, ..., u_n], for any read-only reader, there exists a time t\n *   where the reader will see the updates [u_0, u_1, ..., u_t] in the order they were applied. This\n *   also applies to the writer itself.\n */\nclass OWLSignal extends Subscribable {\n    static { this.NOT_AVAILABLE = LazySignal.NOT_AVAILABLE; }\n    applyOptimisticUpdates(data) {\n        for (const update of this.queuedUpdates) {\n            [data] = update.updater(data);\n        }\n        return data;\n    }\n    updateOptimisticValue(tags) {\n        const innerValue = this.innerSignal.get();\n        if (!isAvailable(innerValue)) {\n            return;\n        }\n        this.setOuterSignal(this.applyOptimisticUpdates(innerValue), tags);\n    }\n    constructor(initialValue, subscribeUpstream, writeUpstream, equalsPredicate) {\n        super();\n        this.writeUpstream = writeUpstream;\n        this.isWriteLoopRunning = false;\n        /**\n         * We have a passive subscription to the inner signal to update the optimistic value whenever the\n         * inner signal changes.\n         *\n         * However, if the content changes are caused by a write, we want to update the inner value,\n         * remove the optimistic update, and apply the remaining optimistic updates all at once.\n         *\n         * Therefore, when a write is ongoing, we set this flag to true to prevent the passive\n         * subscription from updating the optimistic value. We will handle the updates within the write\n         * loop.\n         */\n        this.isSubscriptionHandledByWriteLoop = false;\n        /**\n         * A queue of updates to apply optimistically.\n         */\n        this.queuedUpdates = [];\n        this.currentEnsureAvailablePromise = null;\n        [this.writeErrorEvent, this.emitWriteErrorEvent] = Event.create();\n        [this.outerSignal, this.setOuterSignal] = Signal.create(initialValue, equalsPredicate);\n        this.innerSignal = LazySignal.create(initialValue, subscribeUpstream, equalsPredicate);\n        this.innerSignal.passiveSubscribeFull((_data, _patches, tags) => {\n            if (this.isSubscriptionHandledByWriteLoop) {\n                return;\n            }\n            this.updateOptimisticValue(tags);\n        });\n    }\n    static create(initialValue, subscribeUpstream, \n    /**\n     * Returns true if the update is sent to the upstream (thus should wait for the upstream to\n     * confirm. Returns false if the update is not sent and the update should be dropped.\n     */\n    writeUpstream, equalsPredicate = (a, b) => a === b) {\n        const signal = new OWLSignal(initialValue, subscribeUpstream, writeUpstream, equalsPredicate);\n        const setSignal = makeSetterWithPatches(signal.update.bind(signal));\n        const emitError = (tags, error) => signal.emitWriteErrorEvent({ tags, error });\n        return [signal, setSignal, emitError];\n    }\n    static createWithoutInitialValue(subscribeUpstream, writeUpstream, equalsPredicate = (a, b) => a === b) {\n        const fullEqualsPredicate = (a, b) => {\n            if (a === OWLSignal.NOT_AVAILABLE || b === OWLSignal.NOT_AVAILABLE) {\n                return a === b;\n            }\n            return equalsPredicate(a, b);\n        };\n        return OWLSignal.create(OWLSignal.NOT_AVAILABLE, subscribeUpstream, writeUpstream, fullEqualsPredicate);\n    }\n    async update(updater, tags) {\n        const { promise, reject, resolve } = makePromise();\n        this.queuedUpdates.push({\n            updater,\n            tags: tags ?? [],\n            resolve,\n            reject,\n        });\n        this.updateOptimisticValue();\n        this.ensureWriteLoop();\n        return promise;\n    }\n    /**\n     * Starts the write loop if it is not already running.\n     */\n    ensureWriteLoop() {\n        if (!this.isWriteLoopRunning) {\n            this.writeLoop(); // This is not expected to error, if it does, just default behavior\n        }\n    }\n    /**\n     * The main write loop, it will keep running until there are no more updates to process.\n     */\n    async writeLoop() {\n        const unsubscribe = this.innerSignal.subscribe(() => { });\n        this.isWriteLoopRunning = true;\n        if (this.isStale()) {\n            await this.innerSignal.pull();\n        }\n        while (this.queuedUpdates.length > 0) {\n            const numQueuedUpdatesToHandle = this.queuedUpdates.length;\n            const updater = (data) => {\n                const patches = [];\n                for (let i = 0; i < numQueuedUpdatesToHandle; i++) {\n                    const [newData, newPatches] = this.queuedUpdates[i].updater(data);\n                    data = newData;\n                    patches.push(...newPatches);\n                }\n                return [data, patches];\n            };\n            const resolve = () => {\n                for (let i = 0; i < numQueuedUpdatesToHandle; i++) {\n                    this.queuedUpdates[i].resolve();\n                }\n            };\n            const reject = (error) => {\n                for (let i = 0; i < numQueuedUpdatesToHandle; i++) {\n                    this.queuedUpdates[i].reject(error);\n                }\n            };\n            const queuedUpdateTags = this.queuedUpdates.flatMap(update => update.tags);\n            const tag = Date.now() + \"-\" + Math.random();\n            await new Promise(nextStep => {\n                this.isSubscriptionHandledByWriteLoop = true;\n                const unsubscribeArray = [];\n                const settle = () => {\n                    this.isSubscriptionHandledByWriteLoop = false;\n                    unsubscribeArray.forEach(unsubscribe => unsubscribe());\n                    nextStep();\n                };\n                unsubscribeArray.push(this.innerSignal.subscribeFull((_data, _patches, tags) => {\n                    if (!this.isSubscriptionHandledByWriteLoop) {\n                        return;\n                    }\n                    if (tags?.includes(tag)) {\n                        settle();\n                        resolve();\n                        // If this update is caused by the write, we need to remove the optimistic update\n                        // and apply the remaining optimistic updates\n                        this.queuedUpdates.splice(0, numQueuedUpdatesToHandle);\n                        this.updateOptimisticValue(tags.filter(t => t !== tag));\n                    }\n                    else {\n                        // This update is not caused by the write, simply update the optimistic value\n                        // as normal\n                        this.updateOptimisticValue(tags);\n                    }\n                }));\n                unsubscribeArray.push(this.writeErrorEvent.subscribe(({ tags, error }) => {\n                    if (!this.isSubscriptionHandledByWriteLoop) {\n                        return;\n                    }\n                    if (tags.includes(tag)) {\n                        settle();\n                        reject(error);\n                        this.queuedUpdates.splice(0, numQueuedUpdatesToHandle);\n                    }\n                }));\n                // At this point, we know the data is available, because upon entering the write loop, we\n                // ensure that the data is available by pulling. Hence, we can safely cast the data to\n                // StripNotAvailable<TData>.\n                const sent = this.writeUpstream(...updater(this.innerSignal.get()), [tag, ...queuedUpdateTags]);\n                if (!sent) {\n                    settle();\n                    resolve();\n                    this.queuedUpdates.splice(0, numQueuedUpdatesToHandle);\n                    this.updateOptimisticValue(queuedUpdateTags.filter(t => t !== tag));\n                }\n            });\n        }\n        this.isWriteLoopRunning = false;\n        unsubscribe();\n    }\n    /**\n     * Returns whether the value is currently stale.\n     *\n     * A value is stale whenever the upstream subscription is not active. This can happen in three\n     * cases:\n     *\n     * 1. When no subscriber is attached to this signal, the signal will not subscribe to the\n     *    upstream. In this case, the value is always stale.\n     * 2. When a subscriber is attached, but the upstream has not yet emitted a single value, the\n     *    value is also stale.\n     * 3. When the upstream has emitted an error. In this case, the subscription to the upstream is\n     *    terminated and the value is stale.\n     *\n     * If you wish to get the current value and ensure that it is not stale, use the method\n     * {@link OWLSignal#pull}.\n     */\n    isStale() {\n        return this.innerSignal.isStale();\n    }\n    /**\n     * Gets the current value of the signal. If the value is not available, it will return\n     * {@link OWLSignal.NOT_AVAILABLE}. (A value will only be unavailable if the signal is created\n     * without an initial value and the upstream has not emitted a value yet.)\n     *\n     * In addition, the value returned by this method may be stale. Use {@link OWLSignal#isStale} to\n     * check if the value is stale.\n     *\n     * If you wish to get the current value and ensure that it is not stale, use the method\n     * {@link OWLSignal#pull}.\n     */\n    get() {\n        return this.outerSignal.get();\n    }\n    /**\n     * Gets the current value of the signal pessimistically. If the value is not available, it will\n     * return {@link OWLSignal.NOT_AVAILABLE}. (A value will only be unavailable if the signal is\n     * created without an initial value and the upstream has not emitted a value yet.)\n     */\n    getPessimistic() {\n        return this.innerSignal.get();\n    }\n    /**\n     * Pulls the current value of the signal. If the value is stale, it will subscribe and wait for\n     * the next value from the upstream and return it.\n     *\n     * You must also provide an `optimistic` flag. If `optimistic` is true, the pending optimistic\n     * updates will be applied to the value before returning it.\n     */\n    async pull({ optimistic = true } = {}) {\n        if (optimistic) {\n            return this.applyOptimisticUpdates(await this.innerSignal.pull());\n        }\n        else {\n            return this.innerSignal.pull();\n        }\n    }\n    async ensureAvailable() {\n        if (this.currentEnsureAvailablePromise === null) {\n            this.currentEnsureAvailablePromise = (async () => {\n                await this.innerSignal.pull();\n                return this;\n            })();\n        }\n        return this.currentEnsureAvailablePromise;\n    }\n    subscribe(subscriber) {\n        const unsubscribeOuter = this.outerSignal.subscribe(subscriber);\n        const unsubscribeInner = this.innerSignal.subscribe(() => { });\n        return () => {\n            unsubscribeOuter();\n            unsubscribeInner();\n        };\n    }\n    subscribeFull(subscriber) {\n        const unsubscribeOuter = this.outerSignal.subscribeFull(subscriber);\n        const unsubscribeInner = this.innerSignal.subscribeFull(() => { });\n        return () => {\n            unsubscribeOuter();\n            unsubscribeInner();\n        };\n    }\n}\n\nfunction parseFileIdentifier(fileIdentifier) {\n    if (!fileIdentifier.includes(\":\")) {\n        fileIdentifier = `local:${fileIdentifier}`;\n    }\n    const colonIndex = fileIdentifier.indexOf(\":\");\n    const namespace = fileIdentifier.slice(0, colonIndex);\n    const content = fileIdentifier.slice(colonIndex + 1);\n    switch (namespace) {\n        case \"local\": {\n            if (content.includes(\"/\") || content.includes(\"\\\\\") || content.length === 0) {\n                throw new Error(`Invalid local file name: ${content}.`);\n            }\n            return {\n                type: \"local\",\n                fileName: content,\n            };\n        }\n        case \"base64\": {\n            return {\n                type: \"base64\",\n                base64Data: content,\n            };\n        }\n        default: {\n            throw new Error(`Unknown file identifier namespace: ${namespace}.`);\n        }\n    }\n}\n\nfunction promisifyAbortSignal(abortSignal) {\n    return new Promise((_resolve, reject) => {\n        if (abortSignal.aborted) {\n            reject(abortSignal.reason);\n            return;\n        }\n        abortSignal.addEventListener(\"abort\", () => {\n            reject(abortSignal.reason);\n        }, { once: true });\n    });\n}\nfunction raceWithAbortSignal(promise, abortSignal) {\n    return Promise.race([promise, promisifyAbortSignal(abortSignal)]);\n}\n\nconst allowableEnvVarKeys = [\"HSA_OVERRIDE_GFX_VERSION\"];\nconst allowableEnvVarKeysSchema = z.enum(allowableEnvVarKeys);\nconst allowableEnvVarsSchema = z.record(allowableEnvVarKeysSchema, z.string());\n\nconst kebabCaseRegex = /^[a-z0-9]+(?:-[a-z0-9]+)*$/;\nconst kebabCaseSchema = z.string().regex(kebabCaseRegex);\nconst kebabCaseWithDotsRegex = /^[a-z0-9]+(?:[-.][a-z0-9]+)*$/;\nconst kebabCaseWithDotsSchema = z.string().regex(kebabCaseWithDotsRegex);\n\n/**\n * Matches valid file names\n */\nconst fileNameRegex = /^[\\p{L}\\p{N}!@#$%^&()\\-_+=,.;'[\\]{}~`][\\p{L}\\p{N}!@#$%^&()\\-_+=,.;'[\\]{}~` ]*(?<![. ])$/u;\nconst fileNameSchema = z.string().regex(fileNameRegex, { message: \"Invalid file name\" });\n/**\n * Matches paths like:\n *\n * a/b/c\n */\nconst relativePathNoLeadingDotSlashRegex = /^[\\p{L}\\p{N}!@#$%^&()\\-_+=,.;'[\\]{}~`][\\p{L}\\p{N}!@#$%^&()\\-_+=,.;'[\\]{}~` ]*(?<![. ])(?:\\/[\\p{L}\\p{N}!@#$%^&()\\-_+=,.;'[\\]{}~`][\\p{L}\\p{N}!@#$%^&()\\-_+=,.;'[\\]{}~` ]*(?<![. ]))*$/u;\nz\n    .string()\n    .regex(relativePathNoLeadingDotSlashRegex, {\n    message: \"Invalid relative path\",\n});\n\nconst huggingFaceModelDownloadSourceSchema = z.object({\n    type: z.literal(\"huggingface\"),\n    user: fileNameSchema,\n    repo: fileNameSchema,\n});\nconst modelDownloadSourceSchema = z.discriminatedUnion(\"type\", [huggingFaceModelDownloadSourceSchema]);\n\nconst artifactDependencyPurposeSchema = z.enum([\n    \"baseModel\",\n    \"draftModel\",\n    \"custom\",\n]);\nconst artifactDependencyBaseSchema = z.object({\n    purpose: artifactDependencyPurposeSchema,\n});\nconst artifactModelDependencySchema = z.object({\n    type: z.literal(\"model\"),\n    ...artifactDependencyBaseSchema.shape,\n    modelKeys: z.array(z.string().min(1)),\n    sources: z.array(modelDownloadSourceSchema),\n});\nconst artifactArtifactDependencySchema = z.object({\n    type: z.literal(\"artifact\"),\n    ...artifactDependencyBaseSchema.shape,\n    owner: kebabCaseSchema,\n    name: kebabCaseWithDotsSchema,\n});\nconst artifactDependencySchema = z.discriminatedUnion(\"type\", [\n    artifactModelDependencySchema,\n    artifactArtifactDependencySchema,\n]);\nconst artifactManifestBaseSchema = z.object({\n    owner: kebabCaseSchema,\n    name: kebabCaseWithDotsSchema.min(1, \"Name is required\").max(100, \"Name too long\"),\n    revision: z.number().int().optional(),\n    dependencies: z.array(artifactDependencySchema).optional(),\n    tags: z.array(z.string()).optional(),\n});\nconst artifactIdentifierRegex = /^[a-z0-9]+(?:-[a-z0-9]+)*\\/[a-z0-9]+(?:[-.][a-z0-9]+)*$/;\nconst artifactIdentifierSchema = z.string().regex(artifactIdentifierRegex, {\n    message: \"Invalid artifact identifier format. Expected 'owner/name'.\",\n});\n\nconst modelManifestSchema = z.object({\n    type: z.literal(\"model\"),\n    ...artifactManifestBaseSchema.shape,\n});\n\nconst pluginRunnerTypeSchema = z.enum([\"ecmascript\", \"node\", \"mcpBridge\"]);\nconst pluginManifestSchema = z.object({\n    type: z.literal(\"plugin\"),\n    runner: pluginRunnerTypeSchema,\n    ...artifactManifestBaseSchema.shape,\n});\n\nconst presetManifestSchema = z.object({\n    type: z.literal(\"preset\"),\n    ...artifactManifestBaseSchema.shape,\n});\n\nz.discriminatedUnion(\"type\", [\n    pluginManifestSchema,\n    presetManifestSchema,\n    modelManifestSchema,\n]);\nconst artifactTypeSchema = z.enum([\"plugin\", \"preset\", \"model\"]);\n\nconst backendNotificationSchema = z.object({\n    title: z.string(),\n    description: z.string().optional(),\n    noAutoDismiss: z.boolean().optional(),\n});\n\nconst fileTypeSchema = z.enum([\n    \"image\",\n    \"text/plain\",\n    \"application/pdf\",\n    \"application/word\",\n    \"text/other\",\n    \"unknown\",\n]);\n\nconst jsonSerializableSchema = z.any().transform((val, ctx) => {\n    try {\n        // Needs a more performant way to do this.\n        return JSON.parse(JSON.stringify(val));\n    }\n    catch (e) {\n        ctx.addIssue({\n            code: z.ZodIssueCode.custom,\n            message: \"Not JSON serializable: \" + e.message,\n        });\n        return val;\n    }\n});\n\nconst chatMessagePartTextDataSchema = z.object({\n    type: z.literal(\"text\"),\n    text: z.string(),\n});\nconst chatMessagePartFileDataSchema = z.object({\n    type: z.literal(\"file\"),\n    name: z.string(),\n    identifier: z.string(),\n    sizeBytes: z.number().int(),\n    fileType: fileTypeSchema,\n});\nconst functionToolCallRequestSchema = z.object({\n    id: z.string().optional(),\n    type: z.literal(\"function\"),\n    arguments: z.record(jsonSerializableSchema).optional(),\n    name: z.string(),\n});\nconst toolCallRequestSchema = z.discriminatedUnion(\"type\", [\n    functionToolCallRequestSchema,\n]);\nconst chatMessagePartToolCallRequestDataSchema = z.object({\n    type: z.literal(\"toolCallRequest\"),\n    toolCallRequest: toolCallRequestSchema,\n});\nz.object({\n    content: z.string(),\n    toolCallId: z.string().optional(),\n});\nconst chatMessagePartToolCallResultDataSchema = z.object({\n    type: z.literal(\"toolCallResult\"),\n    content: z.string(),\n    toolCallId: z.string().optional(),\n});\nz.discriminatedUnion(\"type\", [\n    chatMessagePartTextDataSchema,\n    chatMessagePartFileDataSchema,\n    chatMessagePartToolCallRequestDataSchema,\n    chatMessagePartToolCallResultDataSchema,\n]);\nz.enum([\"assistant\", \"user\", \"system\", \"tool\"]);\nconst chatMessageDataSchema = z.discriminatedUnion(\"role\", [\n    z.object({\n        role: z.literal(\"assistant\"),\n        content: z.array(z.discriminatedUnion(\"type\", [\n            chatMessagePartTextDataSchema,\n            chatMessagePartFileDataSchema,\n            chatMessagePartToolCallRequestDataSchema,\n        ])),\n    }),\n    z.object({\n        role: z.literal(\"user\"),\n        content: z.array(z.discriminatedUnion(\"type\", [chatMessagePartTextDataSchema, chatMessagePartFileDataSchema])),\n    }),\n    z.object({\n        role: z.literal(\"system\"),\n        content: z.array(z.discriminatedUnion(\"type\", [chatMessagePartTextDataSchema, chatMessagePartFileDataSchema])),\n    }),\n    z.object({\n        role: z.literal(\"tool\"),\n        content: z.array(chatMessagePartToolCallResultDataSchema),\n    }),\n]);\nconst chatHistoryDataSchema = z.object({\n    messages: z.array(chatMessageDataSchema),\n});\n\nconst citationSourceSchema = z.object({\n    fileName: z.string(),\n    absoluteFilePath: z.string().optional(),\n    pageNumber: z.union([z.number().int(), z.tuple([z.number().int(), z.number().int()])]).optional(),\n    lineNumber: z.union([z.number().int(), z.tuple([z.number().int(), z.number().int()])]).optional(),\n});\n\n/**\n * @deprecated Use colorPaletteSchema instead.\n */\nconst colorPalette = z.enum([\n    \"red\",\n    \"green\",\n    \"blue\",\n    \"yellow\",\n    \"orange\",\n    \"purple\",\n    \"default\",\n]);\nconst colorPaletteSchema = colorPalette;\n\nconst diagnosticsLogEventDataSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"llm.prediction.input\"),\n        modelPath: z.string(),\n        modelIdentifier: z.string(),\n        input: z.string(),\n    }),\n]);\nconst diagnosticsLogEventSchema = z.object({\n    timestamp: z.number(),\n    data: diagnosticsLogEventDataSchema,\n});\n\nconst llmLlamaAccelerationOffloadRatioSchema = z.union([\n    z.number().min(0).max(1),\n    z.literal(\"max\"),\n    z.literal(\"off\"),\n]);\nconst llmSplitStrategySchema = z.enum([\"evenly\", \"favorMainGpu\"]);\nconst gpuSettingSchema = z.object({\n    ratio: llmLlamaAccelerationOffloadRatioSchema.optional(),\n    mainGpu: z.number().int().optional(),\n    splitStrategy: llmSplitStrategySchema.optional(),\n    disabledGpus: z.array(z.number().int()).optional(),\n});\nconst llmLlamaCacheQuantizationTypes = [\n    \"f32\",\n    \"f16\",\n    \"q8_0\",\n    \"q4_0\",\n    \"q4_1\",\n    \"iq4_nl\",\n    \"q5_0\",\n    \"q5_1\",\n];\nconst llmLlamaCacheQuantizationTypeSchema = z.enum(llmLlamaCacheQuantizationTypes);\nconst llmMlxKvCacheBitsTypeSchema = z.union([\n    z.literal(8),\n    z.literal(6),\n    z.literal(4),\n    z.literal(3),\n    z.literal(2),\n]);\nconst llmMlxKvCacheGroupSizeTypesSchema = z.union([\n    z.literal(32),\n    z.literal(64),\n    z.literal(128),\n]);\nconst llmMlxKvCacheQuantizationSchema = z.object({\n    enabled: z.boolean(),\n    bits: llmMlxKvCacheBitsTypeSchema,\n    groupSize: llmMlxKvCacheGroupSizeTypesSchema,\n    quantizedStart: z.number().int().nonnegative(),\n});\nconst llmLoadModelConfigSchema = z.object({\n    gpu: gpuSettingSchema.optional(),\n    gpuStrictVramCap: z.boolean().optional(),\n    offloadKVCacheToGpu: z.boolean().optional(),\n    contextLength: z.number().int().min(1).optional(),\n    ropeFrequencyBase: z.number().optional(),\n    ropeFrequencyScale: z.number().optional(),\n    evalBatchSize: z.number().int().min(1).optional(),\n    flashAttention: z.boolean().optional(),\n    keepModelInMemory: z.boolean().optional(),\n    seed: z.number().int().optional(),\n    useFp16ForKVCache: z.boolean().optional(),\n    tryMmap: z.boolean().optional(),\n    numExperts: z.number().int().optional(),\n    llamaKCacheQuantizationType: z\n        .enum(llmLlamaCacheQuantizationTypes)\n        .or(z.literal(false))\n        .optional(),\n    llamaVCacheQuantizationType: z\n        .enum(llmLlamaCacheQuantizationTypes)\n        .or(z.literal(false))\n        .optional(),\n});\n\nconst embeddingLoadModelConfigSchema = z.object({\n    gpu: gpuSettingSchema.optional(),\n    contextLength: z.number().int().min(1).optional(),\n    ropeFrequencyBase: z.number().optional(),\n    ropeFrequencyScale: z.number().optional(),\n    keepModelInMemory: z.boolean().optional(),\n    tryMmap: z.boolean().optional(),\n});\n\nconst modelCompatibilityTypeSchema = z.enum([\n    \"gguf\",\n    \"safetensors\",\n    \"onnx\",\n    \"ggml\",\n    \"mlx_placeholder\",\n    \"torch_safetensors\",\n]);\n\nconst quantizationSchema = z.object({\n    name: z.string(),\n    bits: z.number().int(),\n});\n\nconst modelInfoBaseSchema = z.object({\n    modelKey: z.string(),\n    format: modelCompatibilityTypeSchema,\n    displayName: z.string(),\n    path: z.string(),\n    sizeBytes: z.number().int(),\n    paramsString: z.string().optional(),\n    architecture: z.string().optional(),\n    quantization: quantizationSchema.optional(),\n});\nconst modelInstanceInfoBaseSchema = modelInfoBaseSchema.extend({\n    identifier: z.string(),\n    instanceReference: z.string(),\n});\n\nconst embeddingModelAdditionalInfoSchema = z.object({\n    maxContextLength: z.number().int(),\n});\nconst embeddingModelInstanceAdditionalInfoSchema = z.object({\n    contextLength: z.number().int(),\n});\nconst embeddingModelInfoSchema = z\n    .object({\n    type: z.literal(\"embedding\"),\n})\n    .extend(modelInfoBaseSchema.shape)\n    .extend(embeddingModelAdditionalInfoSchema.shape);\nconst embeddingModelInstanceInfoSchema = z\n    .object({ type: z.literal(\"embedding\") })\n    .extend(modelInstanceInfoBaseSchema.shape)\n    .extend(embeddingModelAdditionalInfoSchema.shape)\n    .extend(embeddingModelInstanceAdditionalInfoSchema.shape);\n\nconst modelDomainTypeSchema = z.enum([\n    \"llm\",\n    \"embedding\",\n    \"imageGen\",\n    \"transcription\",\n    \"tts\",\n]);\n\n/**\n * A string that is reasonable to use as a key. For example, as preset name, model path, or model\n * identifier.\n */\nconst reasonableKeyStringSchema = z\n    .string()\n    .min(1)\n    .max(1024)\n    .refine(value => value !== \"__proto__\", {\n    message: 'For security reasons, \"__proto__\" is not allowed',\n})\n    .refine(value => /\\p{C}/u.test(value) === false, {\n    message: \"Control characters are not allowed\",\n});\n\nconst modelQuerySchema = z.object({\n    domain: modelDomainTypeSchema.optional(),\n    identifier: reasonableKeyStringSchema.optional(),\n    path: reasonableKeyStringSchema.optional(),\n    vision: z.boolean().optional(),\n});\nconst modelSpecifierSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"query\"),\n        query: modelQuerySchema,\n    }),\n    z.object({\n        type: z.literal(\"instanceReference\"),\n        instanceReference: z.string(),\n    }),\n]);\n\nconst genericErrorDisplayDataSchema = [\n    z.object({\n        code: z.literal(\"generic.specificModelUnloaded\"),\n    }),\n    z.object({\n        code: z.literal(\"generic.noModelMatchingQuery\"),\n        query: modelQuerySchema,\n        loadedModelsSample: z.array(z.string()),\n        totalLoadedModels: z.number().int(),\n    }),\n    z.object({\n        code: z.literal(\"generic.pathNotFound\"),\n        path: z.string(),\n        availablePathsSample: z.array(z.string()),\n        totalModels: z.number().int(),\n    }),\n    z.object({\n        code: z.literal(\"generic.identifierNotFound\"),\n        identifier: z.string(),\n        loadedModelsSample: z.array(z.string()),\n        totalLoadedModels: z.number().int(),\n    }),\n    z.object({\n        code: z.literal(\"generic.domainMismatch\"),\n        path: z.string(),\n        actualDomain: modelDomainTypeSchema,\n        expectedDomain: modelDomainTypeSchema,\n    }),\n    z.object({\n        code: z.literal(\"generic.engineDoesNotSupportFeature\"),\n        feature: z.string(),\n        engineName: z.string(),\n        engineType: z.string(),\n        installedVersion: z.string(),\n        supportedVersion: z.string().nullable(),\n    }),\n    z.object({\n        code: z.literal(\"generic.presetNotFound\"),\n        specifiedFuzzyPresetIdentifier: z.string(),\n        availablePresetsSample: z.array(z.object({\n            identifier: z.string(),\n            name: z.string(),\n        })),\n        totalAvailablePresets: z.number().int(),\n    }),\n];\n\nconst llmErrorDisplayDataSchema = [];\n\nconst errorDisplayDataSchema = z.discriminatedUnion(\"code\", [\n    ...llmErrorDisplayDataSchema,\n    ...genericErrorDisplayDataSchema,\n]);\n/**\n * Makes a Zod schema that turns a failed parse into an `undefined`.\n */\nfunction failOk(schema) {\n    return z.any().transform(val => (schema.safeParse(val).success ? val : undefined));\n}\nconst serializedLMSExtendedErrorSchema = z.object({\n    title: failOk(z.string()).default(\"Unknown error\"),\n    cause: failOk(z.string()).optional(),\n    suggestion: failOk(z.string()).optional(),\n    errorData: failOk(z.record(z.string(), z.unknown())).optional(),\n    displayData: failOk(errorDisplayDataSchema).optional(),\n    stack: failOk(z.string()).optional(),\n    rootTitle: failOk(z.string()).optional(),\n});\nfunction serializeError(error) {\n    if (typeof error === \"object\") {\n        const title = error.title ?? error.lmstudioRawError ?? error.message ?? \"Unknown error\";\n        return serializedLMSExtendedErrorSchema.parse({\n            title,\n            cause: error.cause,\n            suggestion: error.suggestion,\n            errorData: error.errorData,\n            displayData: error.displayData,\n            stack: error.stack,\n            rootTitle: title,\n        });\n    }\n    else {\n        const title = String(error);\n        return {\n            title,\n            rootTitle: title,\n        };\n    }\n}\n/**\n * Attaches the additional error data from a serialized error to an error object.\n */\nfunction attachSerializedErrorData(error, serialized) {\n    const untypedError = error;\n    untypedError.title = serialized.title;\n    if (serialized.cause !== undefined) {\n        untypedError.cause = serialized.cause;\n    }\n    if (serialized.suggestion !== undefined) {\n        untypedError.suggestion = serialized.suggestion;\n    }\n    if (serialized.errorData !== undefined) {\n        untypedError.errorData = serialized.errorData;\n    }\n}\nfunction fromSerializedError(error, message = \"Rehydrated error\", replacementStack) {\n    const result = new Error(error.rootTitle);\n    attachSerializedErrorData(result, error);\n    if (error.displayData !== undefined) {\n        result.displayData = error.displayData;\n    }\n    if (replacementStack !== undefined) {\n        if (error.stack !== undefined) {\n            result.stack = `Error: ${message}\\n${replacementStack}\\n- Caused By: ${error.stack}`;\n        }\n        else {\n            result.stack = `Error: ${message}\\n${replacementStack}`;\n        }\n    }\n    else {\n        if (error.stack !== undefined) {\n            result.stack =\n                `Error: ${message}\\n${result.stack.substring(error.stack.indexOf(\"\\n\") + 1)}\\n- Caused By: ` +\n                    error.stack;\n        }\n        else {\n            result.message += ` - caused by error without stack (${error.title})`;\n        }\n    }\n    return result;\n}\n\nconst documentParsingLibraryIdentifierSchema = z.object({\n    library: z.string(),\n    version: z.string(),\n});\nconst documentParsingOptsSchema = z.object({\n    parserId: documentParsingLibraryIdentifierSchema.optional(),\n});\n\nz.enum([\"local\", \"base64\"]);\nz.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"local\"),\n        fileName: z.string(),\n    }),\n    z.object({\n        type: z.literal(\"base64\"),\n        base64Data: z.string(),\n    }),\n]);\n\nconst gpuSplitStrategies = [\"evenly\", \"priorityOrder\", \"custom\"];\nconst gpuSplitStrategySchema = z.enum(gpuSplitStrategies);\nconst defaultGPUSplitConfig = {\n    strategy: \"evenly\",\n    disabledGpus: [],\n    priority: [],\n    customRatio: [],\n};\nconst gpuSplitConfigSchema = z.object({\n    strategy: gpuSplitStrategySchema,\n    disabledGpus: z.array(z.number().int().min(0)),\n    priority: z.array(z.number().int().min(0)),\n    customRatio: z.array(z.number().min(0)),\n});\nfunction convertGPUSettingToGPUSplitConfig(gpuSetting) {\n    return {\n        strategy: gpuSetting?.splitStrategy == \"favorMainGpu\"\n            ? \"priorityOrder\"\n            : gpuSetting?.splitStrategy ?? \"evenly\",\n        disabledGpus: gpuSetting?.disabledGpus ?? [],\n        priority: gpuSetting?.mainGpu ? [gpuSetting.mainGpu] : [],\n        customRatio: [],\n    };\n}\n\nconst kvConfigFieldSchema = z.object({\n    key: z.string(),\n    value: z.any(),\n});\nconst kvConfigSchema = z.object({\n    fields: z.array(kvConfigFieldSchema),\n});\nconst kvConfigLayerNameSchema = z.enum([\n    \"currentlyEditing\",\n    \"currentlyLoaded\",\n    \"apiOverride\",\n    \"conversationSpecific\",\n    \"conversationGlobal\",\n    \"preset\",\n    \"serverSession\",\n    \"httpServerRequestOverride\",\n    \"completeModeFormatting\",\n    \"instance\",\n    \"userModelDefault\",\n    \"virtualModel\",\n    \"modelDefault\",\n    \"hardware\",\n]);\nconst kvConfigStackLayerSchema = z.object({\n    layerName: kvConfigLayerNameSchema,\n    config: kvConfigSchema,\n});\nconst kvConfigStackSchema = z.object({\n    layers: z.array(kvConfigStackLayerSchema),\n});\nconst kvConfigFieldDependencySchema = z.object({\n    key: z.string(),\n    condition: z.discriminatedUnion(\"type\", [\n        z.object({ type: z.literal(\"equals\"), value: z.any() }),\n        z.object({ type: z.literal(\"notEquals\"), value: z.any() }),\n    ]),\n});\n\nconst contentBlockStyleSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"default\"),\n    }),\n    z.object({\n        type: z.literal(\"customLabel\"),\n        label: z.string(),\n        color: z.optional(colorPaletteSchema),\n    }),\n    z.object({\n        type: z.literal(\"thinking\"),\n        ended: z.boolean().optional(),\n        title: z.string().optional(),\n    }),\n]);\n\nconst llmToolParametersSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"object\"),\n        properties: z.record(jsonSerializableSchema),\n        required: z.array(z.string()).optional(),\n        additionalProperties: z.boolean().optional(),\n        $defs: z.record(jsonSerializableSchema).optional(),\n    }),\n    // add more parameter types here\n    // ...\n]);\nconst llmToolSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"function\"),\n        function: z.object({\n            name: z.string(),\n            description: z.string().optional(),\n            parameters: llmToolParametersSchema.optional(),\n        }),\n    }),\n    // add more tool types here\n    // ...\n]);\n/**\n * For convenience\n */\nz.array(llmToolSchema);\nconst llmToolUseSettingSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"none\"),\n    }),\n    z.object({\n        type: z.literal(\"toolArray\"),\n        tools: z.array(llmToolSchema).optional(),\n        force: z.boolean().optional(),\n    }),\n]);\n\nconst llmApplyPromptTemplateOptsSchema = z.object({\n    omitBosToken: z.boolean().optional(),\n    omitEosToken: z.boolean().optional(),\n    toolDefinitions: z.array(llmToolSchema).optional(),\n});\n\nconst llmContextReferenceSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"jsonFile\"),\n        absPath: z.string(),\n    }),\n    z.object({\n        type: z.literal(\"yamlFile\"),\n        absPath: z.string(),\n    }),\n]);\nz.array(z.object({\n    role: z.enum([\"user\", \"assistant\", \"system\"]),\n    content: z.string(),\n}));\nz.array(z.union([\n    z.object({\n        system: z.string(),\n    }),\n    z.object({\n        user: z.string(),\n    }),\n    z.object({\n        assistant: z.string(),\n    }),\n]));\n\nconst llmAdditionalInfoSchema = z.object({\n    vision: z.boolean(),\n    trainedForToolUse: z.boolean(),\n    maxContextLength: z.number().int(),\n});\nconst llmInstanceAdditionalInfoSchema = z.object({\n    contextLength: z.number().int(),\n});\nconst llmInfoSchema = z\n    .object({\n    type: z.literal(\"llm\"),\n})\n    .extend(modelInfoBaseSchema.shape)\n    .extend(llmAdditionalInfoSchema.shape);\nconst llmInstanceInfoSchema = z\n    .object({\n    type: z.literal(\"llm\"),\n})\n    .extend(modelInstanceInfoBaseSchema.shape)\n    .extend(llmAdditionalInfoSchema.shape)\n    .extend(llmInstanceAdditionalInfoSchema.shape);\n\nconst toolNamingSchema = z.enum([\"passThrough\", \"removeSpecial\", \"snakeCase\", \"camelCase\"]);\n\n/**\n * Check if has a parse method. If not, output error message asking for it to be a zod schema.\n */\nconst zodSchemaSchema = z.custom(value => {\n    if (typeof value?.parse !== \"function\") {\n        return false;\n    }\n    return true;\n}, \"Expected a zod schema\");\n\nconst llmManualPromptTemplateSchema = z.object({\n    beforeSystem: z.string(),\n    afterSystem: z.string(),\n    beforeUser: z.string(),\n    afterUser: z.string(),\n    beforeAssistant: z.string(),\n    afterAssistant: z.string(),\n});\nconst llmJinjaPromptTemplateSchema = z.object({\n    template: z.string(),\n});\nconst llmPromptTemplateTypeSchema = z.enum([\"manual\", \"jinja\"]);\nconst llmPromptTemplateSchema = z.object({\n    type: llmPromptTemplateTypeSchema,\n    manualPromptTemplate: llmManualPromptTemplateSchema.optional(),\n    jinjaPromptTemplate: llmJinjaPromptTemplateSchema.optional(),\n    stopStrings: z.array(z.string()),\n});\n\nconst llmStructuredPredictionTypeSchema = z.enum([\"none\", \"json\", \"gbnf\"]);\nconst llmStructuredPredictionSettingSchema = z.object({\n    type: llmStructuredPredictionTypeSchema,\n    jsonSchema: jsonSerializableSchema.optional(),\n    gbnfGrammar: z.string().optional(),\n});\n\nconst llmContextOverflowPolicySchema = z.enum([\n    \"stopAtLimit\",\n    \"truncateMiddle\",\n    \"rollingWindow\",\n]);\nconst llmReasoningParsingSchema = z.object({\n    enabled: z.boolean(),\n    startString: z.string(),\n    endString: z.string(),\n});\nconst llmPredictionConfigInputSchema = z.object({\n    maxTokens: z.number().int().min(-1).optional().or(z.literal(false)),\n    temperature: z.number().min(0).optional(),\n    stopStrings: z.array(z.string()).optional(),\n    toolCallStopStrings: z.array(z.string()).optional(),\n    contextOverflowPolicy: llmContextOverflowPolicySchema.optional(),\n    structured: z.union([zodSchemaSchema, llmStructuredPredictionSettingSchema]).optional(),\n    rawTools: llmToolUseSettingSchema.optional(),\n    toolNaming: toolNamingSchema.optional(),\n    topKSampling: z.number().optional(),\n    repeatPenalty: z.number().optional().or(z.literal(false)),\n    minPSampling: z.number().optional().or(z.literal(false)),\n    topPSampling: z.number().optional().or(z.literal(false)),\n    cpuThreads: z.number().int().optional(),\n    promptTemplate: llmPromptTemplateSchema.optional(),\n    draftModel: z.string().optional(),\n    speculativeDecodingNumDraftTokensExact: z.number().int().min(1).optional(),\n    speculativeDecodingMinDraftLengthToConsider: z.number().int().min(0).optional(),\n    speculativeDecodingMinContinueDraftingProbability: z.number().optional(),\n    reasoningParsing: llmReasoningParsingSchema.optional(),\n    raw: kvConfigSchema.optional(),\n});\nz.object({\n    ...llmPredictionConfigInputSchema.shape,\n    structured: llmStructuredPredictionSettingSchema.optional(),\n});\nconst llmLlamaMirostatSamplingConfigSchema = z.object({\n    version: z.union([z.literal(0), z.literal(1), z.literal(2)]),\n    learningRate: z.number(),\n    targetEntropy: z.number(),\n});\nconst llmLlamaSingleLogitBiasModificationSchema = z.union([z.number(), z.literal(\"-inf\")]);\nconst llmLlamaLogitBiasConfigSchema = z.array(z.tuple([z.number(), llmLlamaSingleLogitBiasModificationSchema]));\n\nconst llmPredictionFragmentReasoningTypeSchema = z.enum([\n    \"none\",\n    \"reasoning\",\n    \"reasoningStartTag\",\n    \"reasoningEndTag\",\n]);\nconst llmPredictionFragmentSchema = z.object({\n    content: z.string(),\n    tokensCount: z.number().int(),\n    containsDrafted: z.boolean(),\n    reasoningType: llmPredictionFragmentReasoningTypeSchema,\n    isStructural: z.boolean(),\n});\nconst llmPredictionFragmentInputOptsSchema = z.object({\n    tokenCount: z.number().int().optional(),\n    containsDrafted: z.boolean().optional(),\n    reasoningType: llmPredictionFragmentReasoningTypeSchema.optional(),\n    isStructural: z.boolean().optional(),\n});\n\nconst llmPredictionStopReasonSchema = z.enum([\n    \"userStopped\",\n    \"modelUnloaded\",\n    \"failed\",\n    \"eosFound\",\n    \"stopStringFound\",\n    \"toolCalls\",\n    \"maxPredictedTokensReached\",\n    \"contextLengthReached\",\n]);\nconst llmPredictionStatsSchema = z.object({\n    stopReason: llmPredictionStopReasonSchema,\n    tokensPerSecond: z.number().optional(),\n    numGpuLayers: z.number().optional(),\n    timeToFirstTokenSec: z.number().optional(),\n    totalTimeSec: z.number().optional(),\n    promptTokensCount: z.number().int().optional(),\n    predictedTokensCount: z.number().int().optional(),\n    totalTokensCount: z.number().int().optional(),\n    usedDraftModelKey: z.string().optional(),\n    totalDraftTokensCount: z.number().int().optional(),\n    acceptedDraftTokensCount: z.number().int().optional(),\n    rejectedDraftTokensCount: z.number().int().optional(),\n    ignoredDraftTokensCount: z.number().int().optional(),\n});\nconst llmGenInfoSchema = z.object({\n    indexedModelIdentifier: z.string(),\n    identifier: z.string(),\n    loadModelConfig: kvConfigSchema,\n    predictionConfig: kvConfigSchema,\n    stats: llmPredictionStatsSchema,\n});\n\nconst blockLocationSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"beforeId\"),\n        id: z.string(),\n    }),\n    z.object({\n        type: z.literal(\"afterId\"),\n        id: z.string(),\n    }),\n]);\nconst statusStepStatusSchema = z.enum([\n    \"waiting\",\n    \"loading\",\n    \"done\",\n    \"error\",\n    \"canceled\",\n]);\nconst statusStepStateSchema = z.object({\n    status: statusStepStatusSchema,\n    text: z.string(),\n});\nconst processingUpdateStatusCreateSchema = z.object({\n    type: z.literal(\"status.create\"),\n    id: z.string(),\n    state: statusStepStateSchema,\n    location: blockLocationSchema.optional(),\n    indentation: z.number().int().optional(),\n});\nconst processingUpdateStatusUpdateSchema = z.object({\n    type: z.literal(\"status.update\"),\n    id: z.string(),\n    state: statusStepStateSchema,\n});\nconst processingUpdateStatusRemoveSchema = z.object({\n    type: z.literal(\"status.remove\"),\n    id: z.string(),\n});\nconst processingUpdateCitationBlockCreateSchema = z.object({\n    type: z.literal(\"citationBlock.create\"),\n    id: z.string(),\n    citedText: z.string(),\n    fileName: z.string(),\n    fileIdentifier: z.string(),\n    pageNumber: z.union([z.number().int(), z.tuple([z.number().int(), z.number().int()])]).optional(),\n    lineNumber: z.union([z.number().int(), z.tuple([z.number().int(), z.number().int()])]).optional(),\n});\nconst processingUpdateDebugInfoBlockCreateSchema = z.object({\n    type: z.literal(\"debugInfoBlock.create\"),\n    id: z.string(),\n    debugInfo: z.string(),\n});\nconst processingUpdateContentBlockCreateSchema = z.object({\n    type: z.literal(\"contentBlock.create\"),\n    id: z.string(),\n    includeInContext: z.boolean(),\n    roleOverride: z.enum([\"user\", \"assistant\", \"system\", \"tool\"]).optional(),\n    style: contentBlockStyleSchema.optional(),\n    prefix: z.string().optional(),\n    suffix: z.string().optional(),\n});\nconst processingUpdateContentBlockAppendTextSchema = z.object({\n    type: z.literal(\"contentBlock.appendText\"),\n    id: z.string(),\n    text: z.string(),\n    tokensCount: z.number().int().optional(),\n    fromDraftModel: z.boolean().optional(),\n    isStructural: z.boolean().optional(),\n});\nconst processingUpdateContentBlockAppendToolResultSchema = z.object({\n    type: z.literal(\"contentBlock.appendToolResult\"),\n    id: z.string(),\n    callId: z.number().int(),\n    toolCallRequestId: z.string().optional(),\n    content: z.string(),\n});\nconst processingUpdateContentBlockAppendToolRequestSchema = z.object({\n    type: z.literal(\"contentBlock.appendToolRequest\"),\n    id: z.string(),\n    callId: z.number().int(),\n    toolCallRequestId: z.string().optional(),\n    name: z.string(),\n    parameters: z.record(z.unknown()),\n    pluginIdentifier: z.string().optional(),\n});\nconst processingUpdateContentBlockReplaceToolRequestSchema = z.object({\n    type: z.literal(\"contentBlock.replaceToolRequest\"),\n    id: z.string(),\n    callId: z.number().int(),\n    toolCallRequestId: z.string().optional(),\n    name: z.string(),\n    parameters: z.record(z.unknown()),\n    pluginIdentifier: z.string().optional(),\n});\nconst processingUpdateContentBlockReplaceTextSchema = z.object({\n    type: z.literal(\"contentBlock.replaceText\"),\n    id: z.string(),\n    text: z.string(),\n});\nconst processingUpdateContentBlockSetPrefixSchema = z.object({\n    type: z.literal(\"contentBlock.setPrefix\"),\n    id: z.string(),\n    prefix: z.string(),\n});\nconst processingUpdateContentBlockSetSuffixSchema = z.object({\n    type: z.literal(\"contentBlock.setSuffix\"),\n    id: z.string(),\n    suffix: z.string(),\n});\nconst processingUpdateContentBlockAttachGenInfoSchema = z.object({\n    type: z.literal(\"contentBlock.attachGenInfo\"),\n    id: z.string(),\n    genInfo: llmGenInfoSchema,\n});\nconst processingUpdateContentBlockSetStyleSchema = z.object({\n    type: z.literal(\"contentBlock.setStyle\"),\n    id: z.string(),\n    style: contentBlockStyleSchema,\n});\nconst toolStatusStepStateStatusSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"generatingToolCall\"),\n        name: z.string().optional(),\n        pluginIdentifier: z.string().optional(),\n        argumentsString: z.string().optional(),\n    }),\n    z.object({\n        type: z.literal(\"toolCallGenerationFailed\"),\n        error: z.string(),\n        rawContent: z.string().optional(),\n    }),\n    z.object({\n        type: z.literal(\"toolCallQueued\"),\n    }),\n    z.object({\n        type: z.literal(\"confirmingToolCall\"),\n    }),\n    z.object({\n        type: z.literal(\"toolCallDenied\"),\n        denyReason: z.string().optional(),\n    }),\n    z.object({\n        type: z.literal(\"callingTool\"),\n    }),\n    z.object({\n        type: z.literal(\"toolCallFailed\"),\n        error: z.string(),\n    }),\n    z.object({\n        type: z.literal(\"toolCallSucceeded\"),\n        timeMs: z.number().int(),\n    }),\n]);\nconst toolStatusStepStateSchema = z.object({\n    status: toolStatusStepStateStatusSchema,\n    customStatus: z.string(),\n    customWarnings: z.array(z.string()),\n});\nconst processingUpdateToolStatusCreateSchema = z.object({\n    type: z.literal(\"toolStatus.create\"),\n    id: z.string(),\n    callId: z.number().int(),\n    state: toolStatusStepStateSchema,\n});\nconst processingUpdateToolStatusUpdateSchema = z.object({\n    type: z.literal(\"toolStatus.update\"),\n    id: z.string(),\n    state: toolStatusStepStateSchema,\n});\nconst processingUpdateToolStatusArgumentFragmentSchema = z.object({\n    type: z.literal(\"toolStatus.argumentFragment\"),\n    id: z.string(),\n    content: z.string(),\n});\nconst processingUpdateSetSenderNameSchema = z.object({\n    type: z.literal(\"setSenderName\"),\n    name: z.string(),\n});\nconst processingUpdateSchema = z.discriminatedUnion(\"type\", [\n    processingUpdateStatusCreateSchema,\n    processingUpdateStatusUpdateSchema,\n    processingUpdateStatusRemoveSchema,\n    processingUpdateCitationBlockCreateSchema,\n    processingUpdateDebugInfoBlockCreateSchema,\n    processingUpdateContentBlockCreateSchema,\n    processingUpdateContentBlockAppendTextSchema,\n    processingUpdateContentBlockAppendToolRequestSchema,\n    processingUpdateContentBlockReplaceToolRequestSchema,\n    processingUpdateContentBlockAppendToolResultSchema,\n    processingUpdateContentBlockReplaceTextSchema,\n    processingUpdateContentBlockSetPrefixSchema,\n    processingUpdateContentBlockSetSuffixSchema,\n    processingUpdateContentBlockAttachGenInfoSchema,\n    processingUpdateContentBlockSetStyleSchema,\n    processingUpdateToolStatusCreateSchema,\n    processingUpdateToolStatusUpdateSchema,\n    processingUpdateToolStatusArgumentFragmentSchema,\n    processingUpdateSetSenderNameSchema,\n]);\n\nz.discriminatedUnion(\"type\", [\n    processingUpdateStatusCreateSchema,\n    processingUpdateStatusUpdateSchema,\n    processingUpdateStatusRemoveSchema,\n    processingUpdateCitationBlockCreateSchema,\n    processingUpdateDebugInfoBlockCreateSchema,\n    processingUpdateContentBlockCreateSchema,\n    processingUpdateContentBlockAppendTextSchema,\n    processingUpdateContentBlockReplaceTextSchema,\n    processingUpdateContentBlockAppendToolRequestSchema,\n    processingUpdateContentBlockReplaceToolRequestSchema,\n    processingUpdateContentBlockAppendToolResultSchema,\n    processingUpdateContentBlockAttachGenInfoSchema,\n    processingUpdateContentBlockSetStyleSchema,\n    processingUpdateToolStatusCreateSchema,\n    processingUpdateToolStatusUpdateSchema,\n    processingUpdateToolStatusArgumentFragmentSchema,\n    processingUpdateSetSenderNameSchema,\n]);\n\nconst processingRequestConfirmToolCallSchema = z.object({\n    type: z.literal(\"confirmToolCall\"),\n    callId: z.number().int(),\n    pluginIdentifier: z.string().optional(),\n    name: z.string(),\n    parameters: z.record(z.any()),\n});\nconst processingRequestTextInputSchema = z.object({\n    type: z.literal(\"textInput\"),\n    prompt: z.string(),\n});\nconst processingRequestSchema = z.discriminatedUnion(\"type\", [\n    processingRequestConfirmToolCallSchema,\n    processingRequestTextInputSchema,\n]);\nconst processingRequestResponseConfirmToolCallSchema = z.object({\n    type: z.literal(\"confirmToolCall\"),\n    result: z.discriminatedUnion(\"type\", [\n        z.object({\n            type: z.literal(\"allow\"),\n            toolArgsOverride: z.record(z.any()).optional(),\n        }),\n        z.object({\n            type: z.literal(\"deny\"),\n            denyReason: z.string().optional(),\n        }),\n    ]),\n});\nconst processingRequestResponseTextInputSchema = z.object({\n    type: z.literal(\"textInput\"),\n    result: z.string(),\n});\nconst processingRequestResponseSchema = z.discriminatedUnion(\"type\", [\n    processingRequestResponseConfirmToolCallSchema,\n    processingRequestResponseTextInputSchema,\n]);\n\nz.object({\n    modelTag: z.string().optional(),\n    ignoreUserConfig: z.boolean().optional(),\n});\n\nz.discriminatedUnion(\"type\", [\n    processingUpdateStatusCreateSchema,\n    processingUpdateStatusUpdateSchema,\n    processingUpdateStatusRemoveSchema,\n    processingUpdateCitationBlockCreateSchema,\n    processingUpdateDebugInfoBlockCreateSchema,\n]);\n\nconst tokenSourceIdentifierSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"model\"),\n        identifier: z.string(),\n    }),\n    z.object({\n        type: z.literal(\"generator\"),\n        pluginIdentifier: z.string(),\n    }),\n]);\n\nconst modelInfoSchema = z.discriminatedUnion(\"type\", [\n    llmInfoSchema,\n    embeddingModelInfoSchema,\n]);\nconst modelInstanceInfoSchema = z.discriminatedUnion(\"type\", [\n    llmInstanceInfoSchema,\n    embeddingModelInstanceInfoSchema,\n]);\n\nconst pluginConfigSpecifierSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"direct\"),\n        config: kvConfigSchema,\n        workingDirectoryPath: z.string().optional(),\n    }),\n    z.object({\n        type: z.literal(\"predictionProcess\"),\n        pci: z.string(),\n        token: z.string(),\n    }),\n]);\n\nconst remotePluginInfoSchema = z.object({\n    identifier: z.string(),\n    isDev: z.boolean(),\n    isTrusted: z.boolean(),\n    hasPromptPreprocessor: z.boolean(),\n    hasPredictionLoopHandler: z.boolean(),\n    hasToolsProvider: z.boolean(),\n    hasGenerator: z.boolean(),\n});\n\nconst artifactDownloadPlanModelInfoSchema = z.object({\n    displayName: z.string(),\n    sizeBytes: z.number(),\n    quantName: z.string().optional(),\n    compatibilityType: modelCompatibilityTypeSchema,\n});\nconst artifactDownloadPlanNodeStateSchema = z.enum([\"pending\", \"fetching\", \"satisfied\", \"completed\"]);\nconst artifactDownloadPlanNodeSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"artifact\"),\n        owner: kebabCaseSchema,\n        name: kebabCaseWithDotsSchema,\n        state: artifactDownloadPlanNodeStateSchema,\n        artifactType: artifactTypeSchema.optional(),\n        sizeBytes: z.number().int().optional(),\n        dependencyNodes: z.array(z.number().int()),\n    }),\n    z.object({\n        type: z.literal(\"model\"),\n        state: artifactDownloadPlanNodeStateSchema,\n        resolvedSources: z.number().int().optional(),\n        totalSources: z.number().int().optional(),\n        alreadyOwned: artifactDownloadPlanModelInfoSchema.optional(),\n        selected: artifactDownloadPlanModelInfoSchema.optional(),\n    }),\n]);\nconst artifactDownloadPlanSchema = z.object({\n    nodes: z.array(artifactDownloadPlanNodeSchema),\n    downloadSizeBytes: z.number().int(),\n});\n\nconst localArtifactFileEntrySchema = z.object({\n    relativePath: z.string(),\n    sizeBytes: z.number().int(),\n});\nconst localArtifactFileListSchema = z.object({\n    files: z.array(localArtifactFileEntrySchema),\n    usedIgnoreFile: z.string().nullable(),\n});\n\nconst downloadProgressUpdateSchema = z.object({\n    downloadedBytes: z.number().int(),\n    totalBytes: z.number().int(),\n    speedBytesPerSecond: z.number(),\n});\n\nconst modelSearchResultDownloadOptionFitEstimationSchema = z.enum([\n    \"fullGPUOffload\",\n    \"partialGPUOffload\",\n    \"fitWithoutGPU\",\n    \"willNotFit\",\n]);\nconst modelSearchResultDownloadOptionDataSchema = z.object({\n    quantization: z.string().optional(),\n    name: z.string(),\n    sizeBytes: z.number().int(),\n    fitEstimation: modelSearchResultDownloadOptionFitEstimationSchema,\n    recommended: z.boolean().optional(),\n    downloadIdentifier: z.string(),\n    indexedModelIdentifier: z.string(),\n});\nconst modelSearchResultIdentifierSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"catalog\"),\n        identifier: z.string(),\n    }),\n    z.object({\n        type: z.literal(\"hf\"),\n        identifier: z.string(),\n    }),\n]);\nconst modelSearchResultEntryDataSchema = z.object({\n    name: z.string(),\n    identifier: modelSearchResultIdentifierSchema,\n    exact: z.boolean().optional(),\n    staffPick: z.boolean().optional(),\n});\nconst modelSearchOptsSchema = z.object({\n    searchTerm: z.string().optional(),\n    limit: z.number().int().positive().max(25).optional(),\n    compatibilityTypes: z.array(modelCompatibilityTypeSchema).optional(),\n});\n\nconst internalRetrievalResultEntrySchema = z.object({\n    content: z.string(),\n    score: z.number(),\n    sourceIndex: z.number().int(),\n    pageNumber: z.union([z.number().int(), z.tuple([z.number().int(), z.number().int()])]).optional(),\n    lineNumber: z.union([z.number().int(), z.tuple([z.number().int(), z.number().int()])]).optional(),\n});\nconst internalRetrievalResultSchema = z.object({\n    entries: z.array(internalRetrievalResultEntrySchema),\n});\n\nz.object({\n    content: z.string(),\n    score: z.number(),\n    citation: citationSourceSchema,\n});\n\nconst retrievalChunkingMethodSchema = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"recursive-v1\"),\n        chunkSize: z.number().int(),\n        chunkOverlap: z.number().int(),\n    }),\n]);\n\nconst retrievalFileProcessingStepSchema = z.enum([\"loading\", \"chunking\", \"embedding\"]);\n\nconst acceleratorTypeSchema = z.enum([\"unknown\", \"integratedGpu\", \"dedicatedGpu\"]);\nconst acceleratorSchema = z.object({\n    name: z.string(),\n    deviceId: z.number().int(),\n    totalMemoryBytes: z.number().int(),\n    type: acceleratorTypeSchema,\n});\nz.object({\n    key: z.string(),\n    name: z.string(),\n    accelerators: z.array(acceleratorSchema),\n});\n\nconst serializedKVConfigSchematicsFieldSchema = z.object({\n    shortKey: z.string(),\n    fullKey: z.string(),\n    typeKey: z.string(),\n    typeParams: jsonSerializableSchema,\n    defaultValue: jsonSerializableSchema,\n});\nconst serializedKVConfigSchematicsSchema = z.object({\n    fields: z.array(serializedKVConfigSchematicsFieldSchema),\n    extensionPrefixes: z.array(z.string()).optional(),\n});\nz.object({\n    fullKey: z.string(),\n    error: jsonSerializableSchema,\n});\n\nconst booleanOrMixedSchema = z.union([\n    z.literal(true),\n    z.literal(false),\n    z.literal(\"mixed\"),\n]);\nconst virtualModelDefinitionMetadataOverridesSchema = z.object({\n    domain: modelDomainTypeSchema.optional(),\n    architectures: z.array(z.string()).optional(),\n    compatibilityTypes: z.array(modelCompatibilityTypeSchema).optional(),\n    paramsStrings: z.array(z.string()).optional(),\n    minMemoryUsageBytes: z.number().optional(),\n    contextLengths: z.array(z.number()).optional(),\n    trainedForToolUse: booleanOrMixedSchema.optional(),\n    vision: booleanOrMixedSchema.optional(),\n    reasoning: booleanOrMixedSchema.optional(),\n    fim: booleanOrMixedSchema.optional(),\n});\nconst virtualModelDefinitionConcreteModelBaseSchema = z.object({\n    key: z.string(),\n    sources: z.array(modelDownloadSourceSchema),\n});\nconst virtualModelCustomFieldSetJinjaVariableEffectSchema = z.object({\n    type: z.literal(\"setJinjaVariable\"),\n    variable: z.string(),\n});\nconst virtualModelCustomFieldPrependSystemPromptEffectSchema = z.object({\n    type: z.literal(\"prependSystemPrompt\"),\n    content: z.string(),\n});\nconst virtualModelCustomFieldAppendSystemPromptEffectSchema = z.object({\n    type: z.literal(\"appendSystemPrompt\"),\n    content: z.string(),\n});\nconst virtualModelCustomFieldDefinitionBaseSchema = z.object({\n    key: z.string(),\n    displayName: z.string(),\n    description: z.string(),\n});\nconst virtualModelBooleanCustomFieldDefinitionSchema = virtualModelCustomFieldDefinitionBaseSchema.extend({\n    type: z.literal(\"boolean\"),\n    defaultValue: z.boolean(),\n    effects: z.array(z.discriminatedUnion(\"type\", [\n        virtualModelCustomFieldSetJinjaVariableEffectSchema,\n        virtualModelCustomFieldPrependSystemPromptEffectSchema,\n        virtualModelCustomFieldAppendSystemPromptEffectSchema,\n    ])),\n});\nconst virtualModelStringCustomFieldDefinitionSchema = virtualModelCustomFieldDefinitionBaseSchema.extend({\n    type: z.literal(\"string\"),\n    defaultValue: z.string(),\n    effects: z.array(z.discriminatedUnion(\"type\", [virtualModelCustomFieldSetJinjaVariableEffectSchema])),\n});\nconst virtualModelSelectCustomFieldDefinitionSchema = virtualModelCustomFieldDefinitionBaseSchema.extend({\n    type: z.literal(\"select\"),\n    options: z.array(z.object({\n        label: z.string(),\n        value: z.string(),\n    })),\n    defaultValue: z.string(),\n    effects: z.array(z.discriminatedUnion(\"type\", [virtualModelCustomFieldSetJinjaVariableEffectSchema])),\n});\nconst virtualModelCustomFieldDefinitionSchema = z.discriminatedUnion(\"type\", [\n    virtualModelBooleanCustomFieldDefinitionSchema,\n    virtualModelStringCustomFieldDefinitionSchema,\n    virtualModelSelectCustomFieldDefinitionSchema,\n]);\nconst virtualModelConditionEqualsSchema = z.object({\n    type: z.literal(\"equals\"),\n    key: z.string(),\n    value: jsonSerializableSchema,\n});\nconst virtualModelConditionSchema = z.discriminatedUnion(\"type\", [\n    virtualModelConditionEqualsSchema,\n]);\nconst virtualModelSuggestionSchema = z.object({\n    message: z.string(),\n    conditions: z.array(virtualModelConditionSchema),\n    fields: z.array(kvConfigFieldSchema).optional(),\n});\nz.object({\n    model: z.string().regex(/^[^/]+\\/[^/]+$/),\n    base: z.union([z.string(), z.array(virtualModelDefinitionConcreteModelBaseSchema)]),\n    tags: z.array(z.string().max(100)).optional(),\n    config: z\n        .object({\n        load: kvConfigSchema.optional(),\n        operation: kvConfigSchema.optional(),\n    })\n        .optional(),\n    metadataOverrides: virtualModelDefinitionMetadataOverridesSchema.optional(),\n    customFields: z.array(virtualModelCustomFieldDefinitionSchema).optional(),\n    suggestions: z.array(virtualModelSuggestionSchema).optional(),\n});\n\nconst logLevelSchema = z.enum([\"debug\", \"info\", \"warn\", \"error\"]);\n\n/**\n * Call a user provided callback and log any errors that occur. This prevents the error from\n * crashing the application.\n */\nfunction safeCallCallback(logger, name, callback, args) {\n    if (callback === undefined) {\n        return;\n    }\n    try {\n        const maybePromise = callback(...args);\n        if (typeof maybePromise === \"object\" && typeof maybePromise.catch === \"function\") {\n            maybePromise.catch((error) => {\n                logger.error(`Error in the ${name} callback (triggered asynchronously):`, error);\n            });\n        }\n    }\n    catch (error) {\n        logger.error(`Error in the ${name} callback:`, error);\n    }\n}\n\nfunction isSimpleLogger(logger) {\n    return logger?.isSimpleLogger === true;\n}\nconst defaultInfoPrefix = chalk.greenBright(\"I\");\nconst defaultWarnPrefix = chalk.yellowBright(\"W\");\nconst defaultErrorPrefix = chalk.redBright(\"E\");\nconst defaultDebugPrefix = chalk.blueBright(\"D\");\nclass SimpleLogger {\n    constructor(prefixText = \"\", parentLogger = console, { useLogLevelPrefixes, infoPrefix, warnPrefix, errorPrefix, debugPrefix, } = {}) {\n        this.isSimpleLogger = true;\n        this.infoPrefix = [];\n        this.warnPrefix = [];\n        this.errorPrefix = [];\n        this.debugPrefix = [];\n        if (isSimpleLogger(parentLogger)) {\n            useLogLevelPrefixes = useLogLevelPrefixes ?? parentLogger.opts.useLogLevelPrefixes;\n            infoPrefix = infoPrefix === undefined ? parentLogger.opts.infoPrefix : infoPrefix;\n            warnPrefix = warnPrefix === undefined ? parentLogger.opts.warnPrefix : warnPrefix;\n            errorPrefix = errorPrefix === undefined ? parentLogger.opts.errorPrefix : errorPrefix;\n            debugPrefix = debugPrefix === undefined ? parentLogger.opts.debugPrefix : debugPrefix;\n            if (prefixText === \"\") {\n                this.innerPrefix = parentLogger.innerPrefix;\n                this.fullPrefix = parentLogger.fullPrefix;\n            }\n            else {\n                if (parentLogger.fullPrefix === \"\") {\n                    this.innerPrefix = prefixText;\n                }\n                else {\n                    this.innerPrefix = `${parentLogger.innerPrefix}][${prefixText}`;\n                }\n                this.fullPrefix = chalk.whiteBright(`[${this.innerPrefix}]`);\n            }\n            this.parentLogger = parentLogger.parentLogger;\n        }\n        else {\n            useLogLevelPrefixes = useLogLevelPrefixes ?? false;\n            infoPrefix = infoPrefix === undefined ? defaultInfoPrefix : infoPrefix;\n            warnPrefix = warnPrefix === undefined ? defaultWarnPrefix : warnPrefix;\n            errorPrefix = errorPrefix === undefined ? defaultErrorPrefix : errorPrefix;\n            debugPrefix = debugPrefix === undefined ? defaultDebugPrefix : debugPrefix;\n            if (prefixText === \"\") {\n                this.innerPrefix = \"\";\n                this.fullPrefix = \"\";\n            }\n            else {\n                this.innerPrefix = prefixText;\n                this.fullPrefix = chalk.whiteBright(`[${this.innerPrefix}]`);\n            }\n            this.parentLogger = parentLogger;\n        }\n        if (useLogLevelPrefixes) {\n            if (infoPrefix !== null) {\n                this.infoPrefix.push(infoPrefix);\n            }\n            if (warnPrefix !== null) {\n                this.warnPrefix.push(warnPrefix);\n            }\n            if (errorPrefix !== null) {\n                this.errorPrefix.push(errorPrefix);\n            }\n            if (debugPrefix !== null) {\n                this.debugPrefix.push(debugPrefix);\n            }\n        }\n        if (this.fullPrefix !== \"\") {\n            this.infoPrefix.push(this.fullPrefix);\n            this.warnPrefix.push(this.fullPrefix);\n            this.errorPrefix.push(this.fullPrefix);\n            this.debugPrefix.push(this.fullPrefix);\n        }\n        this.opts = {\n            useLogLevelPrefixes,\n            infoPrefix,\n            warnPrefix,\n            errorPrefix,\n            debugPrefix,\n        };\n    }\n    subclass(prefixText) {\n        return new SimpleLogger(`${this.innerPrefix}:${prefixText}`, this.parentLogger);\n    }\n    info(...messages) {\n        this.parentLogger.info(...this.infoPrefix, ...messages);\n    }\n    infoText(strings, ...values) {\n        this.info(text(strings, ...values));\n    }\n    infoWithoutPrefix(...messages) {\n        this.parentLogger.info(...messages);\n    }\n    error(...messages) {\n        this.parentLogger.error(...this.errorPrefix, ...messages);\n    }\n    errorText(strings, ...values) {\n        this.error(text(strings, ...values));\n    }\n    errorWithoutPrefix(...messages) {\n        this.parentLogger.error(...messages);\n    }\n    warn(...messages) {\n        this.parentLogger.warn(...this.warnPrefix, ...messages);\n    }\n    warnText(strings, ...values) {\n        this.warn(text(strings, ...values));\n    }\n    warnWithoutPrefix(...messages) {\n        this.parentLogger.warn(...messages);\n    }\n    debug(...messages) {\n        this.parentLogger.debug(...this.debugPrefix, ...messages);\n    }\n    debugText(strings, ...values) {\n        this.debug(text(strings, ...values));\n    }\n    debugWithoutPrefix(...messages) {\n        this.parentLogger.debug(...messages);\n    }\n    throw(message) {\n        throw new Error(`${this.fullPrefix} ${message}`);\n    }\n    logAtLevel(level, ...messages) {\n        switch (level) {\n            case \"debug\":\n                this.debug(...messages);\n                break;\n            case \"info\":\n                this.info(...messages);\n                break;\n            case \"warn\":\n                this.warn(...messages);\n                break;\n            case \"error\":\n                this.error(...messages);\n                break;\n        }\n    }\n    static fromMultiple(loggers, opts) {\n        return new SimpleLogger(\"\", {\n            debug: (...messages) => {\n                for (const logger of loggers) {\n                    logger.debug(...messages);\n                }\n            },\n            info: (...messages) => {\n                for (const logger of loggers) {\n                    logger.info(...messages);\n                }\n            },\n            warn: (...messages) => {\n                for (const logger of loggers) {\n                    logger.warn(...messages);\n                }\n            },\n            error: (...messages) => {\n                for (const logger of loggers) {\n                    logger.error(...messages);\n                }\n            },\n        }, {\n            ...opts,\n            useLogLevelPrefixes: false,\n        });\n    }\n}\n\nvar _a;\nconst finished = Symbol(\"finished\");\n/**\n * A StreamablePromise is a promise-like that is also async iterable. This means you can use it as a\n * promise (awaiting it, using `.then`, `.catch`, etc.), and you can also use it as an async\n * iterable (using `for await`).\n *\n * Notably, as much as it implements the async iterable interface, it is not a traditional iterable,\n * as it internally maintains a buffer and new values are pushed into the buffer by the producer, as\n * oppose to being pulled by the consumer.\n *\n * The async iterable interface is used instead of the Node.js object stream because streams are too\n * clunky to use, and the `for await` syntax is much more ergonomic for most people.\n *\n * If any iterator is created for this instance, an empty rejection handler will be attached to the\n * promise to prevent unhandled rejection warnings.\n *\n * This class is provided as an abstract class and is meant to be extended. Crucially, the `collect`\n * method must be implemented, which will be called to convert an array of values into the final\n * resolved value of the promise.\n *\n * In addition, the constructor of the subclass should be marked as private, and a static method\n * that exposes the constructor, the `finished` method, and the `push` method should be provided.\n *\n * @typeParam TFragment - The type of the individual fragments that are pushed into the buffer.\n * @typeParam TFinal - The type of the final resolved value of the promise.\n * @public\n */\nclass StreamablePromise {\n    /**\n     * Called by the producer when it has finished producing values. If an error is provided, the\n     * promise will be rejected with that error. If no error is provided, the promise will be resolved\n     * with the final value.\n     *\n     * This method should be exposed in the static constructor of the subclass.\n     *\n     * @param error - The error to reject the promise with, if any.\n     */\n    finished(error) {\n        if (this.status !== \"pending\") {\n            throw new Error(\"`finished` called while not pending\");\n        }\n        if (error === undefined) {\n            this.status = \"resolved\";\n            this.nextFragmentPromiseBundle?.resolve(finished);\n            this.resolveFinal(this.collect(this.buffer));\n        }\n        else {\n            this.status = \"rejected\";\n            this.nextFragmentPromiseBundle?.reject(error);\n            this.rejectFinal(error);\n        }\n    }\n    /**\n     * Called by the producer to push a new fragment into the buffer. This method should be exposed in\n     * the static constructor of the subclass.\n     *\n     * This method should be exposed in the static constructor of the subclass.\n     *\n     * @param fragment - The fragment to push into the buffer.\n     */\n    push(fragment) {\n        if (this.status !== \"pending\") {\n            throw new Error(\"`push` called while not pending\");\n        }\n        this.buffer.push(fragment);\n        this.nextFragmentPromiseBundle?.resolve(fragment);\n        this.nextFragmentPromiseBundle = null;\n    }\n    constructor() {\n        this.status = \"pending\";\n        this.buffer = [];\n        this.nextFragmentPromiseBundle = null;\n        /**\n         * If there has ever been any iterators created for this instance. Once any iterator is created,\n         * a reject handler will be attached to the promise to prevent unhandled rejection warnings, as\n         * the errors will be handled by the iterator.\n         *\n         * The purpose of this variable is to prevent registering the reject handler more than once.\n         */\n        this.hasIterator = false;\n        this[_a] = \"StreamablePromise\";\n        const { promise, resolve, reject } = makePromise();\n        this.promiseFinal = promise;\n        this.resolveFinal = resolve;\n        this.rejectFinal = reject;\n    }\n    then(onfulfilled, onrejected) {\n        return this.promiseFinal.then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.promiseFinal.catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.promiseFinal.finally(onfinally);\n    }\n    /**\n     * If nextFragmentPromiseBundle exists, it is returned. Otherwise, a new one is created and\n     * returned.\n     */\n    obtainNextFragmentPromiseBundle() {\n        if (this.nextFragmentPromiseBundle === null) {\n            this.nextFragmentPromiseBundle = makePromise();\n        }\n        return this.nextFragmentPromiseBundle;\n    }\n    async *[(_a = Symbol.toStringTag, Symbol.asyncIterator)]() {\n        if (!this.hasIterator) {\n            this.promiseFinal.catch(() => { }); // Prevent unhandled rejection warning\n            this.hasIterator = true;\n        }\n        let i = 0;\n        while (i < this.buffer.length || this.status === \"pending\") {\n            if (i < this.buffer.length) {\n                yield this.buffer[i];\n                i++;\n            }\n            else {\n                const nextFragmentPromiseBundle = this.obtainNextFragmentPromiseBundle();\n                const nextFragment = await nextFragmentPromiseBundle.promise;\n                if (nextFragment === finished) {\n                    // Make sure the promise is resolved before breaking the loop.\n                    break;\n                }\n                yield nextFragment;\n                i++;\n            }\n        }\n        await this.promiseFinal;\n        // Wait for one more microtask to ensure that the promise is resolved before terminating the\n        // loop. This ensures that the by the time async loop is terminated, the onMessage handler is\n        // already triggered.\n        await Promise.resolve();\n    }\n}\n\nclass Validator {\n    constructor({ attachStack } = {}) {\n        this.attachStack = attachStack ?? true;\n    }\n    /**\n     * Pretty-prints a Zod error.\n     *\n     * @param rootObjectName - The name of the object being validated (used for error messages)\n     * @param error - The Zod error to pretty-print\n     *\n     * @returns The pretty-printed error in a string\n     */\n    static prettyPrintZod(rootObjectName, error) {\n        return error.errors\n            .map(e => {\n            if (e.path.length === 0) {\n                return `- ${chalk.redBright(rootObjectName)}: ${e.message}`;\n            }\n            const path = chalk.red(`.${e.path.join(\".\")}`);\n            return `- ${chalk.redBright(rootObjectName)}${path}: ${e.message}`;\n        })\n            .join(\"\\n\");\n    }\n    /**\n     * Validates a value against a schema and throws an error if it's invalid.\n     *\n     * @param lead - The start of the error message (used for error messages)\n     * @param rootObjectName - The name of the object being validated (used for error messages)\n     * @param schema - The schema to validate against\n     * @param value - The value to validate\n     *\n     * @returns The validated value\n     * @throws An error if the value is invalid\n     */\n    validateOrThrow(lead, rootObjectName, schema, value, stack) {\n        const result = schema.safeParse(value);\n        if (result.success) {\n            return result.data;\n        }\n        else {\n            throw makePrettyError(`${lead}\\n\\n${Validator.prettyPrintZod(rootObjectName, result.error)}`, this.attachStack ? stack : undefined);\n        }\n    }\n    /**\n     * Validates multiple values against multiple schemas and throws an error if any of them are\n     * invalid. All values are validated before any errors are thrown. This is useful when you want to\n     * validate multiple values at once and want to see all the errors at once.\n     *\n     * @param leadProducer - The function to produce the start of the error message (used for error).\n     * It is called with a set of indices of the invalid values.\n     * @param rootObjectNames - The names of the objects being validated (used for error messages)\n     * @param schemas - The schemas to validate against\n     * @param values - The values to validate\n     *\n     * @returns The validated values\n     * @throws An error if any of the values are invalid\n     */\n    validateMultipleOrThrow(leadProducer, rootObjectNames, schemas, values, stack) {\n        const results = schemas.map((schema, index) => schema.safeParse(values[index]));\n        const errors = results\n            .map((result, index) => ({ result, index, rootObjectName: rootObjectNames[index] }))\n            .filter(({ result }) => !result.success)\n            .map(({ result, rootObjectName, index }) => ({\n            error: result.error,\n            rootObjectName,\n            index,\n        }));\n        if (errors.length === 0) {\n            return results.map(result => result.data);\n        }\n        else {\n            const erroredValues = new Set(errors.map(({ index }) => index));\n            const lead = leadProducer(erroredValues);\n            throw makePrettyError(`${lead}\\n\\n${errors\n                .map(({ error, rootObjectName }) => Validator.prettyPrintZod(rootObjectName, error))\n                .join(\"\\n\")}`, this.attachStack ? stack : undefined);\n        }\n    }\n    /**\n     * Validates a value against a schema and throws an error if it's invalid. This is a convenience\n     * function for validating one single method parameter.\n     *\n     * @param className - The name of the class containing the method (used for error messages)\n     * @param methodName - The name of the method (used for error messages)\n     * @param paramName - The name of the parameter being validated (used for error messages)\n     * @param schema - The schema to validate against\n     * @param value - The value to validate\n     *\n     * @returns The validated value\n     * @throws An error if the value is invalid\n     */\n    validateMethodParamOrThrow(className, methodName, paramName, schema, value, stack) {\n        const functionCall = chalk.yellowBright(text `\r\n    ${className}.${methodName}(${chalk.redBright(paramName)})\r\n  `);\n        return this.validateOrThrow(`Invalid parameter(s) for ${functionCall}:`, paramName, schema, value, stack);\n    }\n    /**\n     * Validates multiple values against multiple schemas and throws an error if any of them are\n     * invalid. This is a convenience function for validating multiple method parameters.\n     *\n     * @param className - The name of the class containing the method (used for error messages)\n     * @param methodName - The name of the method (used for error messages)\n     * @param paramNames - The names of the parameters being validated (used for error messages)\n     * @param schemas - The schemas to validate against\n     * @param values - The values to validate\n     *\n     * @returns The validated values\n     * @throws An error if any of the values are invalid\n     */\n    validateMethodParamsOrThrow(className, methodName, paramNames, schemas, values, stack) {\n        return this.validateMultipleOrThrow(erroredValues => {\n            const coloredParamNames = paramNames.map((name, index) => erroredValues.has(index) ? chalk.redBright(name) : name);\n            const functionCall = chalk.yellowBright(text `\r\n        ${className}.${methodName}(${coloredParamNames.join(\", \")})\r\n      `);\n            return `Invalid parameter(s) for ${functionCall}:`;\n        }, paramNames, schemas, values, stack);\n    }\n    /**\n     * Validates a value against a schema and throws an error if it's invalid. This is a convenience\n     * function for validating one single constructor parameter.\n     *\n     * @param className - The name of the class (used for error messages)\n     * @param paramName - The name of the parameter being validated (used for error messages)\n     * @param schema - The schema to validate against\n     * @param value - The value to validate\n     *\n     * @returns The validated value\n     * @throws An error if the value is invalid\n     */\n    validateConstructorParamOrThrow(className, paramName, schema, value, stack) {\n        const functionCall = chalk.yellowBright(text `\r\n    ${className}(${chalk.redBright(paramName)})\r\n  `);\n        return this.validateOrThrow(`Invalid parameter(s) when constructing ${functionCall}`, paramName, schema, value, stack);\n    }\n    /**\n     * Validates multiple values against multiple schemas and throws an error if any of them are\n     * invalid. This is a convenience function for validating multiple constructor parameters.\n     *\n     * @param className - The name of the class (used for error messages)\n     * @param paramNames - The names of the parameters being validated (used for error messages)\n     *\n     * @param schemas - The schemas to validate against\n     * @param values - The values to validate\n     */\n    validateConstructorParamsOrThrow(className, paramNames, schemas, values, stack) {\n        return this.validateMultipleOrThrow(erroredValues => {\n            const coloredParamNames = paramNames.map((name, index) => erroredValues.has(index) ? chalk.redBright(name) : name);\n            const functionCall = chalk.yellowBright(text `\r\n        ${className}(${coloredParamNames.join(\", \")})\r\n      `);\n            return `Invalid parameter(s) when constructing ${functionCall}:`;\n        }, paramNames, schemas, values, stack);\n    }\n}\nconst sharedValidator = new Validator();\n\n/**\n * Represents a file. Currently, the file can be either in the local file system or base64 encoded.\n *\n * @public\n */\nclass FileHandle {\n    /**\n     * @deprecated Direct construction is not recommended. Please use the `prepareFile` API instead\n     */\n    constructor(filesNamespace, identifier, type, sizeBytes, \n    /**\n     * Original file name\n     */\n    name) {\n        this.filesNamespace = filesNamespace;\n        this.identifier = identifier;\n        this.type = type;\n        this.sizeBytes = sizeBytes;\n        this.name = name;\n        this.parsedIdentifier = parseFileIdentifier(identifier);\n    }\n    /**\n     * Gets the absolute file path of this file.\n     */\n    async getFilePath() {\n        switch (this.parsedIdentifier.type) {\n            case \"local\": {\n                return (await this.filesNamespace.getLocalFileAbsolutePath(this.parsedIdentifier.fileName))\n                    .path;\n            }\n            case \"base64\": {\n                throw new Error(\"Not implemented. Please open an issue on GitHub if you encountered this error.\");\n            }\n            default: {\n                const _exhaustiveCheck = this.parsedIdentifier;\n                throw new Error(`Unexpected file identifier type: ${JSON.stringify(_exhaustiveCheck)}`);\n            }\n        }\n    }\n    isImage() {\n        return this.type === \"image\";\n    }\n}\n\nconst chatMessageInputSchema = z.object({\n    role: z.enum([\"user\", \"assistant\", \"system\"]).optional(),\n    content: z.string().optional(),\n    images: z.array(z.instanceof(FileHandle)).optional(),\n});\nconst chatHistoryInputSchema = z.array(chatMessageInputSchema);\n/**\n * Given a `ChatMessageInput` or `ChatMessageData`, returns true if the input is a\n * `ChatMessageInput`.\n */\nfunction isChatMessageInputAsOpposeToChatMessageData(chatMessageInput) {\n    return !Array.isArray(chatMessageInput.content);\n}\nfunction isChatMessageInputAsOpposeToChatHistoryData(chatMessageInput) {\n    return !(\"messages\" in chatMessageInput);\n}\nfunction chatMessageInputToChatMessageData(chatMessageInput) {\n    const { role, content, images } = chatMessageInput;\n    const parts = [];\n    if (images === undefined || images.length === 0) {\n        if (content === undefined) {\n            // If both content and file are undefined, let's just create an empty part.\n            parts.push({\n                type: \"text\",\n                text: \"\",\n            });\n        }\n    }\n    else {\n        for (const file of images) {\n            parts.push({\n                type: \"file\",\n                identifier: file.identifier,\n                name: file.name,\n                fileType: file.type,\n                sizeBytes: file.sizeBytes,\n            });\n        }\n    }\n    if (content !== undefined) {\n        parts.push({\n            type: \"text\",\n            text: content,\n        });\n    }\n    return {\n        role: role ?? \"user\",\n        content: parts,\n    };\n}\n\n/**\n * Represents a chat history.\n *\n * @public\n */\nclass Chat extends MaybeMutable {\n    getClassName() {\n        return \"Chat\";\n    }\n    create(data, mutable) {\n        return new Chat(data, mutable);\n    }\n    cloneData(data) {\n        return chatHistoryDataSchema.parse(data); // Using zod to clone the data\n    }\n    /**\n     * Don't use this constructor directly.\n     *\n     * - To create an empty chat history, use `Chat.empty()`.\n     * - To create a chat history with existing data, use `Chat.from()`.\n     */\n    constructor(data, mutable) {\n        super(data, mutable);\n    }\n    /**\n     * Creates an empty mutable chat history.\n     */\n    static empty() {\n        return new Chat({ messages: [] }, true);\n    }\n    /**\n     * Quickly create a mutable chat history with something that can be converted to a chat history.\n     *\n     * The created chat history will be a mutable copy of the input.\n     *\n     * @example\n     * ```ts\n     * const history = Chat.from([\n     *   { role: \"user\", content: \"Hello\" },\n     *   { role: \"assistant\", content: \"Hi!\" },\n     *   { role: \"user\", content: \"What is your name?\" },\n     * ]);\n     * ```\n     */\n    static from(initializer) {\n        const stack = getCurrentStack(1);\n        sharedValidator.validateMethodParamOrThrow(\"Chat\", \"from\", \"initializer\", chatHistoryLikeSchema, initializer, stack);\n        if (initializer instanceof Chat) {\n            // Chat\n            return initializer.asMutableCopy();\n        }\n        if (typeof initializer === \"string\") {\n            const chatHistory = Chat.empty();\n            chatHistory.append(\"user\", initializer);\n            return chatHistory;\n        }\n        if (Array.isArray(initializer)) {\n            // ChatInput\n            return new Chat({ messages: initializer.map(chatMessageInputToChatMessageData) }, true);\n        }\n        if (isChatMessageInputAsOpposeToChatHistoryData(initializer)) {\n            // ChatMessageInput\n            return new Chat({ messages: [chatMessageInputToChatMessageData(initializer)] }, true);\n        }\n        else {\n            // ChatHistoryData\n            return new Chat(initializer, false).asMutableCopy();\n        }\n    }\n    /**\n     * Creates a chat history with raw data. This method is intended for internal use only.\n     *\n     * If mutable is set to false, you MUST ensure that the data is not mutated.\n     *\n     * @internal\n     */\n    static createRaw(data, mutable) {\n        return new Chat(data, mutable);\n    }\n    /**\n     * Gets the raw data of this message. This method is intended for internal use only.\n     *\n     * If mutable is set to false, you MUST ensure that the data is not mutated.\n     *\n     * @internal\n     */\n    getRaw() {\n        return this.data;\n    }\n    append(...args) {\n        this.guardMutable();\n        if (args.length === 1) {\n            const [chatMessageLike] = args;\n            const chatMessage = ChatMessage.from(chatMessageLike);\n            const messageMutable = accessMaybeMutableInternals(chatMessage)._internalToMutable();\n            this.data.messages.push(accessMaybeMutableInternals(messageMutable)._internalGetData());\n        }\n        else {\n            const [role, content, opts = {}] = args;\n            if (role === \"user\" || role === \"system\" || role === \"assistant\") {\n                const parts = [\n                    { type: \"text\", text: content },\n                ];\n                if (opts.images !== undefined) {\n                    for (const image of opts.images) {\n                        parts.push({\n                            type: \"file\",\n                            name: image.name,\n                            identifier: image.identifier,\n                            sizeBytes: image.sizeBytes,\n                            fileType: image.type,\n                        });\n                    }\n                }\n                this.data.messages.push({ role, content: parts });\n            }\n            else {\n                throw new Error(text `\r\n          Unsupported role for append() API with [role, content] parameters: ${role}.\r\n          Supported roles are 'user', 'system', and 'assistant'.\r\n        `);\n            }\n        }\n    }\n    withAppended(...args) {\n        const copy = this.asMutableCopy();\n        copy.append(...args);\n        return copy;\n    }\n    /**\n     * Get the number of messages in the history.\n     */\n    getLength() {\n        return this.data.messages.length;\n    }\n    /**\n     * Get the number of messages in the history.\n     */\n    get length() {\n        return this.getLength();\n    }\n    /**\n     * Remove the last message from the history. If the history is empty, this method will throw.\n     */\n    pop() {\n        this.guardMutable();\n        if (this.data.messages.length === 0) {\n            throw new Error(\"Tried to pop from an empty history.\");\n        }\n        const popped = this.data.messages.pop();\n        return ChatMessage.createRaw(popped, true);\n    }\n    /**\n     * Gets all files contained in this history.\n     *\n     * @param client - LMStudio client\n     */\n    getAllFiles(client) {\n        return this.data.messages\n            .flatMap(message => message.content.filter(part => part.type === \"file\"))\n            .map(part => new FileHandle(client.files, part.identifier, part.fileType, part.sizeBytes, part.name));\n    }\n    /**\n     * Allows iterating over the files in the history.\n     */\n    *files(client) {\n        for (const message of this.data.messages) {\n            for (const part of message.content) {\n                if (part.type === \"file\") {\n                    yield new FileHandle(client.files, part.identifier, part.fileType, part.sizeBytes, part.name);\n                }\n            }\n        }\n    }\n    /**\n     * Returns true if this history contains any files.\n     */\n    hasFiles() {\n        return this.data.messages.some(message => message.content.some(part => part.type === \"file\"));\n    }\n    /**\n     * Gets the message at the given index. If the index is negative, it will be counted from the end.\n     *\n     * If the index is out of bounds, this method will throw as oppose to returning undefined. This is\n     * to help catch bugs early.\n     */\n    at(index) {\n        let actualIndex = index;\n        if (index < 0) {\n            actualIndex = this.data.messages.length + index;\n        }\n        if (actualIndex < 0 || actualIndex >= this.data.messages.length) {\n            throw new Error(text `\r\n        Tried to access the message at index ${index}, but the history only has\r\n        ${this.data.messages.length} messages.\r\n      `);\n        }\n        return ChatMessage.createRaw(this.data.messages[actualIndex], this.mutable);\n    }\n    /**\n     * Get all the messages in the history as an array of ChatMessage objects.\n     */\n    getMessagesArray() {\n        return this.data.messages.map(message => ChatMessage.createRaw(message, this.mutable));\n    }\n    /**\n     * Maps over the messages in the history and returns an array of the results.\n     */\n    map(mapper) {\n        return this.getMessagesArray().map(mapper);\n    }\n    /**\n     * Maps over the messages in the history and returns a flattened array of the results.\n     *\n     * This is similar to `Array.prototype.flatMap`, but it works with ChatMessage objects.\n     */\n    flatMap(mapper) {\n        return this.getMessagesArray().flatMap(mapper);\n    }\n    /**\n     * Allows iterating over the messages in the history.\n     */\n    *[Symbol.iterator]() {\n        for (const message of this.data.messages) {\n            yield ChatMessage.createRaw(message, this.mutable);\n        }\n    }\n    /**\n     * Given a predicate, the predicate is called for each file in the history.\n     *\n     * - If the predicate returns true, the file is removed from the history and is collected into the\n     *   returned array.\n     * - If the predicate returns false, the file is kept in the history.\n     *\n     * This method is useful if you are implementing a promptPreprocessor that needs to convert certain\n     * types of files.\n     *\n     * If the predicate needs to be async, use the {@link Chat#consumeFilesAsync} method.\n     *\n     * @param client - LMStudio client\n     * @param predicate - The predicate to call for each file.\n     * @returns The files that were consumed.\n     */\n    consumeFiles(client, predicate) {\n        this.guardMutable();\n        const consumedFiles = [];\n        for (const message of this.data.messages) {\n            consumedFiles.push(...ChatMessage.createRaw(message, true).consumeFiles(client, predicate));\n        }\n        return consumedFiles;\n    }\n    /**\n     * Given an async predicate, the predicate is called for each file in the history.\n     *\n     * - If the predicate returns true, the file is removed from the history and is collected into the\n     *  returned array.\n     * - If the predicate returns false, the file is kept in the history.\n     *\n     * This method is useful if you are implementing a promptPreprocessor that needs to convert certain\n     * types of files.\n     *\n     * If you need a synchronous version, use the {@link Chat#consumeFiles} method.\n     *\n     * @param client - LMStudio client\n     * @param predicate - The predicate to call for each file.\n     * @returns The files that were consumed.\n     */\n    async consumeFilesAsync(client, predicate) {\n        this.guardMutable();\n        const consumedFiles = [];\n        for (const message of this.data.messages) {\n            consumedFiles.push(...(await ChatMessage.createRaw(message, true).consumeFilesAsync(client, predicate)));\n        }\n        return consumedFiles;\n    }\n    getSystemPrompt() {\n        return this.data.messages\n            .filter(message => message.role === \"system\")\n            .map(message => message.content\n            .filter(part => part.type === \"text\")\n            .map(part => part.text)\n            .join(\" \"))\n            .join(\"\\n\\n\");\n    }\n    replaceSystemPrompt(content) {\n        this.guardMutable();\n        this.data.messages = this.data.messages.filter(message => message.role !== \"system\");\n        this.data.messages.unshift({ role: \"system\", content: [{ type: \"text\", text: content }] });\n    }\n    filterInPlace(predicate) {\n        this.guardMutable();\n        this.data.messages = this.data.messages.filter(message => predicate(ChatMessage.createRaw(message, true)));\n    }\n    toString() {\n        return (\"Chat {\\n\" +\n            this.data.messages\n                .map(message => {\n                const messageString = ChatMessage.createRaw(message, false).toString();\n                return messageString\n                    .split(\"\\n\")\n                    .map(line => \"  \" + line)\n                    .join(\"\\n\");\n            })\n                .join(\"\\n\") +\n            \"\\n}\");\n    }\n}\nconst chatHistoryLikeSchema = z.union([\n    z.instanceof(Chat),\n    chatHistoryDataSchema,\n    z.string(),\n    chatHistoryInputSchema,\n    chatMessageInputSchema,\n]);\n/**\n * Represents a single message in the history.\n *\n * @public\n */\nclass ChatMessage extends MaybeMutable {\n    getClassName() {\n        return \"ChatMessage\";\n    }\n    create(data, mutable) {\n        return new ChatMessage(data, mutable);\n    }\n    cloneData(data) {\n        return chatMessageDataSchema.parse(data); // Using zod to clone the data\n    }\n    constructor(data, mutable) {\n        super(data, mutable);\n    }\n    /**\n     * Create a mutable text only message.\n     */\n    static create(role, content) {\n        return new ChatMessage(chatMessageDataSchema.parse({\n            role,\n            content: [{ type: \"text\", text: content }],\n        }), true);\n    }\n    /**\n     * Quickly create a mutable message with something that can be converted to a message.\n     */\n    static from(initializer) {\n        const stack = getCurrentStack(1);\n        sharedValidator.validateMethodParamOrThrow(\"ChatMessage\", \"from\", \"initializer\", chatMessageLikeSchema, initializer, stack);\n        if (initializer instanceof ChatMessage) {\n            // ChatMessage\n            return initializer.asMutableCopy();\n        }\n        if (typeof initializer === \"string\") {\n            return new ChatMessage(chatMessageDataSchema.parse({\n                role: \"user\",\n                content: [{ type: \"text\", text: initializer }],\n            }), true);\n        }\n        if (isChatMessageInputAsOpposeToChatMessageData(initializer)) {\n            // ChatMessageData\n            return new ChatMessage(chatMessageInputToChatMessageData(initializer), true);\n        }\n        else {\n            // ChatMessageInput\n            return new ChatMessage(initializer, true);\n        }\n    }\n    /**\n     * Creates a chat history with raw data. This method is intended for internal use only.\n     *\n     * If mutable is set to false, you MUST ensure that the data is not mutated.\n     *\n     * @internal\n     */\n    static createRaw(data, mutable) {\n        return new ChatMessage(data, mutable);\n    }\n    /**\n     * Gets the raw data of this message. This method is intended for internal use only.\n     *\n     * If mutable is set to false, you MUST ensure that the data is not mutated.\n     *\n     * @internal\n     */\n    getRaw() {\n        return this.data;\n    }\n    getRole() {\n        return this.data.role;\n    }\n    setRole(role) {\n        this.guardMutable();\n        this.data.role = role;\n    }\n    getFileParts() {\n        return this.data.content.filter(part => part.type === \"file\");\n    }\n    /**\n     * Gets all text contained in this message.\n     */\n    getText() {\n        return this.data.content\n            .filter(part => part.type === \"text\")\n            .map(part => part.text)\n            .join(\" \");\n    }\n    /**\n     * Get all tool call results within this message.\n     */\n    getToolCallResults() {\n        return this.data.content\n            .filter(part => part.type === \"toolCallResult\")\n            .map(part => ({\n            content: part.content,\n            toolCallId: part.toolCallId,\n        }));\n    }\n    /**\n     * Gets all file parts contained in this message.\n     */\n    getToolCallRequests() {\n        return this.data.content\n            .filter(part => part.type === \"toolCallRequest\")\n            .map(part => part.toolCallRequest);\n    }\n    /**\n     * Gets all files contained in this message.\n     *\n     * @param client - LMStudio client\n     */\n    getFiles(client) {\n        return this.getFileParts().map(part => new FileHandle(client.files, part.identifier, part.fileType, part.sizeBytes, part.name));\n    }\n    /**\n     * Allows iterating over the files in the message.\n     */\n    *files(client) {\n        for (const part of this.getFileParts()) {\n            yield new FileHandle(client.files, part.identifier, part.fileType, part.sizeBytes, part.name);\n        }\n    }\n    /**\n     * Given a predicate, the predicate is called for each file in the message.\n     *\n     * - If the predicate returns true, the file is removed from the message and is collected into the\n     *   returned array.\n     * - If the predicate returns false, the file is kept in the message.\n     *\n     * This method is useful if you are implementing a promptPreprocessor that needs to convert certain\n     * types of files.\n     *\n     * If the predicate needs to be async, use the {@link ChatMessage#consumeFilesAsync} method.\n     *\n     * @param client - LMStudio client\n     * @param predicate - The predicate to call for each file.\n     * @returns The files that were consumed.\n     */\n    consumeFiles(client, predicate) {\n        this.guardMutable();\n        const consumedFiles = [];\n        const partIndexesToRemove = new Set();\n        for (const [index, part] of this.data.content.entries()) {\n            if (part.type !== \"file\") {\n                continue;\n            }\n            const file = new FileHandle(client.files, part.identifier, part.fileType, part.sizeBytes, part.name);\n            if (predicate(file)) {\n                consumedFiles.push(file);\n                partIndexesToRemove.add(index);\n            }\n        }\n        this.data.content = this.data.content.filter((_, index) => !partIndexesToRemove.has(index));\n        return consumedFiles;\n    }\n    /**\n     * Given an async predicate, the predicate is called for each file in the message.\n     *\n     * - If the predicate returns true, the file is removed from the message and is collected into the\n     *  returned array.\n     * - If the predicate returns false, the file is kept in the message.\n     *\n     * This method is useful if you are implementing a promptPreprocessor that needs to convert certain\n     * types of files.\n     *\n     * If you need a synchronous version, use the {@link ChatMessage#consumeFiles} method.\n     *\n     * @param client - LMStudio client\n     * @param predicate - The predicate to call for each file.\n     * @returns The files that were consumed.\n     */\n    async consumeFilesAsync(client, predicate) {\n        this.guardMutable();\n        const consumedFiles = [];\n        const partIndexesToRemove = new Set();\n        for (const [index, part] of this.data.content.entries()) {\n            if (part.type !== \"file\") {\n                continue;\n            }\n            const file = new FileHandle(client.files, part.identifier, part.fileType, part.sizeBytes, part.name);\n            if (await predicate(file)) {\n                consumedFiles.push(file);\n                partIndexesToRemove.add(index);\n            }\n        }\n        this.data.content = this.data.content.filter((_, index) => !partIndexesToRemove.has(index));\n        return consumedFiles;\n    }\n    /**\n     * Returns true if this message contains any files.\n     */\n    hasFiles() {\n        return this.data.content.some(part => part.type === \"file\");\n    }\n    /**\n     * Append text to the message.\n     */\n    appendText(text) {\n        this.guardMutable();\n        switch (this.data.role) {\n            case \"assistant\":\n            case \"user\":\n            case \"system\":\n                this.data.content.push({\n                    type: \"text\",\n                    text,\n                });\n                break;\n            case \"tool\":\n                throw new Error(`Cannot append text to a message with role \"${this.data.role}\"`);\n            default: {\n                const exhaustiveCheck = this.data;\n                throw new Error(`Unhandled role in switch statement: ${exhaustiveCheck.role}`);\n            }\n        }\n    }\n    /**\n     * Append a file to the message. Takes in a FileHandle. You can obtain a FileHandle from\n     * `client.files.prepareImage`.\n     */\n    appendFile(file) {\n        this.guardMutable();\n        switch (this.data.role) {\n            case \"assistant\":\n            case \"user\":\n            case \"system\":\n                this.data.content.push({\n                    type: \"file\",\n                    name: file.name,\n                    identifier: file.identifier,\n                    sizeBytes: file.sizeBytes,\n                    fileType: file.type,\n                });\n                break;\n            case \"tool\":\n                throw new Error(`Cannot append text to a message with role \"${this.data.role}\"`);\n            default: {\n                const exhaustiveCheck = this.data;\n                throw new Error(`Unhandled role in switch statement: ${exhaustiveCheck.role}`);\n            }\n        }\n    }\n    /**\n     * Replaces all text in the messages.\n     *\n     * If the message contains other components (such as files), they will kept. The replaced text\n     * will be inserted to the beginning of the message.\n     */\n    replaceText(text) {\n        this.guardMutable();\n        switch (this.data.role) {\n            case \"assistant\":\n            case \"user\":\n            case \"system\":\n                this.data.content = [\n                    { type: \"text\", text },\n                    ...this.data.content.filter(part => part.type !== \"text\"),\n                ];\n                break;\n            case \"tool\":\n                throw new Error(`Cannot replace text in a message with role \"${this.data.role}\"`);\n            default: {\n                const exhaustiveCheck = this.data;\n                throw new Error(`Unhandled role in switch statement: ${exhaustiveCheck.role}`);\n            }\n        }\n    }\n    isSystemPrompt() {\n        return this.data.role === \"system\";\n    }\n    isUserMessage() {\n        return this.data.role === \"user\";\n    }\n    isAssistantMessage() {\n        return this.data.role === \"assistant\";\n    }\n    toString() {\n        const text = this.data.content\n            .map(part => {\n            switch (part.type) {\n                case \"text\":\n                    return part.text;\n                case \"file\":\n                    return `<file ${part.name}>`;\n                case \"toolCallRequest\":\n                    return (part.toolCallRequest.name + `(${JSON.stringify(part.toolCallRequest.arguments)})`);\n                case \"toolCallResult\":\n                    return part.content;\n                default: {\n                    const exhaustiveCheck = part;\n                    throw new Error(`Unknown part type: ${exhaustiveCheck.type}`);\n                }\n            }\n        })\n            .join(\" \");\n        if (text.includes(\"\\n\")) {\n            return (this.data.role +\n                \":\\n\" +\n                text\n                    .split(\"\\n\")\n                    .map(line => \"  \" + line)\n                    .join(\"\\n\"));\n        }\n        else {\n            return this.data.role + \": \" + text;\n        }\n    }\n}\nconst chatMessageLikeSchema = z.union([\n    z.instanceof(ChatMessage),\n    chatMessageInputSchema,\n    z.string(),\n    chatMessageDataSchema,\n]);\n\n/**\n * A builder for building a KVFieldValueTypeLibrary.\n *\n * The reason why a builder is used is to enable much better type inference when defining the value\n * types.\n */\nclass KVFieldValueTypesLibraryBuilder {\n    constructor(baseSchema) {\n        this.baseSchema = baseSchema;\n        this.valueTypes = new Map();\n    }\n    /**\n     * Define a new field value type.\n     */\n    valueType(key, param) {\n        if (this.valueTypes.has(key)) {\n            throw new Error(`ValueType with key ${key} already exists`);\n        }\n        this.valueTypes.set(key, {\n            paramType: z.object({\n                ...this.baseSchema,\n                ...param.paramType,\n            }),\n            schemaMaker: param.schemaMaker,\n            effectiveEquals: param.effectiveEquals,\n            stringify: param.stringify,\n        });\n        return this;\n    }\n    build() {\n        return new KVFieldValueTypeLibrary(new Map(this.valueTypes));\n    }\n}\n/**\n * Represents a library of field value types.\n *\n * @public\n */\nclass KVFieldValueTypeLibrary {\n    constructor(valueTypes) {\n        this.valueTypes = valueTypes;\n    }\n    /**\n     * Gets the schema for a specific field value type with the given key and parameters.\n     */\n    getSchema(key, param) {\n        const valueType = this.valueTypes.get(key);\n        if (valueType === undefined) {\n            throw new Error(`Cannot find value type ${key}`);\n        }\n        return valueType.schemaMaker(valueType.paramType.parse(param));\n    }\n    parseParamTypes(key, param) {\n        return this.valueTypes.get(key).paramType.parse(param);\n    }\n    effectiveEquals(key, typeParam, a, b) {\n        return this.valueTypes.get(key).effectiveEquals(a, b, typeParam);\n    }\n    stringify(key, typeParam, opts, value) {\n        return this.valueTypes.get(key).stringify(value, typeParam, opts);\n    }\n}\nclass KVConfigSchematicsBuilder {\n    constructor(valueTypeLibrary) {\n        this.valueTypeLibrary = valueTypeLibrary;\n        this.fields = new Map();\n        /**\n         * Prefixes for extensions. Does not affect parsing (i.e. extension fields will still not be\n         * visible). However, if a key starts with a prefix that is specified here, it will not be removed\n         * when going through the lenient zod schema.\n         */\n        this.extensionPrefixes = [];\n    }\n    /**\n     * Adds a field\n     */\n    field(key, valueTypeKey, valueTypeParams, defaultValue) {\n        const schema = this.valueTypeLibrary.getSchema(valueTypeKey, valueTypeParams);\n        const defaultValueParseResult = schema.safeParse(defaultValue);\n        if (!defaultValueParseResult.success) {\n            throw new Error(`Invalid default value for field ${key}: ${defaultValueParseResult.error.message}`);\n        }\n        defaultValue = defaultValueParseResult.data;\n        if (this.fields.has(key)) {\n            throw new Error(`Cannot add field with key ${key}. Key already exists in the schematics.`);\n        }\n        this.fields.set(key, {\n            valueTypeKey,\n            valueTypeParams,\n            schema: this.valueTypeLibrary.getSchema(valueTypeKey, valueTypeParams),\n            fullKey: key,\n            defaultValue,\n        });\n        return this;\n    }\n    /**\n     * Adds an extension point. For example, if called with .extension(\"hello.world\"), then any keys\n     * that match \"hello.world.*\" will be allowed when going through lenient zod schema. However,\n     * any extension fields will still not be accessible via this schematics.\n     */\n    extension(prefix) {\n        this.extensionPrefixes.push(`${prefix}.`);\n        return this;\n    }\n    /**\n     * Convenience method for grouping a set of fields under a shared namespace.\n     *\n     * For example, if we want to create two fields: `some:namespace:a` and `some:namespace:b`.\n     * Instead of doing:\n     *\n     * ```ts\n     * builder\n     *   .field(\"some:namespace:a\", ...)\n     *   .field(\"some:namespace:b\", ...)\n     * ```\n     *\n     * We can do:\n     *\n     * ```ts\n     * builder.scope(\"some:namespace\", builder =>\n     *  builder\n     *   .field(\"a\", ...)\n     *   .field(\"b\", ...)\n     * )\n     * ```\n     *\n     * This method does support nesting. Whether to nest or not is up to the user.\n     */\n    scope(scopeKey, fn) {\n        const innerBuilder = fn(new KVConfigSchematicsBuilder(this.valueTypeLibrary));\n        for (const [key, { valueTypeKey, valueTypeParams, schema, defaultValue },] of innerBuilder.fields.entries()) {\n            const fullKey = `${scopeKey}.${key}`;\n            if (this.fields.has(fullKey)) {\n                throw new Error(`Cannot add field with key ${fullKey}. Key already exists in the schematics.`);\n            }\n            this.fields.set(fullKey, {\n                valueTypeKey,\n                valueTypeParams,\n                schema,\n                fullKey,\n                defaultValue,\n            });\n        }\n        this.extensionPrefixes.push(...innerBuilder.extensionPrefixes.map(prefix => `${scopeKey}.${prefix}`));\n        return this;\n    }\n    build() {\n        return new KVConfigSchematics(this.valueTypeLibrary, this.fields, this.extensionPrefixes);\n    }\n}\nconst createParsedKVConfig = Symbol(\"createParsedKVConfig\");\nclass KVConfigSchematics {\n    constructor(valueTypeLibrary, fields, extensionPrefixes) {\n        this.valueTypeLibrary = valueTypeLibrary;\n        this.fields = fields;\n        this.extensionPrefixes = extensionPrefixes;\n        /**\n         * Cached full key map\n         */\n        this.fullKepMap = undefined;\n        /**\n         * Cached lenient zod schema\n         */\n        this.lenientZodSchema = undefined;\n    }\n    getFieldsMap() {\n        return new Map([...this.fields.values()].map(field => [field.fullKey, field]));\n    }\n    obtainField(key) {\n        const field = this.fields.get(key);\n        if (field === undefined) {\n            const fieldKeys = [...this.fields.keys()];\n            let availableList = fieldKeys\n                .slice(0, 10)\n                .map(key => `- ${key}`)\n                .join(\"\\n\");\n            if (fieldKeys.length > 10) {\n                availableList += `\\n... and ${fieldKeys.length - 10} more`;\n            }\n            throw new Error(`Cannot access key ${key}. Key does not exist in the schematics. Available keys:\\n\\n` +\n                availableList);\n        }\n        return field;\n    }\n    obtainFieldByFullKey(fullKey) {\n        const field = this.getFullKeyMap().get(fullKey);\n        if (field === undefined) {\n            const fieldKeys = [...this.getFullKeyMap().keys()];\n            let availableList = fieldKeys\n                .slice(0, 10)\n                .map(key => `- ${key}`)\n                .join(\"\\n\");\n            if (fieldKeys.length > 10) {\n                availableList += `\\n... and ${fieldKeys.length - 10} more`;\n            }\n            throw new Error(`Cannot access full key ${fullKey}. Full key does not exist in the schematics. Available` +\n                `keys:\\n\\n` +\n                availableList);\n        }\n        return field;\n    }\n    getSchemaForKey(key) {\n        const field = this.obtainField(key);\n        return field.schema;\n    }\n    parseField(fieldSchema, value) {\n        if (value === undefined) {\n            if (fieldSchema.defaultValue === undefined) {\n                throw new Error(`Field with key ${fieldSchema.fullKey} is missing and has no default value`);\n            }\n            return fieldSchema.defaultValue;\n        }\n        const parseResult = fieldSchema.schema.safeParse(value);\n        if (!parseResult.success) {\n            throw new Error(`Field with key ${fieldSchema.fullKey} does not satisfy the schema:` +\n                parseResult.error.message);\n        }\n        return parseResult.data;\n    }\n    parseFieldWithoutDefault(field, value) {\n        if (value === undefined) {\n            return undefined;\n        }\n        const parseResult = field.schema.safeParse(value);\n        if (!parseResult.success) {\n            throw new Error(`Field with key ${field.fullKey} does not satisfy the schema:` + parseResult.error.message);\n        }\n        return parseResult.data;\n    }\n    /**\n     * Parse and access a field in the config.\n     */\n    access(config, key) {\n        const field = this.obtainField(key);\n        return this.parseField(field, config.fields.find(f => f.key === field.fullKey)?.value);\n    }\n    accessByFullKey(config, fullKey) {\n        const field = this.obtainFieldByFullKey(fullKey);\n        return this.parseField(field, config.fields.find(f => f.key === field.fullKey)?.value);\n    }\n    /**\n     * Parse and access a field in the config. Returns undefined if the field is missing.\n     */\n    accessPartial(config, key) {\n        const field = this.obtainField(key);\n        return this.parseFieldWithoutDefault(field, config.fields.find(f => f.key === field.fullKey)?.value);\n    }\n    /**\n     * Gets a slice of the config schema with the given key patterns. Support syntax:\n     *\n     * - `some.namespace.key`: Matches exactly `some.namespace.key`\n     * - `some.namespace.*`: Matches anything that starts with `some.namespace.`\n     */\n    sliced(...patterns) {\n        const parsedPatterns = patterns.map(p => {\n            if (p.endsWith(\"*\")) {\n                return { type: \"prefix\", value: p.substring(0, p.length - 1) };\n            }\n            return { type: \"exact\", value: p };\n        });\n        const newFields = new Map();\n        for (const [key, field] of this.fields.entries()) {\n            for (const pattern of parsedPatterns) {\n                if ((pattern.type === \"exact\" && key === pattern.value) ||\n                    (pattern.type === \"prefix\" && key.startsWith(pattern.value))) {\n                    newFields.set(key, field);\n                }\n            }\n        }\n        return new KVConfigSchematics(this.valueTypeLibrary, newFields, this.extensionPrefixes);\n    }\n    /**\n     * Get a subset of the config schema with a specific scope.\n     */\n    scoped(scopeKey) {\n        const newFields = new Map();\n        for (const [key, field] of this.fields.entries()) {\n            if (key.startsWith(`${scopeKey}.`)) {\n                newFields.set(key.substring(scopeKey.length + 1), field);\n            }\n        }\n        return new KVConfigSchematics(this.valueTypeLibrary, newFields, this.extensionPrefixes);\n    }\n    union(other) {\n        const newFields = new Map();\n        for (const [key, field] of this.fields.entries()) {\n            newFields.set(key, field);\n        }\n        for (const [key, field] of other.fields.entries()) {\n            if (newFields.has(key)) {\n                throw new Error(\"Cannot union two KVConfigSchematics. The following key is duplicated: \" + key);\n            }\n            newFields.set(key, field);\n        }\n        return new KVConfigSchematics(this.valueTypeLibrary, newFields, [\n            ...this.extensionPrefixes,\n            ...other.extensionPrefixes,\n        ]);\n    }\n    /**\n     * Combine baseKey into the fields. Effectively removes the baseKey.\n     */\n    flattenBaseKey() {\n        const newFields = new Map();\n        for (const field of this.fields.values()) {\n            newFields.set(field.fullKey, field);\n        }\n        return new KVConfigSchematics(this.valueTypeLibrary, newFields, this.extensionPrefixes);\n    }\n    parseToMap(config) {\n        const rawConfigMap = kvConfigToMap(config);\n        const parsedConfigMap = new Map();\n        for (const [key, field] of this.fields.entries()) {\n            const value = rawConfigMap.get(field.fullKey);\n            const parsedValue = this.parseField(field, value);\n            parsedConfigMap.set(key, parsedValue);\n        }\n        return parsedConfigMap;\n    }\n    parseToMapWithFullKey(config) {\n        const rawConfigMap = kvConfigToMap(config);\n        const parsedConfigMap = new Map();\n        for (const field of this.fields.values()) {\n            const value = rawConfigMap.get(field.fullKey);\n            const parsedValue = this.parseField(field, value);\n            parsedConfigMap.set(field.fullKey, parsedValue);\n        }\n        return parsedConfigMap;\n    }\n    parseToMapPartial(config) {\n        const rawConfigMap = kvConfigToMap(config);\n        const parsedConfigMap = new Map();\n        for (const [key, field] of this.fields.entries()) {\n            const value = rawConfigMap.get(field.fullKey);\n            const parsedValue = this.parseFieldWithoutDefault(field, value);\n            if (parsedValue !== undefined) {\n                parsedConfigMap.set(key, parsedValue);\n            }\n        }\n        return parsedConfigMap;\n    }\n    /**\n     * Parse the given config to a ParsedKVConfig. **Will throw** if the config does not satisfy the\n     * schema.\n     */\n    parse(config) {\n        return ParsedKVConfig[createParsedKVConfig](this.parseToMap(config));\n    }\n    parsePartial(config) {\n        return PartialParsedKVConfig[createParsedKVConfig](this.parseToMapPartial(config));\n    }\n    /**\n     * Builds a full KV config from the given values record. **Will throw** if any of the values are\n     * missing or do not satisfy the schema.\n     */\n    buildFullConfig(valuesRecord) {\n        return {\n            fields: Array.from(this.fields.entries()).map(([key, field]) => {\n                const value = this.parseField(field, valuesRecord[key]);\n                return { key: field.fullKey, value };\n            }),\n        };\n    }\n    /**\n     * Builds a partial KV config from the given values record. Will leave holes in the config if the\n     * values are missing. **Will throw** if any of the values do not satisfy the schema.\n     */\n    buildPartialConfig(valuesRecord) {\n        return {\n            fields: Object.entries(valuesRecord)\n                .filter(([_key, value]) => value !== undefined)\n                .map(([key, value]) => {\n                const field = this.obtainField(key);\n                return { key: field.fullKey, value: this.parseField(field, value) };\n            }),\n        };\n    }\n    createBuildPartialConfigInput() {\n        return {};\n    }\n    configBuilder() {\n        return new KVConfigBuilder(this.fields);\n    }\n    clone() {\n        return new KVConfigSchematics(this.valueTypeLibrary, new Map(this.fields), this.extensionPrefixes);\n    }\n    withTypeParamOverride(key, paramMapper) {\n        const field = this.obtainField(key);\n        const clone = this.clone();\n        clone.fields.set(key, {\n            ...field,\n            valueTypeParams: paramMapper(field.valueTypeParams),\n            schema: this.valueTypeLibrary.getSchema(field.valueTypeKey, paramMapper(field.valueTypeParams)),\n        });\n        return clone;\n    }\n    getFullKeyMap() {\n        if (this.fullKepMap !== undefined) {\n            return this.fullKepMap;\n        }\n        this.fullKepMap = new Map([...this.fields.values()].map(field => [field.fullKey, field]));\n        return this.fullKepMap;\n    }\n    makeLenientZodSchema() {\n        const fullKeyMap = this.getFullKeyMap();\n        return kvConfigSchema.transform(value => {\n            const seenKeys = new Set();\n            return {\n                fields: value.fields.filter(field => {\n                    if (this.extensionPrefixes.some(prefix => field.key.startsWith(prefix))) {\n                        // If we matched an extension prefix, we don't care about the key or value type. Just\n                        // allow it.\n                        return true;\n                    }\n                    if (seenKeys.has(field.key)) {\n                        return false;\n                    }\n                    const fieldDef = fullKeyMap.get(field.key);\n                    if (fieldDef === undefined) {\n                        return false;\n                    }\n                    const parsed = fieldDef.schema.safeParse(field.value);\n                    if (!parsed.success) {\n                        return false;\n                    }\n                    seenKeys.add(field.key);\n                    return true;\n                }),\n            };\n        });\n    }\n    /**\n     * Makes a zod schema that parses a KVConfig which only allows fields with correct keys and types\n     * through.\n     *\n     * Will filter out any fields that are not in the schema.\n     */\n    getLenientZodSchema() {\n        if (this.lenientZodSchema !== undefined) {\n            return this.lenientZodSchema;\n        }\n        this.lenientZodSchema = this.makeLenientZodSchema();\n        return this.lenientZodSchema;\n    }\n    getValueType(key) {\n        const field = this.fields.get(key);\n        if (field === undefined) {\n            return null;\n        }\n        return field.valueTypeKey;\n    }\n    getValueTypeParam(key) {\n        const field = this.fields.get(key);\n        if (field === undefined) {\n            return null;\n        }\n        return field.valueTypeParams;\n    }\n    getValueTypeParamByFullKey(key) {\n        const field = this.getFullKeyMap().get(key);\n        if (field === undefined) {\n            throw new Error(`Field with key ${key} does not exist in the schematics`);\n        }\n        return field.valueTypeParams;\n    }\n    hasFullKey(key) {\n        const field = this.getFullKeyMap().get(key);\n        return field !== undefined;\n    }\n    /**\n     * Given a KVConfig, filter it to only include fields that are in the schematics.\n     */\n    filterConfig(config, additionalFilter) {\n        const fullKeyMap = this.getFullKeyMap();\n        return {\n            fields: config.fields.filter(configField => {\n                const field = fullKeyMap.get(configField.key);\n                if (field === undefined) {\n                    return false;\n                }\n                if (additionalFilter !== undefined) {\n                    return additionalFilter(field.fullKey, {\n                        type: field.valueTypeKey,\n                        param: field.valueTypeParams,\n                    });\n                }\n                return true;\n            }),\n        };\n    }\n    /**\n     * Given a KVConfigStack, filter it to only include fields that are in the schematics.\n     */\n    filterStack(stack) {\n        return {\n            layers: stack.layers.map(layer => ({\n                layerName: layer.layerName,\n                config: this.filterConfig(layer.config),\n            })),\n        };\n    }\n    twoWayFilterConfig(config, additionalFilter) {\n        const includedFields = [];\n        const excludedFields = [];\n        const fullKeyMap = this.getFullKeyMap();\n        for (const configField of config.fields) {\n            const field = fullKeyMap.get(configField.key);\n            let include = field !== undefined;\n            if (field !== undefined && additionalFilter !== undefined) {\n                include = additionalFilter(field.fullKey, {\n                    type: field.valueTypeKey,\n                    param: field.valueTypeParams,\n                });\n            }\n            if (include) {\n                includedFields.push(configField);\n            }\n            else {\n                excludedFields.push(configField);\n            }\n        }\n        return [{ fields: includedFields }, { fields: excludedFields }];\n    }\n    /**\n     * Given a list of keys, filter it to only include keys that are in the schematics.\n     */\n    filterFullKeys(keys) {\n        const fullKeyMap = this.getFullKeyMap();\n        return keys.filter(key => fullKeyMap.has(key));\n    }\n    /**\n     * Compares two KV config. Compare with \"effective equals\". Only compare fields in the schematics.\n     * Does not apply defaults.\n     */\n    configEffectiveEquals(a, b) {\n        const aMap = kvConfigToMap(a);\n        const bMap = kvConfigToMap(b);\n        for (const field of this.fields.values()) {\n            const aValue = aMap.get(field.fullKey);\n            const bValue = bMap.get(field.fullKey);\n            if (aValue === undefined) {\n                if (bValue === undefined) {\n                    // Both are missing, continue\n                    continue;\n                }\n                else {\n                    return false;\n                }\n            }\n            this.valueTypeLibrary.effectiveEquals(field.valueTypeKey, field.valueTypeParams, aValue, bValue);\n        }\n        return true;\n    }\n    /**\n     * Compares two KV config field. Compare with \"effective equals\". Can only compare fields in the\n     * schematics.\n     */\n    fieldEffectiveEquals(key, a, b) {\n        const field = this.obtainField(key);\n        return this.valueTypeLibrary.effectiveEquals(field.valueTypeKey, field.valueTypeParams, field.schema.parse(a), field.schema.parse(b));\n    }\n    fieldEffectiveEqualsWithFullKey(fullKey, a, b) {\n        const fullKeyMap = this.getFullKeyMap();\n        const field = fullKeyMap.get(fullKey);\n        if (field === undefined) {\n            throw new Error(`Field with key ${fullKey} does not exist in the schematics`);\n        }\n        return this.valueTypeLibrary.effectiveEquals(field.valueTypeKey, field.valueTypeParams, field.schema.parse(a), field.schema.parse(b));\n    }\n    makeInternalFieldStringifyOpts(opts) {\n        return {\n            t: opts.t ?? ((_key, fallback) => fallback),\n            desiredLength: opts.desiredLength,\n        };\n    }\n    stringifyField(key, value, opts = {}) {\n        const field = this.obtainField(key);\n        return this.valueTypeLibrary.stringify(field.valueTypeKey, field.valueTypeParams, this.makeInternalFieldStringifyOpts(opts), value);\n    }\n    tryStringifyFieldWithFullKey(key, value, opts) {\n        const fullKeyMap = this.getFullKeyMap();\n        const field = fullKeyMap.get(key);\n        if (field === undefined) {\n            return null;\n        }\n        return this.valueTypeLibrary.stringify(field.valueTypeKey, field.valueTypeParams, this.makeInternalFieldStringifyOpts(opts), value);\n    }\n    /**\n     * Apply config in patch to target. Only apply fields that are in the schematics.\n     */\n    apply(target, patch) {\n        const filteredPatch = this.filterConfig(patch);\n        return collapseKVStackRaw([target, filteredPatch]);\n    }\n    /**\n     * Tries to un-apply the patch from the target. Will only un-apply fields that are in the\n     * schematics.\n     *\n     * If the value in the target is not effective equal to the value in the patch, it will not be\n     * removed.\n     */\n    unApply(target, patch) {\n        const filteredPatch = this.filterConfig(patch);\n        const patchMap = kvConfigToMap(filteredPatch);\n        const newMap = new Map(kvConfigToMap(target));\n        const fullKeyMap = this.getFullKeyMap();\n        for (const [key, value] of patchMap.entries()) {\n            const field = fullKeyMap.get(key);\n            if (field === undefined) {\n                continue;\n            }\n            const targetValue = newMap.get(key);\n            if (targetValue !== undefined) {\n                if (!this.valueTypeLibrary.effectiveEquals(field.valueTypeKey, field.valueTypeParams, value, targetValue)) {\n                    continue;\n                }\n                newMap.delete(key);\n            }\n        }\n        return mapToKVConfig(newMap);\n    }\n    /**\n     * Given a KVConfig, iterate through all the fields that are in the schematics. Keys will be full\n     * keys.\n     */\n    *iterateFieldsOfConfig(config) {\n        const fullKeyMap = this.getFullKeyMap();\n        for (const { key, value } of config.fields) {\n            const field = fullKeyMap.get(key);\n            if (field !== undefined) {\n                yield [key, value];\n            }\n        }\n    }\n    /**\n     * Given a KVConfig, iterate through all the fields that are in the schematics.\n     */\n    *fullKeys() {\n        const fullKeyMap = this.getFullKeyMap();\n        for (const key of fullKeyMap.keys()) {\n            yield key;\n        }\n    }\n    /**\n     * Effectively compare two KV config, and return full keys of fields that are different.\n     */\n    effectiveCompareConfig(a, b, opts = {}) {\n        const { fieldFilter } = opts;\n        const aMap = kvConfigToMap(a);\n        const bMap = kvConfigToMap(b);\n        const onlyInA = [];\n        const onlyInB = [];\n        const inBothButDifferent = [];\n        for (const field of this.fields.values()) {\n            if (fieldFilter !== undefined) {\n                if (!fieldFilter(field.fullKey, {\n                    type: field.valueTypeKey,\n                    param: field.valueTypeParams,\n                })) {\n                    continue;\n                }\n            }\n            const aValue = aMap.get(field.fullKey);\n            const bValue = bMap.get(field.fullKey);\n            if (aValue === undefined) {\n                if (bValue === undefined) {\n                    continue;\n                }\n                else {\n                    onlyInB.push(field.fullKey);\n                }\n            }\n            else {\n                if (bValue === undefined) {\n                    onlyInA.push(field.fullKey);\n                }\n                else {\n                    if (!this.valueTypeLibrary.effectiveEquals(field.valueTypeKey, field.valueTypeParams, aValue, bValue)) {\n                        inBothButDifferent.push(field.fullKey);\n                    }\n                }\n            }\n        }\n        return { onlyInA, onlyInB, inBothButDifferent };\n    }\n    serialize() {\n        return {\n            fields: [...this.fields.entries()].map(([key, field]) => ({\n                shortKey: key,\n                fullKey: field.fullKey,\n                typeKey: field.valueTypeKey,\n                typeParams: field.valueTypeParams,\n                defaultValue: field.defaultValue,\n            })),\n            extensionPrefixes: this.extensionPrefixes,\n        };\n    }\n    /**\n     * Check if any of the fields in the schematics has a full key that starts with the given prefix.\n     */\n    hasFieldsWithPrefix(prefix) {\n        for (const field of this.fields.values()) {\n            if (field.fullKey.startsWith(prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static deserialize(valueTypeLibrary, serialized) {\n        const fields = new Map(serialized.fields.map(field => {\n            const typeParams = valueTypeLibrary.parseParamTypes(field.typeKey, field.typeParams);\n            const valueSchema = valueTypeLibrary.getSchema(field.typeKey, typeParams);\n            return [\n                field.shortKey,\n                {\n                    valueTypeKey: field.typeKey,\n                    valueTypeParams: typeParams,\n                    schema: valueSchema,\n                    fullKey: field.fullKey,\n                    defaultValue: valueSchema.parse(field.defaultValue),\n                },\n            ];\n        }));\n        return new KVConfigSchematics(valueTypeLibrary, fields, serialized.extensionPrefixes ?? []);\n    }\n    static tryDeserialize(valueTypeLibrary, serialized) {\n        const fields = new Map();\n        const errors = [];\n        for (const field of serialized.fields) {\n            try {\n                const typeParams = valueTypeLibrary.parseParamTypes(field.typeKey, field.typeParams);\n                const valueSchema = valueTypeLibrary.getSchema(field.typeKey, typeParams);\n                fields.set(field.shortKey, {\n                    valueTypeKey: field.typeKey,\n                    valueTypeParams: typeParams,\n                    schema: valueSchema,\n                    fullKey: field.fullKey,\n                    defaultValue: valueSchema.parse(field.defaultValue),\n                });\n            }\n            catch (error) {\n                errors.push({\n                    fullKey: field.fullKey,\n                    error: serializeError(error),\n                });\n            }\n        }\n        return {\n            schematics: new KVConfigSchematics(valueTypeLibrary, fields, serialized.extensionPrefixes ?? []),\n            errors,\n        };\n    }\n}\nclass KVConfigBuilder {\n    constructor(fieldDefs) {\n        this.fieldDefs = fieldDefs;\n        this.fields = new Map();\n    }\n    with(key, value) {\n        const field = this.fieldDefs.get(key);\n        if (field === undefined) {\n            throw new Error(`Field with key ${key} does not exist in the schematics.`);\n        }\n        this.fields.set(field.fullKey, value);\n        return this;\n    }\n    build() {\n        return mapToKVConfig(this.fields);\n    }\n}\n/**\n * This class can be only constructed via the `parse` method on `KVConfigSchema`. It is guaranteed\n * to satisfy the schema.\n *\n * All fields that exist on the schematics is guaranteed to exist here.\n */\nclass ParsedKVConfig {\n    constructor(\n    /**\n     * Guaranteed to satisfy the schema.\n     */\n    configMap) {\n        this.configMap = configMap;\n    }\n    /**\n     * @internal\n     */\n    static [createParsedKVConfig](configMap) {\n        return new ParsedKVConfig(configMap);\n    }\n    get(key) {\n        return this.configMap.get(key);\n    }\n}\n/**\n * This class can be constructed via the `parsePartial` method on `KVConfigSchema`. All existing\n * fields are guaranteed to satisfy the schema. However, there may be missing fields.\n */\nclass PartialParsedKVConfig {\n    constructor(\n    /**\n     * Guaranteed to satisfy the schema.\n     */\n    configMap) {\n        this.configMap = configMap;\n    }\n    static [createParsedKVConfig](configMap) {\n        return new PartialParsedKVConfig(configMap);\n    }\n    get(key) {\n        return this.configMap.get(key);\n    }\n    has(key) {\n        return this.configMap.has(key);\n    }\n}\nfunction kvConfigToMap(config) {\n    return new Map(config.fields.map(f => [f.key, f.value]));\n}\nfunction mapToKVConfig(map) {\n    return {\n        fields: Array.from(map.entries()).map(([key, value]) => ({ key, value })),\n    };\n}\nfunction collapseKVStackRaw(configs) {\n    const map = new Map();\n    for (const config of configs) {\n        for (const { key, value } of config.fields) {\n            map.set(key, value);\n        }\n    }\n    return mapToKVConfig(map);\n}\nconst emptyKVConfig = {\n    fields: [],\n};\nfunction singleLayerKVConfigStackOf(name, config) {\n    return {\n        layers: [\n            {\n                layerName: name,\n                config,\n            },\n        ],\n    };\n}\n/**\n * Given a KVConfigStack, add a new layer to the top of the stack. Does not mutate the original\n * stack.\n */\nfunction addKVConfigToStack(stack, newLayerName, newLayerConfig) {\n    return {\n        layers: [\n            ...stack.layers,\n            {\n                layerName: newLayerName,\n                config: newLayerConfig,\n            },\n        ],\n    };\n}\nfunction deepEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (typeof a !== \"object\" || typeof b !== \"object\") {\n        return false;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    if (Array.isArray(a) !== Array.isArray(b)) {\n        return false;\n    }\n    if (Array.isArray(a)) {\n        if (a.length !== b?.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEquals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    const aKeys = new Set(Object.keys(a));\n    const bKeys = new Set(Object.keys(b));\n    if (aKeys.size !== bKeys.size) {\n        return false;\n    }\n    for (const key of aKeys) {\n        if (!bKeys.has(key)) {\n            return false;\n        }\n        if (!deepEquals(a[key], b[key])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Quote a string.\n */\nfunction quoteString(str, empty) {\n    if (str === undefined || str === \"\") {\n        return empty ?? '\"\"';\n    }\n    return JSON.stringify(str);\n}\n/**\n * Quote a string that may include manual escape. (i.e. newlines represented with \"\\\\n\")\n */\nfunction quoteStringWithManualEscape(str, empty) {\n    return quoteString(str?.replace(/\\\\n/g, \"\\n\"), empty);\n}\n/**\n * Builder for all the basic KV types.\n *\n * @public\n */\nconst baseKVValueTypesLibraryBuilder = new KVFieldValueTypesLibraryBuilder({\n    /**\n     * Display name of the field.\n     */\n    displayName: z.string().optional(),\n    /**\n     * Hint about the field. Shown when hovering over the field.\n     */\n    hint: z.string().optional(),\n    /**\n     * A field can be marked as model centric when it loses its meaning when there is no model to\n     * reference.\n     *\n     * An example would be prompt template. There is no point to configure prompt template when there\n     * isn't a specific model.\n     *\n     * @experimental This field is experimental and may change in the future.\n     */\n    modelCentric: z.boolean().optional(),\n    /**\n     * A field can be marked as non-configurable when it is only used as a means to carry information.\n     * As a result, it will not be shown in the UI.\n     *\n     * An example would be context length for MLX, as you cannot change it.\n     *\n     * @experimental This field is experimental and may change in the future.\n     */\n    nonConfigurable: z.boolean().optional(),\n    /**\n     * A field can be marked as engineDoesNotSupport when when the engine running the model does not\n     * support the field.\n     *\n     * @experimental This field is experimental and may change in the future.\n     */\n    engineDoesNotSupport: z.boolean().optional(),\n    /**\n     * A field can be marked as machine dependent when its value is highly dependent on the machine\n     * that is being used. When exporting the config, one may decide to not include machine dependent\n     * fields by default.\n     *\n     * An example would be GPU offload settings.\n     *\n     * @experimental This field is experimental and may change in the future.\n     */\n    machineDependent: z.boolean().optional(),\n    warning: z.string().optional(),\n    subtitle: z.string().optional(),\n    isExperimental: z.boolean().optional(),\n    dependencies: z.array(kvConfigFieldDependencySchema).optional(),\n})\n    .valueType(\"numeric\", {\n    paramType: {\n        min: z.number().optional(),\n        max: z.number().optional(),\n        step: z.number().optional(),\n        int: z.boolean().optional(),\n        precision: z.number().int().nonnegative().optional(),\n        slider: z\n            .object({\n            min: z.number(),\n            max: z.number(),\n            step: z.number(),\n        })\n            .optional(),\n        shortHand: z.string().optional(),\n    },\n    schemaMaker: ({ min, max, int, precision }) => {\n        let schema = z.number();\n        if (min !== undefined) {\n            schema = schema.min(min);\n        }\n        if (max !== undefined) {\n            schema = schema.max(max);\n        }\n        if (int) {\n            if (precision !== undefined) {\n                throw new Error(\"Cannot specify both int and precision.\");\n            }\n            schema = schema.int();\n        }\n        return schema;\n    },\n    effectiveEquals: (a, b) => {\n        return a === b;\n    },\n    stringify: (value, { int, precision }) => {\n        if (int) {\n            return String(Math.round(value));\n        }\n        return value.toFixed(precision ?? 2);\n    },\n})\n    .valueType(\"string\", {\n    paramType: {\n        minLength: z.number().optional(),\n        maxLength: z.number().optional(),\n        isParagraph: z.boolean().optional(),\n        isProtected: z.boolean().optional(),\n        /**\n         * If true, the string should match to a single token.\n         */\n        isToken: z.boolean().optional(),\n        placeholder: z.string().optional(),\n    },\n    schemaMaker: ({ minLength, maxLength }) => {\n        let schema = z.string();\n        if (minLength !== undefined) {\n            schema = schema.min(minLength);\n        }\n        if (maxLength !== undefined) {\n            schema = schema.max(maxLength);\n        }\n        return schema;\n    },\n    effectiveEquals: (a, b) => {\n        return a === b;\n    },\n    stringify: (value, { isParagraph, isProtected }, { t, desiredLength }) => {\n        if (isProtected) {\n            return \"********\";\n        }\n        if (isParagraph) {\n            if (value === \"\") {\n                return t(\"config:customInputs.string.emptyParagraph\", \"<Empty>\");\n            }\n            else {\n                if (desiredLength === undefined || value.length <= desiredLength) {\n                    return value;\n                }\n                else {\n                    return (value.slice(0, Math.floor(desiredLength / 2)) +\n                        \" ... \" +\n                        value.slice(-Math.ceil(desiredLength / 2)));\n                }\n            }\n        }\n        else {\n            const quoted = quoteString(value);\n            if (desiredLength === undefined || quoted.length <= desiredLength) {\n                return quoted;\n            }\n            else {\n                return (quoted.slice(0, Math.floor(desiredLength / 2)) +\n                    \"...\" +\n                    quoted.slice(-Math.ceil(desiredLength / 2)));\n            }\n        }\n    },\n})\n    .valueType(\"select\", {\n    paramType: {\n        options: z\n            .array(z.object({ value: z.string().nonempty(), displayName: z.string() }).or(z.string()))\n            .refine(options => {\n            // See if there are any duplicate values.\n            const values = new Set();\n            for (const option of options) {\n                const value = typeof option === \"string\" ? option : option.value;\n                if (values.has(value)) {\n                    return false;\n                }\n                values.add(value);\n            }\n            return true;\n        }, {\n            message: \"Duplicate values in options.\",\n        }),\n    },\n    schemaMaker: ({ options }) => {\n        const allowedValues = new Set(options.map(option => (typeof option === \"string\" ? option : option.value)));\n        return z.string().refine(value => allowedValues.has(value));\n    },\n    effectiveEquals: (a, b) => {\n        return a === b;\n    },\n    stringify: value => {\n        return value;\n    },\n})\n    .valueType(\"boolean\", {\n    paramType: {},\n    schemaMaker: () => {\n        return z.boolean();\n    },\n    effectiveEquals: (a, b) => {\n        return a === b;\n    },\n    stringify: value => {\n        return value ? \"ON\" : \"OFF\";\n    },\n})\n    .valueType(\"stringArray\", {\n    paramType: {\n        maxNumItems: z.number().optional(),\n        /**\n         * Whether to allow empty strings in the array. Default is false.\n         */\n        allowEmptyStrings: z.boolean().optional(),\n    },\n    schemaMaker: ({ maxNumItems, allowEmptyStrings }) => {\n        let stringSchema = z.string();\n        if (!allowEmptyStrings) {\n            stringSchema = stringSchema.min(1);\n        }\n        let schema = z.array(stringSchema);\n        if (maxNumItems !== undefined) {\n            schema = schema.max(maxNumItems);\n        }\n        return schema;\n    },\n    effectiveEquals: (a, b) => {\n        return a.length === b.length && a.every((v, i) => v === b[i]);\n    },\n    stringify: (value, _typeParam, { t, desiredLength }) => {\n        const quoted = value.map(v => quoteString(v));\n        if (quoted.length === 0) {\n            return t(\"config:customInputs.stringArray.empty\", \"<Empty>\");\n        }\n        if (quoted.length <= 2 || desiredLength === undefined) {\n            return quoted.join(\", \");\n        }\n        // Desired length does not need to be followed strictly. It is just a hint.\n        let currentLength = quoted[0].length + quoted[1].length + 6;\n        for (let i = 1; i < quoted.length - 1; i++) {\n            currentLength += quoted[i].length + 2;\n            if (currentLength >= desiredLength) {\n                return quoted.slice(0, i).join(\", \") + \", ...\" + quoted[quoted.length - 1];\n            }\n        }\n        return quoted.join(\", \");\n    },\n});\n/**\n * Basic key-value field value types library. These are the types that are exposed to plugins.\n *\n * @public\n */\nbaseKVValueTypesLibraryBuilder.build();\n/**\n * The global key-value field value types library. This includes all the basic types and additional\n * types that are used in the LM Studio application.\n *\n * @public\n */\nconst kvValueTypesLibrary = baseKVValueTypesLibraryBuilder\n    .valueType(\"checkboxNumeric\", {\n    paramType: {\n        min: z.number().optional(),\n        max: z.number().optional(),\n        step: z.number().optional(),\n        int: z.boolean().optional(),\n        uncheckedHint: z.string().optional(),\n        precision: z.number().int().nonnegative().optional(),\n        slider: z\n            .object({\n            min: z.number(),\n            max: z.number(),\n            step: z.number(),\n        })\n            .optional(),\n    },\n    schemaMaker: ({ min, max, int, precision }) => {\n        let numberSchema = z.number();\n        if (min !== undefined) {\n            numberSchema = numberSchema.min(min);\n        }\n        if (max !== undefined) {\n            numberSchema = numberSchema.max(max);\n        }\n        if (int) {\n            if (precision !== undefined) {\n                throw new Error(\"Cannot specify both int and precision.\");\n            }\n            numberSchema = numberSchema.int();\n        }\n        return z.object({\n            checked: z.boolean(),\n            value: numberSchema,\n        });\n    },\n    effectiveEquals: (a, b) => {\n        if (a.checked !== b.checked) {\n            return false;\n        }\n        if (!a.checked) {\n            return true;\n        }\n        return a.value === b.value;\n    },\n    stringify: (value, { int, precision }, { t }) => {\n        if (!value.checked) {\n            return t(\"config:customInputs.checkboxNumeric.off\", \"OFF\");\n        }\n        if (int) {\n            return String(Math.round(value.value));\n        }\n        return value.value.toFixed(precision ?? 2);\n    },\n})\n    .valueType(\"numericArray\", {\n    paramType: {\n        min: z.number().optional(),\n        max: z.number().optional(),\n        int: z.boolean().optional(),\n    },\n    schemaMaker: ({ min, max, int }) => {\n        let numberSchema = z.number();\n        if (min !== undefined) {\n            numberSchema = numberSchema.min(min);\n        }\n        if (max !== undefined) {\n            numberSchema = numberSchema.max(max);\n        }\n        if (int) {\n            numberSchema = numberSchema.int();\n        }\n        return z.array(numberSchema);\n    },\n    effectiveEquals: (a, b) => {\n        return a.length === b.length && a.every((v, i) => v === b[i]);\n    },\n    stringify: (value, { int }) => {\n        return value.map(v => (int ? String(Math.round(v)) : String(v))).join(\", \");\n    },\n})\n    .valueType(\"contextOverflowPolicy\", {\n    paramType: {},\n    schemaMaker: () => {\n        return llmContextOverflowPolicySchema;\n    },\n    effectiveEquals: (a, b) => {\n        return a === b;\n    },\n    stringify: (value, _typeParam, { t }) => {\n        switch (value) {\n            case \"stopAtLimit\":\n                return t(\"config:customInputs.contextOverflowPolicy.stopAtLimit\", \"Stop At Limit\");\n            case \"truncateMiddle\":\n                return t(\"config:customInputs.contextOverflowPolicy.truncateMiddle\", \"Truncate Middle\");\n            case \"rollingWindow\":\n                return t(\"config:customInputs.contextOverflowPolicy.rollingWindow\", \"Rolling Window\");\n        }\n    },\n})\n    .valueType(\"context\", {\n    paramType: {},\n    schemaMaker: () => {\n        return z.array(llmContextReferenceSchema);\n    },\n    effectiveEquals: (a, b) => {\n        return deepEquals(a, b);\n    },\n    stringify: value => {\n        return JSON.stringify(value, null, 2); // TODO: pretty print\n    },\n})\n    .valueType(\"contextLength\", {\n    paramType: {\n        max: z.number().optional(),\n    },\n    schemaMaker: () => {\n        return z.number().int().positive();\n    },\n    effectiveEquals: (a, b) => {\n        return a === b;\n    },\n    stringify: (value, { max }) => {\n        if (max === undefined) {\n            return String(value);\n        }\n        return `${value}/${max}`;\n    },\n})\n    .valueType(\"modelIdentifier\", {\n    paramType: {\n        domain: z.array(modelDomainTypeSchema).optional(),\n    },\n    schemaMaker: () => {\n        return z.string();\n    },\n    effectiveEquals: (a, b) => {\n        return a === b;\n    },\n    stringify: value => {\n        return value;\n    },\n})\n    .valueType(\"llmPromptTemplate\", {\n    paramType: {},\n    schemaMaker: () => {\n        return llmPromptTemplateSchema;\n    },\n    effectiveEquals: (a, b) => {\n        if (a.type !== b.type) {\n            return false;\n        }\n        if (a.stopStrings.length !== b.stopStrings.length) {\n            return false;\n        }\n        if (!a.stopStrings.every((v, i) => v === b.stopStrings[i])) {\n            return false;\n        }\n        switch (a.type) {\n            case \"jinja\":\n                return a.jinjaPromptTemplate?.template === b.jinjaPromptTemplate?.template;\n            case \"manual\":\n                return (a.manualPromptTemplate?.beforeSystem === b.manualPromptTemplate?.beforeSystem &&\n                    a.manualPromptTemplate?.afterSystem === b.manualPromptTemplate?.afterSystem &&\n                    a.manualPromptTemplate?.beforeUser === b.manualPromptTemplate?.beforeUser &&\n                    a.manualPromptTemplate?.afterUser === b.manualPromptTemplate?.afterUser &&\n                    a.manualPromptTemplate?.beforeAssistant === b.manualPromptTemplate?.beforeAssistant &&\n                    a.manualPromptTemplate?.afterAssistant === b.manualPromptTemplate?.afterAssistant);\n            default: {\n                const exhaustiveCheck = a.type;\n                throw new Error(\"Unknown template type: \" + exhaustiveCheck);\n            }\n        }\n    },\n    stringify: (value, _typeParam, { t, desiredLength }) => {\n        switch (value.type) {\n            case \"jinja\": {\n                const lead = `${t(\"config:customInputs.llmPromptTemplate.type\", \"Type\")}: ` +\n                    `${t(\"config:customInputs.llmPromptTemplate.types.jinja/label\", \"Jinja\")}\\n` +\n                    `${t(\"config:customInputs.llmPromptTemplate.jinja.template/label\", \"Template\")}: `;\n                if (desiredLength === undefined) {\n                    return lead + value.jinjaPromptTemplate?.template;\n                }\n                const currentLength = lead.length;\n                const remainingLength = Math.min(100, desiredLength - currentLength);\n                const template = value.jinjaPromptTemplate?.template ?? \"\";\n                if (template.length <= remainingLength) {\n                    return lead + template;\n                }\n                return (lead +\n                    template.slice(0, Math.floor(remainingLength / 2)) +\n                    \"...\" +\n                    template.slice(-Math.ceil(remainingLength / 2)));\n            }\n            case \"manual\": {\n                return (`${t(\"config:customInputs.llmPromptTemplate.type\", \"Type\")}: ` +\n                    `${t(\"config:customInputs.llmPromptTemplate.types.manual/label\", \"Manual\")}\\n` +\n                    `${t(\"config:customInputs.llmPromptTemplate.manual.subfield.beforeSystem/label\", \"Before System\")}: ` +\n                    `${quoteStringWithManualEscape(value.manualPromptTemplate?.beforeSystem)}\\n` +\n                    `${t(\"config:customInputs.llmPromptTemplate.manual.subfield.afterSystem/label\", \"After System\")}: ` +\n                    `${quoteStringWithManualEscape(value.manualPromptTemplate?.afterSystem)}\\n` +\n                    `${t(\"config:customInputs.llmPromptTemplate.manual.subfield.beforeUser/label\", \"Before User\")}: ` +\n                    `${quoteStringWithManualEscape(value.manualPromptTemplate?.beforeUser)}\\n` +\n                    `${t(\"config:customInputs.llmPromptTemplate.manual.subfield.afterUser/label\", \"After User\")}: ` +\n                    `${quoteStringWithManualEscape(value.manualPromptTemplate?.afterUser)}\\n` +\n                    `${t(\"config:customInputs.llmPromptTemplate.manual.subfield.beforeAssistant/label\", \"Before Assistant\")}: ` +\n                    `${quoteStringWithManualEscape(value.manualPromptTemplate?.beforeAssistant)}\\n` +\n                    `${t(\"config:customInputs.llmPromptTemplate.manual.subfield.afterAssistant/label\", \"After Assistant\")}: ` +\n                    `${quoteStringWithManualEscape(value.manualPromptTemplate?.afterAssistant)}`);\n            }\n            default: {\n                const exhaustiveCheck = value.type;\n                throw new Error(\"Unknown template type: \" + exhaustiveCheck);\n            }\n        }\n    },\n})\n    .valueType(\"llmReasoningParsing\", {\n    paramType: {},\n    schemaMaker: () => {\n        return llmReasoningParsingSchema;\n    },\n    effectiveEquals: (a, b) => {\n        return a.startString === b.startString && a.endString === b.endString;\n    },\n    stringify: value => {\n        return JSON.stringify(value, null, 2); // TODO: pretty print\n    },\n})\n    .valueType(\"llamaStructuredOutput\", {\n    paramType: {},\n    schemaMaker: () => {\n        return llmStructuredPredictionSettingSchema;\n    },\n    effectiveEquals: (a, b) => {\n        if (a.type === \"json\" && b.type === \"json\") {\n            return deepEquals(a, b);\n        }\n        else if (a.type === \"none\" && b.type === \"none\") {\n            return true;\n        }\n        else {\n            return false;\n        }\n    },\n    stringify: value => {\n        return JSON.stringify(value, null, 2); // TODO: pretty print\n    },\n})\n    .valueType(\"speculativeDecodingDraftModel\", {\n    paramType: {},\n    schemaMaker: () => {\n        // Empty string means no speculative decoding.\n        return z.string();\n    },\n    effectiveEquals: (a, b) => {\n        return a === b;\n    },\n    stringify: (value, _typeParam, { t }) => {\n        if (value === \"\") {\n            return t(\"config:customInputs.speculativeDecodingDraftModel.off\", \"OFF\");\n        }\n        return value;\n    },\n})\n    .valueType(\"toolUse\", {\n    paramType: {},\n    schemaMaker: () => {\n        return llmToolUseSettingSchema;\n    },\n    effectiveEquals: (a, b) => {\n        return deepEquals(a, b); // TODO: more performant comparison\n    },\n    stringify: value => {\n        return JSON.stringify(value, null, 2); // TODO: pretty print\n    },\n})\n    .valueType(\"toolNaming\", {\n    paramType: {},\n    schemaMaker: () => {\n        return toolNamingSchema;\n    },\n    effectiveEquals: (a, b) => {\n        return a === b;\n    },\n    stringify: value => {\n        return value;\n    },\n})\n    .valueType(\"llamaAccelerationOffloadRatio\", {\n    paramType: {\n        numLayers: z.number().optional(),\n    },\n    schemaMaker: () => {\n        return llmLlamaAccelerationOffloadRatioSchema;\n    },\n    effectiveEquals: (a, b) => {\n        const ratioA = a === \"max\" ? 1 : a === \"off\" ? 0 : a;\n        const ratioB = b === \"max\" ? 1 : b === \"off\" ? 0 : b;\n        return ratioA === ratioB;\n    },\n    stringify: (value, { numLayers }, { t }) => {\n        if (value === \"max\" || value === 1) {\n            const label = t(\"config:customInputs.llamaAccelerationOffloadRatio.max\", \"MAX\");\n            if (numLayers !== 0) {\n                return `${label} (${numLayers})`;\n            }\n            return label;\n        }\n        if (value === \"off\" || value === 0) {\n            return t(\"config:customInputs.llamaAccelerationOffloadRatio.off\", \"OFF\");\n        }\n        if (numLayers !== undefined) {\n            return String(Math.round(numLayers * value));\n        }\n        return (value * 100).toFixed(0) + \"%\";\n    },\n})\n    .valueType(\"llamaMirostatSampling\", {\n    paramType: {},\n    schemaMaker: () => {\n        return llmLlamaMirostatSamplingConfigSchema;\n    },\n    effectiveEquals: (a, b) => {\n        return deepEquals(a, b); // TODO: more performant comparison\n    },\n    stringify: value => {\n        return JSON.stringify(value, null, 2); // TODO: pretty print\n    },\n})\n    .valueType(\"llamaLogitBias\", {\n    paramType: {},\n    schemaMaker: () => {\n        return llmLlamaLogitBiasConfigSchema;\n    },\n    effectiveEquals: (a, b) => {\n        return deepEquals(a, b); // TODO: more performant comparison\n    },\n    stringify: value => {\n        return JSON.stringify(value, null, 2); // TODO: pretty print\n    },\n})\n    .valueType(\"llamaCacheQuantizationType\", {\n    paramType: {},\n    schemaMaker: () => {\n        return z.object({\n            checked: z.boolean(),\n            value: llmLlamaCacheQuantizationTypeSchema,\n        });\n    },\n    effectiveEquals: (a, b) => {\n        if (a.checked !== b.checked) {\n            return false;\n        }\n        if (!a.checked) {\n            return true;\n        }\n        return a.value === b.value;\n    },\n    stringify: (value, _typeParam, { t }) => {\n        if (!value.checked) {\n            return t(\"config:customInputs.llamaCacheQuantizationType.off\", \"OFF\");\n        }\n        return value.value;\n    },\n})\n    .valueType(\"mlxKvCacheQuantizationType\", {\n    paramType: {},\n    schemaMaker: () => {\n        return llmMlxKvCacheQuantizationSchema;\n    },\n    effectiveEquals: (a, b) => {\n        if (a.enabled !== b.enabled) {\n            return false;\n        }\n        if (!a.enabled) {\n            return true;\n        }\n        return (a.bits === b.bits && a.groupSize === b.groupSize && a.quantizedStart === b.quantizedStart);\n    },\n    stringify: value => {\n        return JSON.stringify(value, null, 2); // TODO: pretty print\n    },\n})\n    .valueType(\"retrievalChunkingMethod\", {\n    paramType: {},\n    schemaMaker: () => {\n        return retrievalChunkingMethodSchema;\n    },\n    effectiveEquals: (a, b) => {\n        return deepEquals(a, b); // TODO: more performant comparison\n    },\n    stringify: value => {\n        return JSON.stringify(value, null, 2); // TODO: pretty print\n    },\n})\n    .valueType(\"envVars\", {\n    paramType: {},\n    schemaMaker: () => {\n        return allowableEnvVarsSchema;\n    },\n    effectiveEquals: (a, b) => {\n        return deepEquals(a, b);\n    },\n    stringify: value => {\n        return JSON.stringify(value, null, 2);\n    },\n})\n    .valueType(\"gpuSplitConfig\", {\n    paramType: {},\n    schemaMaker: () => {\n        return gpuSplitConfigSchema;\n    },\n    effectiveEquals: (a, b) => {\n        return deepEquals(a, b);\n    },\n    stringify: value => {\n        return JSON.stringify(value, null, 2);\n    },\n})\n    .build();\n\n/**\n * This file is divided into 4 sections:\n *\n * 1. globalConfigSchematics: The pool for all config keys and their types\n * 2. Functionality scope definitions: i.e. what config keys are available in what functionality\n *    scope. An example functionality scope is llmPrediction.\n * 3. Utility types that can be used to work with types of schema.\n */\n// ---------------------------\n//  1. globalConfigSchematics\n// ---------------------------\nconst globalConfigSchematics = new KVConfigSchematicsBuilder(kvValueTypesLibrary)\n    .extension(\"ext.virtualModel.customField\")\n    .field(\"envVars\", \"envVars\", {}, {})\n    .scope(\"llm.prediction\", builder => builder\n    .field(\"temperature\", \"numeric\", {\n    min: 0,\n    step: 0.01,\n    slider: { min: 0, max: 1, step: 0.01 },\n    precision: 2,\n    shortHand: \"temp\",\n}, 0.8)\n    .field(\"contextOverflowPolicy\", \"contextOverflowPolicy\", {}, \"truncateMiddle\")\n    .field(\"maxPredictedTokens\", \"checkboxNumeric\", { min: 1, int: true }, { checked: false, value: 1000 })\n    .field(\"stopStrings\", \"stringArray\", {}, [])\n    .field(\"toolCallStopStrings\", \"stringArray\", {}, [])\n    .field(\"structured\", \"llamaStructuredOutput\", {}, { type: \"none\" })\n    .scope(\"speculativeDecoding\", builder => builder\n    .field(\"draftModel\", \"speculativeDecodingDraftModel\", {\n    modelCentric: true,\n}, \"\")\n    .field(\"minDraftLengthToConsider\", \"numeric\", {\n    modelCentric: true,\n    min: 0,\n    int: true,\n    slider: { min: 0, max: 10, step: 1 },\n}, 0)\n    .field(\"numReuseTokens\", \"numeric\", { modelCentric: true, min: 1, int: true }, 256)\n    .field(\"minContinueDraftingProbability\", \"numeric\", {\n    modelCentric: true,\n    min: 0,\n    max: 1,\n    step: 0.01,\n    precision: 2,\n    slider: { min: 0, max: 1, step: 0.01 },\n}, 0.75)\n    .field(\"maxTokensToDraft\", \"numeric\", { modelCentric: true, min: 1, int: true, slider: { min: 10, max: 30, step: 1 } }, 16)\n    .field(\"numDraftTokensExact\", \"numeric\", {\n    modelCentric: true,\n    min: 1,\n    int: true,\n    slider: { min: 1, max: 10, step: 1 },\n}, 2))\n    .field(\"tools\", \"toolUse\", {}, { type: \"none\" })\n    .field(\"toolNaming\", \"toolNaming\", {}, \"removeSpecial\")\n    .field(\"promptTemplate\", \"llmPromptTemplate\", { modelCentric: true }, {\n    type: \"manual\",\n    manualPromptTemplate: {\n        beforeSystem: \"Instruct: \",\n        afterSystem: \"\\n\",\n        beforeAssistant: \"AI: \",\n        afterAssistant: \"\\n\",\n        beforeUser: \"Human: \",\n        afterUser: \"\\n\",\n    },\n    stopStrings: [],\n})\n    .field(\"systemPrompt\", \"string\", { isParagraph: true }, \"\")\n    .field(\"seed\", \"checkboxNumeric\", { int: true, min: -1, uncheckedHint: \"config:seedUncheckedHint\" }, { checked: false, value: -1 })\n    .field(\"contextPrefill\", \"context\", {}, [])\n    .field(\"topKSampling\", \"numeric\", { min: -1, max: 500, int: true }, 40)\n    .field(\"repeatPenalty\", \"checkboxNumeric\", { min: -1, step: 0.01 }, { checked: true, value: 1.1 })\n    .field(\"minPSampling\", \"checkboxNumeric\", { min: 0, max: 1, step: 0.01, precision: 2, slider: { min: 0, max: 1, step: 0.01 } }, { checked: true, value: 0.05 })\n    .field(\"topPSampling\", \"checkboxNumeric\", { min: 0, max: 1, step: 0.01, precision: 2, slider: { min: 0, max: 1, step: 0.01 } }, { checked: true, value: 0.95 })\n    .field(\"logProbs\", \"checkboxNumeric\", { min: 0, max: 100, int: true }, { checked: false, value: 0 })\n    .scope(\"reasoning\", builder => builder.field(\"parsing\", \"llmReasoningParsing\", {}, {\n    enabled: true,\n    startString: \"<think>\",\n    endString: \"</think>\",\n}))\n    .scope(\"llama\", builder => builder\n    .field(\"cpuThreads\", \"numeric\", { min: 1, int: true }, 4)\n    .field(\"frequencyPenalty\", \"checkboxNumeric\", { precision: 2 }, { checked: false, value: 0.0 })\n    .field(\"xtcProbability\", \"checkboxNumeric\", { min: 0, max: 1, step: 0.01, precision: 2, slider: { min: 0, max: 1, step: 0.01 } }, { checked: false, value: 0.5 })\n    .field(\"xtcThreshold\", \"checkboxNumeric\", { min: 0, max: 1, step: 0.01, precision: 2, slider: { min: 0, max: 0.5, step: 0.01 } }, { checked: false, value: 0.1 })\n    .field(\"presencePenalty\", \"checkboxNumeric\", { precision: 2 }, { checked: false, value: 0.0 })\n    .field(\"mirostatSampling\", \"llamaMirostatSampling\", {}, {\n    // Disabled by default\n    version: 0,\n    learningRate: 0.1,\n    targetEntropy: 5,\n})\n    .field(\"tailFreeSampling\", \"checkboxNumeric\", { min: 0, max: 1, step: 0.01, precision: 2, slider: { min: 0, max: 1, step: 0.01 } }, { checked: false, value: 0.95 })\n    .field(\"locallyTypicalSampling\", \"checkboxNumeric\", { min: 0, max: 1, step: 0.01, precision: 2, slider: { min: 0, max: 1, step: 0.01 } }, { checked: false, value: 0.9 })\n    .field(\"logitBias\", \"llamaLogitBias\", {}, [])))\n    .scope(\"llm.load\", builder => builder\n    .field(\"contextLength\", \"contextLength\", {\n    machineDependent: true,\n}, 2048)\n    .field(\"numExperts\", \"numeric\", { min: 0, int: true }, 0)\n    .field(\"seed\", \"checkboxNumeric\", { int: true, min: -1, uncheckedHint: \"config:seedUncheckedHint\" }, { checked: false, value: -1 })\n    .field(\"offloadKVCacheToGpu\", \"boolean\", {}, true)\n    .field(\"numCpuExpertLayersRatio\", \"llamaAccelerationOffloadRatio\", { machineDependent: true, isExperimental: true, }, \"off\")\n    .scope(\"llama\", builder => builder\n    .scope(\"acceleration\", builder => builder.field(\"offloadRatio\", \"llamaAccelerationOffloadRatio\", { machineDependent: true }, \"max\"))\n    .field(\"cpuThreadPoolSize\", \"numeric\", { min: 1, machineDependent: true }, 4)\n    .field(\"evalBatchSize\", \"numeric\", { min: 1, int: true }, 512)\n    .field(\"flashAttention\", \"boolean\", { isExperimental: true, warning: \"config:flashAttentionWarning\" }, false)\n    .field(\"ropeFrequencyBase\", \"checkboxNumeric\", { min: 0, uncheckedHint: \"config:ropeFrequencyBaseUncheckedHint\" }, { checked: false, value: 0 })\n    .field(\"ropeFrequencyScale\", \"checkboxNumeric\", { min: 0, uncheckedHint: \"config:ropeFrequencyScaleUncheckedHint\" }, { checked: false, value: 0 })\n    .field(\"keepModelInMemory\", \"boolean\", {}, true)\n    .field(\"useFp16ForKVCache\", \"boolean\", {}, true)\n    .field(\"tryMmap\", \"boolean\", {}, true)\n    .field(\"kCacheQuantizationType\", \"llamaCacheQuantizationType\", { isExperimental: true }, { checked: false, value: \"f16\" })\n    .field(\"vCacheQuantizationType\", \"llamaCacheQuantizationType\", { isExperimental: true, warning: \"config:llamaKvCacheQuantizationWarning\" }, { checked: false, value: \"f16\" }))\n    .scope(\"mlx\", builder => builder.field(\"kvCacheQuantization\", \"mlxKvCacheQuantizationType\", { isExperimental: true }, { enabled: false, bits: 8, groupSize: 64, quantizedStart: 5000 })))\n    .scope(\"load\", builder => builder\n    .field(\"gpuSplitConfig\", \"gpuSplitConfig\", {}, defaultGPUSplitConfig)\n    .field(\"gpuStrictVramCap\", \"boolean\", {}, false))\n    .scope(\"embedding.load\", builder => builder\n    .field(\"contextLength\", \"contextLength\", { machineDependent: true }, 2048)\n    .field(\"seed\", \"checkboxNumeric\", { int: true, min: -1, uncheckedHint: \"config:seedUncheckedHint\" }, { checked: false, value: -1 })\n    .scope(\"llama\", builder => builder\n    .scope(\"acceleration\", builder => builder.field(\"offloadRatio\", \"llamaAccelerationOffloadRatio\", { machineDependent: true }, \"max\"))\n    .field(\"evalBatchSize\", \"numeric\", { min: 1, int: true }, 512)\n    .field(\"ropeFrequencyBase\", \"checkboxNumeric\", { min: 0, uncheckedHint: \"config:ropeFrequencyBaseUncheckedHint\" }, { checked: false, value: 0 })\n    .field(\"ropeFrequencyScale\", \"checkboxNumeric\", { min: 0, uncheckedHint: \"config:ropeFrequencyScaleUncheckedHint\" }, { checked: false, value: 0 })\n    .field(\"keepModelInMemory\", \"boolean\", {}, true)\n    .field(\"tryMmap\", \"boolean\", {}, true)))\n    .scope(\"retrieval\", builder => builder\n    .field(\"databaseFile\", \"string\", { machineDependent: true }, \"\")\n    .field(\"chunkingMethod\", \"retrievalChunkingMethod\", {}, {\n    type: \"recursive-v1\",\n    chunkSize: 512,\n    chunkOverlap: 100,\n})\n    .field(\"limit\", \"numeric\", { min: 1, int: true }, 5)\n    .field(\"embeddingModel\", \"modelIdentifier\", { domain: [\"embedding\"] }, \"\"))\n    .build();\n// ------------------------------------\n//  2. Functionality scope definitions\n// ------------------------------------\nconst llmPredictionConfigSchematics = globalConfigSchematics.scoped(\"llm.prediction\");\nconst llmSharedPredictionConfigSchematics = llmPredictionConfigSchematics.sliced(\"temperature\", \"maxPredictedTokens\", \"promptTemplate\", \"systemPrompt\", \"seed\", \"contextPrefill\", \"tools\", \"toolNaming\", \"reasoning.*\");\nllmSharedPredictionConfigSchematics.union(llmPredictionConfigSchematics.sliced(\"llama.*\", \"contextOverflowPolicy\", \"stopStrings\", \"toolCallStopStrings\", \"structured\", \"topKSampling\", \"repeatPenalty\", \"minPSampling\", \"topPSampling\", \"logProbs\", \"speculativeDecoding.draftModel\", \"speculativeDecoding.minContinueDraftingProbability\", \"speculativeDecoding.minDraftLengthToConsider\", \"speculativeDecoding.maxTokensToDraft\", \"speculativeDecoding.numReuseTokens\"));\nllmSharedPredictionConfigSchematics.union(llmPredictionConfigSchematics.sliced(\"mlx.*\", \"contextOverflowPolicy\", \"stopStrings\", \"toolCallStopStrings\", \"structured\", \"repeatPenalty\", \"minPSampling\", \"topPSampling\", \"topKSampling\", \"speculativeDecoding.draftModel\", \"speculativeDecoding.numDraftTokensExact\"));\nllmSharedPredictionConfigSchematics.union(llmPredictionConfigSchematics.sliced(\"transformers.*\"));\nllmSharedPredictionConfigSchematics.union(llmPredictionConfigSchematics.sliced(\"onnx.*\", \"repeatPenalty\", \"topPSampling\", \"topKSampling\"));\nconst llmLoadSchematics = globalConfigSchematics\n    .scoped(\"llm.load\")\n    .union(globalConfigSchematics.sliced(\"envVars\"));\nconst llmSharedLoadConfigSchematics = llmLoadSchematics.sliced(\"contextLength\", \"seed\", \"envVars\");\nconst llamaLoadConfigSchematics = globalConfigSchematics.sliced(\"llama.load.*\", \"load.*\");\nconst llmLlamaLoadConfigSchematics = llmSharedLoadConfigSchematics\n    .union(llmLoadSchematics.sliced(\"llama.*\", \"load.*\", \"offloadKVCacheToGpu\"))\n    .union(llamaLoadConfigSchematics);\nllmSharedLoadConfigSchematics.union(llmLoadSchematics.sliced(\"mlx.*\"));\nllmSharedLoadConfigSchematics.union(llmLoadSchematics.sliced(\"transformers.*\"));\nllmSharedLoadConfigSchematics.union(llmLoadSchematics.sliced(\"onnx.*\"));\nconst llmLlamaMoeAdditionalLoadConfigSchematics = llmLoadSchematics.sliced(\"numExperts\", \"numCpuExpertLayersRatio\");\nconst llmLlamaMoeLoadConfigSchematics = llmLlamaLoadConfigSchematics.union(llmLlamaMoeAdditionalLoadConfigSchematics);\nconst embeddingLoadSchematics = globalConfigSchematics\n    .scoped(\"embedding.load\")\n    .union(globalConfigSchematics.sliced(\"load.*\"));\nconst embeddingSharedLoadConfigSchematics = embeddingLoadSchematics.sliced(\"contextLength\", \"seed\");\nconst retrievalSchematics = globalConfigSchematics.scoped(\"retrieval\");\nconst embeddingLlamaLoadConfigSchematics = embeddingSharedLoadConfigSchematics\n    .union(embeddingLoadSchematics.sliced(\"llama.*\"))\n    .union(llamaLoadConfigSchematics);\nnew KVConfigSchematicsBuilder(kvValueTypesLibrary).build();\n\n/**\n * Convert a number that can be false to checkbox numeric value.\n *\n * @param maybeFalseNumber - The value to translate.\n * @param valueWhenUnchecked - The value to use when the checkbox is unchecked.\n */\nfunction maybeFalseNumberToCheckboxNumeric(maybeFalseNumber, valueWhenUnchecked) {\n    if (maybeFalseNumber === undefined) {\n        return undefined;\n    }\n    if (maybeFalseNumber === false) {\n        return { checked: false, value: valueWhenUnchecked };\n    }\n    return { checked: true, value: maybeFalseNumber };\n}\n\nfunction llmPredictionConfigToKVConfig(config) {\n    const top = llmPredictionConfigSchematics.buildPartialConfig({\n        \"temperature\": config.temperature,\n        \"contextOverflowPolicy\": config.contextOverflowPolicy,\n        \"maxPredictedTokens\": maybeFalseNumberToCheckboxNumeric(config.maxTokens, 1),\n        \"stopStrings\": config.stopStrings,\n        \"toolCallStopStrings\": config.toolCallStopStrings,\n        \"structured\": config.structured,\n        \"tools\": config.rawTools,\n        \"toolNaming\": config.toolNaming,\n        \"topKSampling\": config.topKSampling,\n        \"repeatPenalty\": maybeFalseNumberToCheckboxNumeric(config.repeatPenalty, 1.1),\n        \"minPSampling\": maybeFalseNumberToCheckboxNumeric(config.minPSampling, 0.05),\n        \"topPSampling\": maybeFalseNumberToCheckboxNumeric(config.topPSampling, 0.95),\n        \"llama.xtcProbability\": maybeFalseNumberToCheckboxNumeric(config.xtcProbability, 0),\n        \"llama.xtcThreshold\": maybeFalseNumberToCheckboxNumeric(config.xtcThreshold, 0),\n        \"logProbs\": maybeFalseNumberToCheckboxNumeric(config.logProbs, 0),\n        \"llama.cpuThreads\": config.cpuThreads,\n        \"promptTemplate\": config.promptTemplate,\n        \"speculativeDecoding.draftModel\": config.draftModel,\n        \"speculativeDecoding.numDraftTokensExact\": config.speculativeDecodingNumDraftTokensExact,\n        \"speculativeDecoding.minDraftLengthToConsider\": config.speculativeDecodingMinDraftLengthToConsider,\n        \"speculativeDecoding.minContinueDraftingProbability\": config.speculativeDecodingMinContinueDraftingProbability,\n        \"reasoning.parsing\": config.reasoningParsing,\n    });\n    if (config.raw !== undefined) {\n        return collapseKVStackRaw([config.raw, top]);\n    }\n    return top;\n}\n\n/**\n * @public\n */\nfunction createConfigSchematics() {\n    return new KVConfigSchematicsBuilder(kvValueTypesLibrary);\n}\n\nvar lib = {};\n\nvar helpers = {};\n\nvar hasRequiredHelpers;\n\nfunction requireHelpers () {\n\tif (hasRequiredHelpers) return helpers;\n\thasRequiredHelpers = 1;\n\n\tvar ValidationError = helpers.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n\t  if(Array.isArray(path)){\n\t    this.path = path;\n\t    this.property = path.reduce(function(sum, item){\n\t      return sum + makeSuffix(item);\n\t    }, 'instance');\n\t  }else if(path !== undefined){\n\t    this.property = path;\n\t  }\n\t  if (message) {\n\t    this.message = message;\n\t  }\n\t  if (schema) {\n\t    var id = schema.$id || schema.id;\n\t    this.schema = id || schema;\n\t  }\n\t  if (instance !== undefined) {\n\t    this.instance = instance;\n\t  }\n\t  this.name = name;\n\t  this.argument = argument;\n\t  this.stack = this.toString();\n\t};\n\n\tValidationError.prototype.toString = function toString() {\n\t  return this.property + ' ' + this.message;\n\t};\n\n\tvar ValidatorResult = helpers.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n\t  this.instance = instance;\n\t  this.schema = schema;\n\t  this.options = options;\n\t  this.path = ctx.path;\n\t  this.propertyPath = ctx.propertyPath;\n\t  this.errors = [];\n\t  this.throwError = options && options.throwError;\n\t  this.throwFirst = options && options.throwFirst;\n\t  this.throwAll = options && options.throwAll;\n\t  this.disableFormat = options && options.disableFormat === true;\n\t};\n\n\tValidatorResult.prototype.addError = function addError(detail) {\n\t  var err;\n\t  if (typeof detail == 'string') {\n\t    err = new ValidationError(detail, this.instance, this.schema, this.path);\n\t  } else {\n\t    if (!detail) throw new Error('Missing error detail');\n\t    if (!detail.message) throw new Error('Missing error message');\n\t    if (!detail.name) throw new Error('Missing validator type');\n\t    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n\t  }\n\n\t  this.errors.push(err);\n\t  if (this.throwFirst) {\n\t    throw new ValidatorResultError(this);\n\t  }else if(this.throwError){\n\t    throw err;\n\t  }\n\t  return err;\n\t};\n\n\tValidatorResult.prototype.importErrors = function importErrors(res) {\n\t  if (typeof res == 'string' || (res && res.validatorType)) {\n\t    this.addError(res);\n\t  } else if (res && res.errors) {\n\t    this.errors = this.errors.concat(res.errors);\n\t  }\n\t};\n\n\tfunction stringizer (v,i){\n\t  return i+': '+v.toString()+'\\n';\n\t}\n\tValidatorResult.prototype.toString = function toString(res) {\n\t  return this.errors.map(stringizer).join('');\n\t};\n\n\tObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n\t  return !this.errors.length;\n\t} });\n\n\thelpers.ValidatorResultError = ValidatorResultError;\n\tfunction ValidatorResultError(result) {\n\t  if(typeof Error.captureStackTrace === 'function'){\n\t    Error.captureStackTrace(this, ValidatorResultError);\n\t  }\n\t  this.instance = result.instance;\n\t  this.schema = result.schema;\n\t  this.options = result.options;\n\t  this.errors = result.errors;\n\t}\n\tValidatorResultError.prototype = new Error();\n\tValidatorResultError.prototype.constructor = ValidatorResultError;\n\tValidatorResultError.prototype.name = \"Validation Error\";\n\n\t/**\n\t * Describes a problem with a Schema which prevents validation of an instance\n\t * @name SchemaError\n\t * @constructor\n\t */\n\tvar SchemaError = helpers.SchemaError = function SchemaError (msg, schema) {\n\t  this.message = msg;\n\t  this.schema = schema;\n\t  Error.call(this, msg);\n\t  if(typeof Error.captureStackTrace === 'function'){\n\t    Error.captureStackTrace(this, SchemaError);\n\t  }\n\t};\n\tSchemaError.prototype = Object.create(Error.prototype,\n\t  {\n\t    constructor: {value: SchemaError, enumerable: false},\n\t    name: {value: 'SchemaError', enumerable: false},\n\t  });\n\n\tvar SchemaContext = helpers.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n\t  this.schema = schema;\n\t  this.options = options;\n\t  if(Array.isArray(path)){\n\t    this.path = path;\n\t    this.propertyPath = path.reduce(function(sum, item){\n\t      return sum + makeSuffix(item);\n\t    }, 'instance');\n\t  }else {\n\t    this.propertyPath = path;\n\t  }\n\t  this.base = base;\n\t  this.schemas = schemas;\n\t};\n\n\tSchemaContext.prototype.resolve = function resolve (target) {\n\t  return (() => resolveUrl(this.base,target))();\n\t};\n\n\tSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n\t  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n\t  var id = schema.$id || schema.id;\n\t  let base = (() => resolveUrl(this.base,id||''))();\n\t  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n\t  if(id && !ctx.schemas[base]){\n\t    ctx.schemas[base] = schema;\n\t  }\n\t  return ctx;\n\t};\n\n\tvar FORMAT_REGEXPS = helpers.FORMAT_REGEXPS = {\n\t  // 7.3.1. Dates, Times, and Duration\n\t  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n\t  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n\t  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n\t  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n\t  // 7.3.2. Email Addresses\n\t  // TODO: fix the email production\n\t  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n\t  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n\t  // 7.3.3. Hostnames\n\n\t  // 7.3.4. IP Addresses\n\t  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n\t  // FIXME whitespace is invalid\n\t  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n\t  // 7.3.5. Resource Identifiers\n\t  // TODO: A more accurate regular expression for \"uri\" goes:\n\t  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n\t  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n\t  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n\t  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n\t  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n\t  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n\t  // 7.3.6. uri-template\n\t  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n\t  // 7.3.7. JSON Pointers\n\t  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n\t  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n\t  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n\t  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\t  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n\t  'utc-millisec': function (input) {\n\t    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n\t  },\n\n\t  // 7.3.8. regex\n\t  'regex': function (input) {\n\t    var result = true;\n\t    try {\n\t      new RegExp(input);\n\t    } catch (e) {\n\t      result = false;\n\t    }\n\t    return result;\n\t  },\n\n\t  // Other definitions\n\t  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n\t  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n\t  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n\t  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n\t  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n\t  'alpha': /^[a-zA-Z]+$/,\n\t  'alphanumeric': /^[a-zA-Z0-9]+$/,\n\t};\n\n\tFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\n\tFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\n\tFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\n\thelpers.isFormat = function isFormat (input, format, validator) {\n\t  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n\t    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n\t      return FORMAT_REGEXPS[format].test(input);\n\t    }\n\t    if (typeof FORMAT_REGEXPS[format] === 'function') {\n\t      return FORMAT_REGEXPS[format](input);\n\t    }\n\t  } else if (validator && validator.customFormats &&\n\t      typeof validator.customFormats[format] === 'function') {\n\t    return validator.customFormats[format](input);\n\t  }\n\t  return true;\n\t};\n\n\tvar makeSuffix = helpers.makeSuffix = function makeSuffix (key) {\n\t  key = key.toString();\n\t  // This function could be capable of outputting valid a ECMAScript string, but the\n\t  // resulting code for testing which form to use would be tens of thousands of characters long\n\t  // That means this will use the name form for some illegal forms\n\t  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n\t    return '.' + key;\n\t  }\n\t  if (key.match(/^\\d+$/)) {\n\t    return '[' + key + ']';\n\t  }\n\t  return '[' + JSON.stringify(key) + ']';\n\t};\n\n\thelpers.deepCompareStrict = function deepCompareStrict (a, b) {\n\t  if (typeof a !== typeof b) {\n\t    return false;\n\t  }\n\t  if (Array.isArray(a)) {\n\t    if (!Array.isArray(b)) {\n\t      return false;\n\t    }\n\t    if (a.length !== b.length) {\n\t      return false;\n\t    }\n\t    return a.every(function (v, i) {\n\t      return deepCompareStrict(a[i], b[i]);\n\t    });\n\t  }\n\t  if (typeof a === 'object') {\n\t    if (!a || !b) {\n\t      return a === b;\n\t    }\n\t    var aKeys = Object.keys(a);\n\t    var bKeys = Object.keys(b);\n\t    if (aKeys.length !== bKeys.length) {\n\t      return false;\n\t    }\n\t    return aKeys.every(function (v) {\n\t      return deepCompareStrict(a[v], b[v]);\n\t    });\n\t  }\n\t  return a === b;\n\t};\n\n\tfunction deepMerger (target, dst, e, i) {\n\t  if (typeof e === 'object') {\n\t    dst[i] = deepMerge(target[i], e);\n\t  } else {\n\t    if (target.indexOf(e) === -1) {\n\t      dst.push(e);\n\t    }\n\t  }\n\t}\n\n\tfunction copyist (src, dst, key) {\n\t  dst[key] = src[key];\n\t}\n\n\tfunction copyistWithDeepMerge (target, src, dst, key) {\n\t  if (typeof src[key] !== 'object' || !src[key]) {\n\t    dst[key] = src[key];\n\t  }\n\t  else {\n\t    if (!target[key]) {\n\t      dst[key] = src[key];\n\t    } else {\n\t      dst[key] = deepMerge(target[key], src[key]);\n\t    }\n\t  }\n\t}\n\n\tfunction deepMerge (target, src) {\n\t  var array = Array.isArray(src);\n\t  var dst = array && [] || {};\n\n\t  if (array) {\n\t    target = target || [];\n\t    dst = dst.concat(target);\n\t    src.forEach(deepMerger.bind(null, target, dst));\n\t  } else {\n\t    if (target && typeof target === 'object') {\n\t      Object.keys(target).forEach(copyist.bind(null, target, dst));\n\t    }\n\t    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n\t  }\n\n\t  return dst;\n\t}\n\n\thelpers.deepMerge = deepMerge;\n\n\t/**\n\t * Validates instance against the provided schema\n\t * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n\t * @param o\n\t * @param s The path to walk o along\n\t * @return any\n\t */\n\thelpers.objectGetPath = function objectGetPath(o, s) {\n\t  var parts = s.split('/').slice(1);\n\t  var k;\n\t  while (typeof (k=parts.shift()) == 'string') {\n\t    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n\t    if (!(n in o)) return;\n\t    o = o[n];\n\t  }\n\t  return o;\n\t};\n\n\tfunction pathEncoder (v) {\n\t  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n\t}\n\t/**\n\t * Accept an Array of property names and return a JSON Pointer URI fragment\n\t * @param Array a\n\t * @return {String}\n\t */\n\thelpers.encodePath = function encodePointer(a){\n\t  // ~ must be encoded explicitly because hacks\n\t  // the slash is encoded by encodeURIComponent\n\t  return a.map(pathEncoder).join('');\n\t};\n\n\n\t/**\n\t * Calculate the number of decimal places a number uses\n\t * We need this to get correct results out of multipleOf and divisibleBy\n\t * when either figure is has decimal places, due to IEEE-754 float issues.\n\t * @param number\n\t * @returns {number}\n\t */\n\thelpers.getDecimalPlaces = function getDecimalPlaces(number) {\n\n\t  var decimalPlaces = 0;\n\t  if (isNaN(number)) return decimalPlaces;\n\n\t  if (typeof number !== 'number') {\n\t    number = Number(number);\n\t  }\n\n\t  var parts = number.toString().split('e');\n\t  if (parts.length === 2) {\n\t    if (parts[1][0] !== '-') {\n\t      return decimalPlaces;\n\t    } else {\n\t      decimalPlaces = Number(parts[1].slice(1));\n\t    }\n\t  }\n\n\t  var decimalParts = parts[0].split('.');\n\t  if (decimalParts.length === 2) {\n\t    decimalPlaces += decimalParts[1].length;\n\t  }\n\n\t  return decimalPlaces;\n\t};\n\n\thelpers.isSchema = function isSchema(val){\n\t  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n\t};\n\n\t/**\n\t * Resolve target URL from a base and relative URL.\n\t * Similar to Node's URL Lib's legacy resolve function.\n\t * Code from example in deprecation note in said library.\n\t * @param string\n\t * @param string\n\t * @returns {string}\n\t */\n\tvar resolveUrl = helpers.resolveUrl = function resolveUrl(from, to) {\n\t  const resolvedUrl = new URL(to, new URL(from, 'resolve://'));\n\t  if (resolvedUrl.protocol === 'resolve:') {\n\t    const { pathname, search, hash } = resolvedUrl;\n\t    return pathname + search + hash;\n\t  }\n\t  return resolvedUrl.toString();\n\t};\n\treturn helpers;\n}\n\nvar attribute_1;\nvar hasRequiredAttribute;\n\nfunction requireAttribute () {\n\tif (hasRequiredAttribute) return attribute_1;\n\thasRequiredAttribute = 1;\n\n\tvar helpers = requireHelpers();\n\n\t/** @type ValidatorResult */\n\tvar ValidatorResult = helpers.ValidatorResult;\n\t/** @type SchemaError */\n\tvar SchemaError = helpers.SchemaError;\n\n\tvar attribute = {};\n\n\tattribute.ignoreProperties = {\n\t  // informative properties\n\t  'id': true,\n\t  'default': true,\n\t  'description': true,\n\t  'title': true,\n\t  // arguments to other properties\n\t  'additionalItems': true,\n\t  'then': true,\n\t  'else': true,\n\t  // special-handled properties\n\t  '$schema': true,\n\t  '$ref': true,\n\t  'extends': true,\n\t};\n\n\t/**\n\t * @name validators\n\t */\n\tvar validators = attribute.validators = {};\n\n\t/**\n\t * Validates whether the instance if of a certain type\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {ValidatorResult|null}\n\t */\n\tvalidators.type = function validateType (instance, schema, options, ctx) {\n\t  // Ignore undefined instances\n\t  if (instance === undefined) {\n\t    return null;\n\t  }\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n\t  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n\t    var list = types.map(function (v) {\n\t      if(!v) return;\n\t      var id = v.$id || v.id;\n\t      return id ? ('<' + id + '>') : (v+'');\n\t    });\n\t    result.addError({\n\t      name: 'type',\n\t      argument: list,\n\t      message: \"is not of a type(s) \" + list,\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\tfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n\t  var throwError = options.throwError;\n\t  var throwAll = options.throwAll;\n\t  options.throwError = false;\n\t  options.throwAll = false;\n\t  var res = this.validateSchema(instance, schema, options, ctx);\n\t  options.throwError = throwError;\n\t  options.throwAll = throwAll;\n\n\t  if (!res.valid && callback instanceof Function) {\n\t    callback(res);\n\t  }\n\t  return res.valid;\n\t}\n\n\t/**\n\t * Validates whether the instance matches some of the given schemas\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {ValidatorResult|null}\n\t */\n\tvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n\t  // Ignore undefined instances\n\t  if (instance === undefined) {\n\t    return null;\n\t  }\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var inner = new ValidatorResult(instance, schema, options, ctx);\n\t  if (!Array.isArray(schema.anyOf)){\n\t    throw new SchemaError(\"anyOf must be an array\");\n\t  }\n\t  if (!schema.anyOf.some(\n\t    testSchemaNoThrow.bind(\n\t      this, instance, options, ctx, function(res){inner.importErrors(res);}\n\t    ))) {\n\t    var list = schema.anyOf.map(function (v, i) {\n\t      var id = v.$id || v.id;\n\t      if(id) return '<' + id + '>';\n\t      return (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n\t    });\n\t    if (options.nestedErrors) {\n\t      result.importErrors(inner);\n\t    }\n\t    result.addError({\n\t      name: 'anyOf',\n\t      argument: list,\n\t      message: \"is not any of \" + list.join(','),\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance matches every given schema\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {String|null}\n\t */\n\tvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n\t  // Ignore undefined instances\n\t  if (instance === undefined) {\n\t    return null;\n\t  }\n\t  if (!Array.isArray(schema.allOf)){\n\t    throw new SchemaError(\"allOf must be an array\");\n\t  }\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var self = this;\n\t  schema.allOf.forEach(function(v, i){\n\t    var valid = self.validateSchema(instance, v, options, ctx);\n\t    if(!valid.valid){\n\t      var id = v.$id || v.id;\n\t      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n\t      result.addError({\n\t        name: 'allOf',\n\t        argument: { id: msg, length: valid.errors.length, valid: valid },\n\t        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n\t      });\n\t      result.importErrors(valid);\n\t    }\n\t  });\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance matches exactly one of the given schemas\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {String|null}\n\t */\n\tvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n\t  // Ignore undefined instances\n\t  if (instance === undefined) {\n\t    return null;\n\t  }\n\t  if (!Array.isArray(schema.oneOf)){\n\t    throw new SchemaError(\"oneOf must be an array\");\n\t  }\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var inner = new ValidatorResult(instance, schema, options, ctx);\n\t  var count = schema.oneOf.filter(\n\t    testSchemaNoThrow.bind(\n\t      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n\t    ) ).length;\n\t  var list = schema.oneOf.map(function (v, i) {\n\t    var id = v.$id || v.id;\n\t    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n\t  });\n\t  if (count!==1) {\n\t    if (options.nestedErrors) {\n\t      result.importErrors(inner);\n\t    }\n\t    result.addError({\n\t      name: 'oneOf',\n\t      argument: list,\n\t      message: \"is not exactly one from \" + list.join(','),\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {String|null}\n\t */\n\tvalidators.if = function validateIf (instance, schema, options, ctx) {\n\t  // Ignore undefined instances\n\t  if (instance === undefined) return null;\n\t  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n\t  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var res;\n\t  if(ifValid){\n\t    if (schema.then === undefined) return;\n\t    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n\t    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n\t    result.importErrors(res);\n\t  }else {\n\t    if (schema.else === undefined) return;\n\t    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n\t    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n\t    result.importErrors(res);\n\t  }\n\t  return result;\n\t};\n\n\tfunction getEnumerableProperty(object, key){\n\t  // Determine if `key` shows up in `for(var key in object)`\n\t  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n\t  if(Object.hasOwnProperty.call(object, key)) return object[key];\n\t  // Test `key in object` as an optimization; false means it won't\n\t  if(!(key in object)) return;\n\t  while( (object = Object.getPrototypeOf(object)) ){\n\t    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n\t  }\n\t}\n\n\t/**\n\t * Validates propertyNames\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {String|null|ValidatorResult}\n\t */\n\tvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n\t  if(!this.types.object(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n\t  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n\t  for (var property in instance) {\n\t    if(getEnumerableProperty(instance, property) !== undefined){\n\t      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n\t      result.importErrors(res);\n\t    }\n\t  }\n\n\t  return result;\n\t};\n\n\t/**\n\t * Validates properties\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {String|null|ValidatorResult}\n\t */\n\tvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n\t  if(!this.types.object(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var properties = schema.properties || {};\n\t  for (var property in properties) {\n\t    var subschema = properties[property];\n\t    if(subschema===undefined){\n\t      continue;\n\t    }else if(subschema===null){\n\t      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n\t    }\n\t    if (typeof options.preValidateProperty == 'function') {\n\t      options.preValidateProperty(instance, property, subschema, options, ctx);\n\t    }\n\t    var prop = getEnumerableProperty(instance, property);\n\t    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n\t    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n\t    result.importErrors(res);\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Test a specific property within in instance against the additionalProperties schema attribute\n\t * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n\t * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n\t * @private\n\t * @return {boolean}\n\t */\n\tfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n\t  if(!this.types.object(instance)) return;\n\t  if (schema.properties && schema.properties[property] !== undefined) {\n\t    return;\n\t  }\n\t  if (schema.additionalProperties === false) {\n\t    result.addError({\n\t      name: 'additionalProperties',\n\t      argument: property,\n\t      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n\t    });\n\t  } else {\n\t    var additionalProperties = schema.additionalProperties || {};\n\n\t    if (typeof options.preValidateProperty == 'function') {\n\t      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n\t    }\n\n\t    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n\t    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n\t    result.importErrors(res);\n\t  }\n\t}\n\n\t/**\n\t * Validates patternProperties\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {String|null|ValidatorResult}\n\t */\n\tvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n\t  if(!this.types.object(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var patternProperties = schema.patternProperties || {};\n\n\t  for (var property in instance) {\n\t    var test = true;\n\t    for (var pattern in patternProperties) {\n\t      var subschema = patternProperties[pattern];\n\t      if(subschema===undefined){\n\t        continue;\n\t      }else if(subschema===null){\n\t        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n\t      }\n\t      try {\n\t        var regexp = new RegExp(pattern, 'u');\n\t      } catch(_e) {\n\t        // In the event the stricter handling causes an error, fall back on the forgiving handling\n\t        // DEPRECATED\n\t        regexp = new RegExp(pattern);\n\t      }\n\t      if (!regexp.test(property)) {\n\t        continue;\n\t      }\n\t      test = false;\n\n\t      if (typeof options.preValidateProperty == 'function') {\n\t        options.preValidateProperty(instance, property, subschema, options, ctx);\n\t      }\n\n\t      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n\t      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n\t      result.importErrors(res);\n\t    }\n\t    if (test) {\n\t      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n\t    }\n\t  }\n\n\t  return result;\n\t};\n\n\t/**\n\t * Validates additionalProperties\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {String|null|ValidatorResult}\n\t */\n\tvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n\t  if(!this.types.object(instance)) return;\n\t  // if patternProperties is defined then we'll test when that one is called instead\n\t  if (schema.patternProperties) {\n\t    return null;\n\t  }\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  for (var property in instance) {\n\t    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n\t  if (!this.types.object(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var keys = Object.keys(instance);\n\t  if (!(keys.length >= schema.minProperties)) {\n\t    result.addError({\n\t      name: 'minProperties',\n\t      argument: schema.minProperties,\n\t      message: \"does not meet minimum property length of \" + schema.minProperties,\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n\t  if (!this.types.object(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var keys = Object.keys(instance);\n\t  if (!(keys.length <= schema.maxProperties)) {\n\t    result.addError({\n\t      name: 'maxProperties',\n\t      argument: schema.maxProperties,\n\t      message: \"does not meet maximum property length of \" + schema.maxProperties,\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates items when instance is an array\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {String|null|ValidatorResult}\n\t */\n\tvalidators.items = function validateItems (instance, schema, options, ctx) {\n\t  var self = this;\n\t  if (!this.types.array(instance)) return;\n\t  if (schema.items===undefined) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  instance.every(function (value, i) {\n\t    if(Array.isArray(schema.items)){\n\t      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n\t    }else {\n\t      var items = schema.items;\n\t    }\n\t    if (items === undefined) {\n\t      return true;\n\t    }\n\t    if (items === false) {\n\t      result.addError({\n\t        name: 'items',\n\t        message: \"additionalItems not permitted\",\n\t      });\n\t      return false;\n\t    }\n\t    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n\t    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n\t    result.importErrors(res);\n\t    return true;\n\t  });\n\t  return result;\n\t};\n\n\t/**\n\t * Validates the \"contains\" keyword\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {String|null|ValidatorResult}\n\t */\n\tvalidators.contains = function validateContains (instance, schema, options, ctx) {\n\t  var self = this;\n\t  if (!this.types.array(instance)) return;\n\t  if (schema.contains===undefined) return;\n\t  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var count = instance.some(function (value, i) {\n\t    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n\t    return res.errors.length===0;\n\t  });\n\t  if(count===false){\n\t    result.addError({\n\t      name: 'contains',\n\t      argument: schema.contains,\n\t      message: \"must contain an item matching given schema\",\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n\t  if (!this.types.number(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n\t    if(!(instance > schema.minimum)){\n\t      result.addError({\n\t        name: 'minimum',\n\t        argument: schema.minimum,\n\t        message: \"must be greater than \" + schema.minimum,\n\t      });\n\t    }\n\t  } else {\n\t    if(!(instance >= schema.minimum)){\n\t      result.addError({\n\t        name: 'minimum',\n\t        argument: schema.minimum,\n\t        message: \"must be greater than or equal to \" + schema.minimum,\n\t      });\n\t    }\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n\t  if (!this.types.number(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n\t    if(!(instance < schema.maximum)){\n\t      result.addError({\n\t        name: 'maximum',\n\t        argument: schema.maximum,\n\t        message: \"must be less than \" + schema.maximum,\n\t      });\n\t    }\n\t  } else {\n\t    if(!(instance <= schema.maximum)){\n\t      result.addError({\n\t        name: 'maximum',\n\t        argument: schema.maximum,\n\t        message: \"must be less than or equal to \" + schema.maximum,\n\t      });\n\t    }\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n\t  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n\t  if(typeof schema.exclusiveMinimum === 'boolean') return;\n\t  if (!this.types.number(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var valid = instance > schema.exclusiveMinimum;\n\t  if (!valid) {\n\t    result.addError({\n\t      name: 'exclusiveMinimum',\n\t      argument: schema.exclusiveMinimum,\n\t      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n\t  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n\t  if(typeof schema.exclusiveMaximum === 'boolean') return;\n\t  if (!this.types.number(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var valid = instance < schema.exclusiveMaximum;\n\t  if (!valid) {\n\t    result.addError({\n\t      name: 'exclusiveMaximum',\n\t      argument: schema.exclusiveMaximum,\n\t      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n\t * @param instance\n\t * @param schema\n\t * @param validationType\n\t * @param errorMessage\n\t * @returns {String|null}\n\t */\n\tvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n\t  if (!this.types.number(instance)) return;\n\n\t  var validationArgument = schema[validationType];\n\t  if (validationArgument == 0) {\n\t    throw new SchemaError(validationType + \" cannot be zero\");\n\t  }\n\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\n\t  var instanceDecimals = helpers.getDecimalPlaces(instance);\n\t  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n\t  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n\t  var multiplier = Math.pow(10, maxDecimals);\n\n\t  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n\t    result.addError({\n\t      name: validationType,\n\t      argument:  validationArgument,\n\t      message: errorMessage + JSON.stringify(validationArgument),\n\t    });\n\t  }\n\n\t  return result;\n\t};\n\n\t/**\n\t * Validates divisibleBy when the type of the instance value is a number.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n\t  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n\t};\n\n\t/**\n\t * Validates multipleOf when the type of the instance value is a number.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n\t  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n\t};\n\n\t/**\n\t * Validates whether the instance value is present.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.required = function validateRequired (instance, schema, options, ctx) {\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  if (instance === undefined && schema.required === true) {\n\t    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n\t    result.addError({\n\t      name: 'required',\n\t      message: \"is required\",\n\t    });\n\t  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n\t    schema.required.forEach(function(n){\n\t      if(getEnumerableProperty(instance, n)===undefined){\n\t        result.addError({\n\t          name: 'required',\n\t          argument: n,\n\t          message: \"requires property \" + JSON.stringify(n),\n\t        });\n\t      }\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance value matches the regular expression, when the instance value is a string.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n\t  if (!this.types.string(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var pattern = schema.pattern;\n\t  try {\n\t    var regexp = new RegExp(pattern, 'u');\n\t  } catch(_e) {\n\t    // In the event the stricter handling causes an error, fall back on the forgiving handling\n\t    // DEPRECATED\n\t    regexp = new RegExp(pattern);\n\t  }\n\t  if (!instance.match(regexp)) {\n\t    result.addError({\n\t      name: 'pattern',\n\t      argument: schema.pattern,\n\t      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance value is of a certain defined format or a custom\n\t * format.\n\t * The following formats are supported for string types:\n\t *   - date-time\n\t *   - date\n\t *   - time\n\t *   - ip-address\n\t *   - ipv6\n\t *   - uri\n\t *   - color\n\t *   - host-name\n\t *   - alpha\n\t *   - alpha-numeric\n\t *   - utc-millisec\n\t * @param instance\n\t * @param schema\n\t * @param [options]\n\t * @param [ctx]\n\t * @return {String|null}\n\t */\n\tvalidators.format = function validateFormat (instance, schema, options, ctx) {\n\t  if (instance===undefined) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n\t    result.addError({\n\t      name: 'format',\n\t      argument: schema.format,\n\t      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n\t  if (!this.types.string(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n\t  var length = instance.length - (hsp ? hsp.length : 0);\n\t  if (!(length >= schema.minLength)) {\n\t    result.addError({\n\t      name: 'minLength',\n\t      argument: schema.minLength,\n\t      message: \"does not meet minimum length of \" + schema.minLength,\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n\t  if (!this.types.string(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n\t  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n\t  var length = instance.length - (hsp ? hsp.length : 0);\n\t  if (!(length <= schema.maxLength)) {\n\t    result.addError({\n\t      name: 'maxLength',\n\t      argument: schema.maxLength,\n\t      message: \"does not meet maximum length of \" + schema.maxLength,\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n\t  if (!this.types.array(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  if (!(instance.length >= schema.minItems)) {\n\t    result.addError({\n\t      name: 'minItems',\n\t      argument: schema.minItems,\n\t      message: \"does not meet minimum length of \" + schema.minItems,\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n\t * @param instance\n\t * @param schema\n\t * @return {String|null}\n\t */\n\tvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n\t  if (!this.types.array(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  if (!(instance.length <= schema.maxItems)) {\n\t    result.addError({\n\t      name: 'maxItems',\n\t      argument: schema.maxItems,\n\t      message: \"does not meet maximum length of \" + schema.maxItems,\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Deep compares arrays for duplicates\n\t * @param v\n\t * @param i\n\t * @param a\n\t * @private\n\t * @return {boolean}\n\t */\n\tfunction testArrays (v, i, a) {\n\t  var j, len = a.length;\n\t  for (j = i + 1, len; j < len; j++) {\n\t    if (helpers.deepCompareStrict(v, a[j])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\n\t/**\n\t * Validates whether there are no duplicates, when the instance is an Array.\n\t * @param instance\n\t * @return {String|null}\n\t */\n\tvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n\t  if (schema.uniqueItems!==true) return;\n\t  if (!this.types.array(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  if (!instance.every(testArrays)) {\n\t    result.addError({\n\t      name: 'uniqueItems',\n\t      message: \"contains duplicate item\",\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validate for the presence of dependency properties, if the instance is an object.\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {null|ValidatorResult}\n\t */\n\tvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n\t  if (!this.types.object(instance)) return;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  for (var property in schema.dependencies) {\n\t    if (instance[property] === undefined) {\n\t      continue;\n\t    }\n\t    var dep = schema.dependencies[property];\n\t    var childContext = ctx.makeChild(dep, property);\n\t    if (typeof dep == 'string') {\n\t      dep = [dep];\n\t    }\n\t    if (Array.isArray(dep)) {\n\t      dep.forEach(function (prop) {\n\t        if (instance[prop] === undefined) {\n\t          result.addError({\n\t            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n\t            // Can we make these the same? Or should we create different error types?\n\t            name: 'dependencies',\n\t            argument: childContext.propertyPath,\n\t            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      var res = this.validateSchema(instance, dep, options, childContext);\n\t      if(result.instance !== res.instance) result.instance = res.instance;\n\t      if (res && res.errors.length) {\n\t        result.addError({\n\t          name: 'dependencies',\n\t          argument: childContext.propertyPath,\n\t          message: \"does not meet dependency required by \" + childContext.propertyPath,\n\t        });\n\t        result.importErrors(res);\n\t      }\n\t    }\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance value is one of the enumerated values.\n\t *\n\t * @param instance\n\t * @param schema\n\t * @return {ValidatorResult|null}\n\t */\n\tvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n\t  if (instance === undefined) {\n\t    return null;\n\t  }\n\t  if (!Array.isArray(schema['enum'])) {\n\t    throw new SchemaError(\"enum expects an array\", schema);\n\t  }\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n\t    result.addError({\n\t      name: 'enum',\n\t      argument: schema['enum'],\n\t      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance exactly matches a given value\n\t *\n\t * @param instance\n\t * @param schema\n\t * @return {ValidatorResult|null}\n\t */\n\tvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n\t  if (instance === undefined) {\n\t    return null;\n\t  }\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n\t    result.addError({\n\t      name: 'const',\n\t      argument: schema['const'],\n\t      message: \"does not exactly match expected constant: \" + schema['const'],\n\t    });\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t * Validates whether the instance if of a prohibited type.\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @return {null|ValidatorResult}\n\t */\n\tvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n\t  var self = this;\n\t  if(instance===undefined) return null;\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\t  var notTypes = schema.not || schema.disallow;\n\t  if(!notTypes) return null;\n\t  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n\t  notTypes.forEach(function (type) {\n\t    if (self.testType(instance, schema, options, ctx, type)) {\n\t      var id = type && (type.$id || type.id);\n\t      var schemaId = id || type;\n\t      result.addError({\n\t        name: 'not',\n\t        argument: schemaId,\n\t        message: \"is of prohibited type \" + schemaId,\n\t      });\n\t    }\n\t  });\n\t  return result;\n\t};\n\n\tattribute_1 = attribute;\n\treturn attribute_1;\n}\n\nvar scan = {};\n\nvar hasRequiredScan;\n\nfunction requireScan () {\n\tif (hasRequiredScan) return scan;\n\thasRequiredScan = 1;\n\n\tvar helpers = requireHelpers();\n\n\tscan.SchemaScanResult = SchemaScanResult;\n\tfunction SchemaScanResult(found, ref){\n\t  this.id = found;\n\t  this.ref = ref;\n\t}\n\n\t/**\n\t * Adds a schema with a certain urn to the Validator instance.\n\t * @param string uri\n\t * @param object schema\n\t * @return {Object}\n\t */\n\tscan.scan = function scan(base, schema){\n\t  function scanSchema(baseuri, schema){\n\t    if(!schema || typeof schema!='object') return;\n\t    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n\t    if(schema.$ref){\n\t      let resolvedUri = helpers.resolveUrl(baseuri,schema.$ref);\n\t      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n\t      return;\n\t    }\n\t    var id = schema.$id || schema.id;\n\t    let resolvedBase = helpers.resolveUrl(baseuri,id);\n\t    var ourBase = id ? resolvedBase : baseuri;\n\t    if (ourBase) {\n\t      // If there's no fragment, append an empty one\n\t      if(ourBase.indexOf('#')<0) ourBase += '#';\n\t      if(found[ourBase]){\n\t        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n\t          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n\t        }\n\t        return found[ourBase];\n\t      }\n\t      found[ourBase] = schema;\n\t      // strip trailing fragment\n\t      if(ourBase[ourBase.length-1]=='#'){\n\t        found[ourBase.substring(0, ourBase.length-1)] = schema;\n\t      }\n\t    }\n\t    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n\t    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n\t    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n\t    scanObject(ourBase+'/properties', schema.properties);\n\t    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n\t    scanObject(ourBase+'/definitions', schema.definitions);\n\t    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n\t    scanObject(ourBase+'/dependencies', schema.dependencies);\n\t    scanArray(ourBase+'/disallow', schema.disallow);\n\t    scanArray(ourBase+'/allOf', schema.allOf);\n\t    scanArray(ourBase+'/anyOf', schema.anyOf);\n\t    scanArray(ourBase+'/oneOf', schema.oneOf);\n\t    scanSchema(ourBase+'/not', schema.not);\n\t  }\n\t  function scanArray(baseuri, schemas){\n\t    if(!Array.isArray(schemas)) return;\n\t    for(var i=0; i<schemas.length; i++){\n\t      scanSchema(baseuri+'/'+i, schemas[i]);\n\t    }\n\t  }\n\t  function scanObject(baseuri, schemas){\n\t    if(!schemas || typeof schemas!='object') return;\n\t    for(var p in schemas){\n\t      scanSchema(baseuri+'/'+p, schemas[p]);\n\t    }\n\t  }\n\n\t  var found = {};\n\t  var ref = {};\n\t  scanSchema(base, schema);\n\t  return new SchemaScanResult(found, ref);\n\t};\n\treturn scan;\n}\n\nvar validator;\nvar hasRequiredValidator;\n\nfunction requireValidator () {\n\tif (hasRequiredValidator) return validator;\n\thasRequiredValidator = 1;\n\n\tvar attribute = requireAttribute();\n\tvar helpers = requireHelpers();\n\tvar scanSchema = requireScan().scan;\n\tvar ValidatorResult = helpers.ValidatorResult;\n\tvar ValidatorResultError = helpers.ValidatorResultError;\n\tvar SchemaError = helpers.SchemaError;\n\tvar SchemaContext = helpers.SchemaContext;\n\t//var anonymousBase = 'vnd.jsonschema:///';\n\tvar anonymousBase = '/';\n\n\t/**\n\t * Creates a new Validator object\n\t * @name Validator\n\t * @constructor\n\t */\n\tvar Validator = function Validator () {\n\t  // Allow a validator instance to override global custom formats or to have their\n\t  // own custom formats.\n\t  this.customFormats = Object.create(Validator.prototype.customFormats);\n\t  this.schemas = {};\n\t  this.unresolvedRefs = [];\n\n\t  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n\t  this.types = Object.create(types);\n\t  this.attributes = Object.create(attribute.validators);\n\t};\n\n\t// Allow formats to be registered globally.\n\tValidator.prototype.customFormats = {};\n\n\t// Hint at the presence of a property\n\tValidator.prototype.schemas = null;\n\tValidator.prototype.types = null;\n\tValidator.prototype.attributes = null;\n\tValidator.prototype.unresolvedRefs = null;\n\n\t/**\n\t * Adds a schema with a certain urn to the Validator instance.\n\t * @param schema\n\t * @param urn\n\t * @return {Object}\n\t */\n\tValidator.prototype.addSchema = function addSchema (schema, base) {\n\t  var self = this;\n\t  if (!schema) {\n\t    return null;\n\t  }\n\t  var scan = scanSchema(base||anonymousBase, schema);\n\t  var ourUri = base || schema.$id || schema.id;\n\t  for(var uri in scan.id){\n\t    this.schemas[uri] = scan.id[uri];\n\t  }\n\t  for(var uri in scan.ref){\n\t    // If this schema is already defined, it will be filtered out by the next step\n\t    this.unresolvedRefs.push(uri);\n\t  }\n\t  // Remove newly defined schemas from unresolvedRefs\n\t  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n\t    return typeof self.schemas[uri]==='undefined';\n\t  });\n\t  return this.schemas[ourUri];\n\t};\n\n\tValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n\t  if(!Array.isArray(schemas)) return;\n\t  for(var i=0; i<schemas.length; i++){\n\t    this.addSubSchema(baseuri, schemas[i]);\n\t  }\n\t};\n\n\tValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n\t  if(!schemas || typeof schemas!='object') return;\n\t  for(var p in schemas){\n\t    this.addSubSchema(baseuri, schemas[p]);\n\t  }\n\t};\n\n\n\n\t/**\n\t * Sets all the schemas of the Validator instance.\n\t * @param schemas\n\t */\n\tValidator.prototype.setSchemas = function setSchemas (schemas) {\n\t  this.schemas = schemas;\n\t};\n\n\t/**\n\t * Returns the schema of a certain urn\n\t * @param urn\n\t */\n\tValidator.prototype.getSchema = function getSchema (urn) {\n\t  return this.schemas[urn];\n\t};\n\n\t/**\n\t * Validates instance against the provided schema\n\t * @param instance\n\t * @param schema\n\t * @param [options]\n\t * @param [ctx]\n\t * @return {Array}\n\t */\n\tValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n\t  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n\t    throw new SchemaError('Expected `schema` to be an object or boolean');\n\t  }\n\t  if (!options) {\n\t    options = {};\n\t  }\n\t  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n\t  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n\t  var id = schema.$id || schema.id;\n\t  let base = helpers.resolveUrl(options.base,id||'');\n\t  if(!ctx){\n\t    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n\t    if (!ctx.schemas[base]) {\n\t      ctx.schemas[base] = schema;\n\t    }\n\t    var found = scanSchema(base, schema);\n\t    for(var n in found.id){\n\t      var sch = found.id[n];\n\t      ctx.schemas[n] = sch;\n\t    }\n\t  }\n\t  if(options.required && instance===undefined){\n\t    var result = new ValidatorResult(instance, schema, options, ctx);\n\t    result.addError('is required, but is undefined');\n\t    return result;\n\t  }\n\t  var result = this.validateSchema(instance, schema, options, ctx);\n\t  if (!result) {\n\t    throw new Error('Result undefined');\n\t  }else if(options.throwAll && result.errors.length){\n\t    throw new ValidatorResultError(result);\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t* @param Object schema\n\t* @return mixed schema uri or false\n\t*/\n\tfunction shouldResolve(schema) {\n\t  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n\t  if (typeof ref=='string') return ref;\n\t  return false;\n\t}\n\n\t/**\n\t * Validates an instance against the schema (the actual work horse)\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @private\n\t * @return {ValidatorResult}\n\t */\n\tValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n\t  var result = new ValidatorResult(instance, schema, options, ctx);\n\n\t  // Support for the true/false schemas\n\t  if(typeof schema==='boolean') {\n\t    if(schema===true){\n\t      // `true` is always valid\n\t      schema = {};\n\t    }else if(schema===false){\n\t      // `false` is always invalid\n\t      schema = {type: []};\n\t    }\n\t  }else if(!schema){\n\t    // This might be a string\n\t    throw new Error(\"schema is undefined\");\n\t  }\n\n\t  if (schema['extends']) {\n\t    if (Array.isArray(schema['extends'])) {\n\t      var schemaobj = {schema: schema, ctx: ctx};\n\t      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n\t      schema = schemaobj.schema;\n\t      schemaobj.schema = null;\n\t      schemaobj.ctx = null;\n\t      schemaobj = null;\n\t    } else {\n\t      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n\t    }\n\t  }\n\n\t  // If passed a string argument, load that schema URI\n\t  var switchSchema = shouldResolve(schema);\n\t  if (switchSchema) {\n\t    var resolved = this.resolve(schema, switchSchema, ctx);\n\t    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n\t    return this.validateSchema(instance, resolved.subschema, options, subctx);\n\t  }\n\n\t  var skipAttributes = options && options.skipAttributes || [];\n\t  // Validate each schema attribute against the instance\n\t  for (var key in schema) {\n\t    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n\t      var validatorErr = null;\n\t      var validator = this.attributes[key];\n\t      if (validator) {\n\t        validatorErr = validator.call(this, instance, schema, options, ctx);\n\t      } else if (options.allowUnknownAttributes === false) {\n\t        // This represents an error with the schema itself, not an invalid instance\n\t        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n\t      }\n\t      if (validatorErr) {\n\t        result.importErrors(validatorErr);\n\t      }\n\t    }\n\t  }\n\n\t  if (typeof options.rewrite == 'function') {\n\t    var value = options.rewrite.call(this, instance, schema, options, ctx);\n\t    result.instance = value;\n\t  }\n\t  return result;\n\t};\n\n\t/**\n\t* @private\n\t* @param Object schema\n\t* @param SchemaContext ctx\n\t* @returns Object schema or resolved schema\n\t*/\n\tValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n\t  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n\t};\n\n\t/**\n\t* @private\n\t* @param Object schema\n\t* @param SchemaContext ctx\n\t* @returns Object schema or resolved schema\n\t*/\n\tValidator.prototype.superResolve = function superResolve (schema, ctx) {\n\t  var ref = shouldResolve(schema);\n\t  if(ref) {\n\t    return this.resolve(schema, ref, ctx).subschema;\n\t  }\n\t  return schema;\n\t};\n\n\t/**\n\t* @private\n\t* @param Object schema\n\t* @param Object switchSchema\n\t* @param SchemaContext ctx\n\t* @return Object resolved schemas {subschema:String, switchSchema: String}\n\t* @throws SchemaError\n\t*/\n\tValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n\t  switchSchema = ctx.resolve(switchSchema);\n\t  // First see if the schema exists under the provided URI\n\t  if (ctx.schemas[switchSchema]) {\n\t    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n\t  }\n\t  // Else try walking the property pointer\n\t  let parsed = new URL(switchSchema,'thismessage::/');\n\t  let fragment = parsed.hash;\n\t  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n\t  if (!document || !ctx.schemas[document]) {\n\t    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n\t  }\n\t  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n\t  if(subschema===undefined){\n\t    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n\t  }\n\t  return {subschema: subschema, switchSchema: switchSchema};\n\t};\n\n\t/**\n\t * Tests whether the instance if of a certain type.\n\t * @private\n\t * @param instance\n\t * @param schema\n\t * @param options\n\t * @param ctx\n\t * @param type\n\t * @return {boolean}\n\t */\n\tValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n\t  if(type===undefined){\n\t    return;\n\t  }else if(type===null){\n\t    throw new SchemaError('Unexpected null in \"type\" keyword');\n\t  }\n\t  if (typeof this.types[type] == 'function') {\n\t    return this.types[type].call(this, instance);\n\t  }\n\t  if (type && typeof type == 'object') {\n\t    var res = this.validateSchema(instance, type, options, ctx);\n\t    return res === undefined || !(res && res.errors.length);\n\t  }\n\t  // Undefined or properties not on the list are acceptable, same as not being defined\n\t  return true;\n\t};\n\n\tvar types = Validator.prototype.types = {};\n\ttypes.string = function testString (instance) {\n\t  return typeof instance == 'string';\n\t};\n\ttypes.number = function testNumber (instance) {\n\t  // isFinite returns false for NaN, Infinity, and -Infinity\n\t  return typeof instance == 'number' && isFinite(instance);\n\t};\n\ttypes.integer = function testInteger (instance) {\n\t  return (typeof instance == 'number') && instance % 1 === 0;\n\t};\n\ttypes.boolean = function testBoolean (instance) {\n\t  return typeof instance == 'boolean';\n\t};\n\ttypes.array = function testArray (instance) {\n\t  return Array.isArray(instance);\n\t};\n\ttypes['null'] = function testNull (instance) {\n\t  return instance === null;\n\t};\n\ttypes.date = function testDate (instance) {\n\t  return instance instanceof Date;\n\t};\n\ttypes.any = function testAny (instance) {\n\t  return true;\n\t};\n\ttypes.object = function testObject (instance) {\n\t  // TODO: fix this - see #15\n\t  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n\t};\n\n\tvalidator = Validator;\n\treturn validator;\n}\n\nvar hasRequiredLib;\n\nfunction requireLib () {\n\tif (hasRequiredLib) return lib;\n\thasRequiredLib = 1;\n\n\tvar Validator = lib.Validator = requireValidator();\n\n\tlib.ValidatorResult = requireHelpers().ValidatorResult;\n\tlib.ValidatorResultError = requireHelpers().ValidatorResultError;\n\tlib.ValidationError = requireHelpers().ValidationError;\n\tlib.SchemaError = requireHelpers().SchemaError;\n\tlib.SchemaScanResult = requireScan().SchemaScanResult;\n\tlib.scan = requireScan().scan;\n\n\tlib.validate = function (instance, schema, options) {\n\t  var v = new Validator();\n\t  return v.validate(instance, schema, options);\n\t};\n\treturn lib;\n}\n\nvar libExports = requireLib();\n\nconst toolBaseSchema = z.object({\n    name: z.string(),\n    description: z.string(),\n});\nclass SimpleToolCallContext {\n    constructor(logger, signal, callId) {\n        this.logger = logger;\n        this.signal = signal;\n        this.callId = callId;\n    }\n    status(text) {\n        this.logger.info(text);\n    }\n    warn(text) {\n        this.logger.warn(text);\n    }\n}\nconst functionToolSchema = toolBaseSchema.extend({\n    type: z.literal(\"function\"),\n    parametersSchema: zodSchemaSchema,\n    checkParameters: z.function(),\n    implementation: z.function(),\n});\nconst rawFunctionToolSchema = toolBaseSchema.extend({\n    type: z.literal(\"rawFunction\"),\n    parametersSchema: zodSchemaSchema,\n    checkParameters: z.function(),\n    implementation: z.function(),\n});\nconst unimplementedRawFunctionToolSchema = toolBaseSchema.extend({\n    type: z.literal(\"unimplementedRawFunction\"),\n    parametersJsonSchema: zodSchemaSchema,\n    checkParameters: z.function(),\n    implementation: z.function(),\n});\nconst remoteToolSchema = toolBaseSchema.extend({\n    type: z.literal(\"remoteTool\"),\n    pluginIdentifier: z.string(),\n    parametersJsonSchema: zodSchemaSchema,\n    checkParameters: z.function(),\n    implementation: z.function(),\n});\nz.discriminatedUnion(\"type\", [\n    functionToolSchema,\n    rawFunctionToolSchema,\n    unimplementedRawFunctionToolSchema,\n    remoteToolSchema,\n]);\n/**\n * A function that can be used to create a function `Tool` given a function definition and its\n * implementation.\n *\n * @public\n */\nfunction tool({ name, description, parameters, implementation, }) {\n    const parametersSchema = z.object(parameters);\n    return {\n        name,\n        description,\n        type: \"function\",\n        parametersSchema,\n        checkParameters(params) {\n            const parametersParseResult = parametersSchema.safeParse(params);\n            if (!parametersParseResult.success) {\n                throw new Error(text `\r\n          Failed to parse arguments for tool \"${name}\":\r\n          ${parametersParseResult.error.message}\r\n        `);\n            }\n        },\n        implementation: (params, ctx) => {\n            const parametersParseResult = parametersSchema.safeParse(params);\n            if (!parametersParseResult.success) {\n                throw new Error(text `\r\n          Failed to parse arguments for tool \"${name}\":\r\n          ${parametersParseResult.error.message}\r\n        `);\n            }\n            return implementation(parametersParseResult.data, ctx); // Erase the types\n        },\n    };\n}\nfunction jsonSchemaValidationErrorToAIReadableText(root, validationErrors) {\n    return validationErrors\n        .map(validatioNError => {\n        const fullPath = [root, ...validatioNError.path].join(\".\");\n        return `${fullPath} ${validatioNError.message}`;\n    })\n        .join(\"\\n\");\n}\n/**\n * A function that can be used to create a raw function `Tool` given a function definition and its\n * implementation.\n *\n * @public\n * @experimental Not stable, will likely change in the future.\n */\nfunction rawFunctionTool({ name, description, parametersJsonSchema, implementation, }) {\n    const jsonSchemaValidator = new libExports.Validator();\n    return {\n        name,\n        description,\n        type: \"rawFunction\",\n        parametersJsonSchema,\n        checkParameters(params) {\n            const validationResult = jsonSchemaValidator.validate(params, parametersJsonSchema);\n            if (validationResult.errors.length > 0) {\n                throw new Error(text `\r\n          Failed to parse arguments for tool \"${name}\":\r\n          ${jsonSchemaValidationErrorToAIReadableText(\"params\", validationResult.errors)}\r\n        `);\n            }\n        },\n        implementation,\n    };\n}\nclass UnimplementedToolError extends Error {\n    constructor(toolName) {\n        super(`Tool \"${toolName}\" is not implemented.`);\n    }\n}\n/**\n * A function that can be used to create a raw function `Tool` that is not implemented yet. When\n * using `.act`, upon encountering an unimplemented tool, the `.act` will stop gracefully.\n *\n * @public\n * @experimental Not stable, will likely change in the future.\n */\nfunction unimplementedRawFunctionTool({ name, description, parametersJsonSchema, }) {\n    const jsonSchemaValidator = new libExports.Validator();\n    return {\n        name,\n        description,\n        type: \"unimplementedRawFunction\",\n        parametersJsonSchema,\n        checkParameters(params) {\n            const validationResult = jsonSchemaValidator.validate(params, parametersJsonSchema);\n            if (validationResult.errors.length > 0) {\n                throw new Error(text `\r\n          Failed to parse arguments for tool \"${name}\":\r\n          ${jsonSchemaValidationErrorToAIReadableText(\"params\", validationResult.errors)}\r\n        `);\n            }\n        },\n        implementation: () => {\n            throw new UnimplementedToolError(name);\n        },\n    };\n}\n/**\n * Creates a tool that represents a remote tool exposed by an LMStudio plugin. This function is not\n * exposed and is used internally by the plugins namespace.\n */\nfunction internalCreateRemoteTool({ name, description, pluginIdentifier, parametersJsonSchema, implementation, }) {\n    return {\n        name,\n        description,\n        type: \"remoteTool\",\n        pluginIdentifier,\n        parametersJsonSchema,\n        checkParameters: params => {\n            const jsonSchemaValidator = new libExports.Validator();\n            const validationResult = jsonSchemaValidator.validate(params, parametersJsonSchema);\n            if (validationResult.errors.length > 0) {\n                throw new Error(text `\r\n          Failed to parse arguments for tool \"${name}\":\r\n          ${jsonSchemaValidationErrorToAIReadableText(\"params\", validationResult.errors)}\r\n        `);\n            }\n        },\n        implementation,\n    };\n}\nfunction functionToolToLLMTool(tool) {\n    return {\n        type: \"function\",\n        function: {\n            name: tool.name,\n            description: tool.description,\n            parameters: zodToJsonSchema(tool.parametersSchema),\n        },\n    };\n}\nfunction rawFunctionToolToLLMTool(tool) {\n    return {\n        type: \"function\",\n        function: {\n            name: tool.name,\n            description: tool.description,\n            parameters: tool.parametersJsonSchema,\n        },\n    };\n}\nfunction remoteToolToLLMTool(tool) {\n    return {\n        type: \"function\",\n        function: {\n            name: tool.name,\n            description: tool.description,\n            parameters: tool.parametersJsonSchema,\n        },\n    };\n}\n/**\n * Convert a `Tool` to a internal `LLMTool`.\n */\nfunction toolToLLMTool(tool) {\n    const type = tool.type;\n    switch (type) {\n        case \"function\":\n            return functionToolToLLMTool(tool);\n        case \"rawFunction\":\n        case \"unimplementedRawFunction\":\n            return rawFunctionToolToLLMTool(tool);\n        case \"remoteTool\":\n            return remoteToolToLLMTool(tool);\n        default: {\n            const exhaustiveCheck = type;\n            throw new Error(`Unhandled type: ${exhaustiveCheck}`);\n        }\n    }\n}\n\n/**\n * Represents an error that is caused by invalid tool call request.\n *\n * @public\n * @experimental [EXP-GRANULAR-ACT] More granular .act status reporting is experimental and may\n * change in the future\n */\nclass ToolCallRequestError extends Error {\n    constructor(message, \n    /**\n     * The raw output that was generated by the model before the tool call. The exact nature of this\n     * fields depends on the error. It sometimes include the entire tool calls section, or sometimes\n     * just the single tool call that failed.\n     *\n     * This field is not always available, and may be `undefined`.\n     *\n     * @experimental [EXP-GRANULAR-ACT] More granular .act status reporting is experimental and may\n     * change in the future\n     * @experimental [EXP-NON-ACT-TOOL-CALLBACKS] Tool call callbacks in .respond/.complete is in an\n     * experimental feature. This may change in the future without warning.\n     */\n    rawContent) {\n        super(message);\n        this.rawContent = rawContent;\n    }\n}\n\nclass BackendInterface {\n    constructor() {\n        this.unhandledEndpoints = new Set();\n        this.existingEndpointNames = new Set();\n        this.rpcEndpoints = new Map();\n        this.channelEndpoints = new Map();\n        this.signalEndpoints = new Map();\n        this.writableSignalEndpoints = new Map();\n    }\n    withContextType() {\n        return this;\n    }\n    assertEndpointNameNotExists(endpointName) {\n        if (this.existingEndpointNames.has(endpointName)) {\n            throw new Error(`Endpoint with name ${endpointName} already exists`);\n        }\n    }\n    /**\n     * Register an Rpc endpoint.\n     */\n    addRpcEndpoint(endpointName, { parameter, returns, serialization = \"raw\", }) {\n        this.assertEndpointNameNotExists(endpointName);\n        this.existingEndpointNames.add(endpointName);\n        this.rpcEndpoints.set(endpointName, {\n            name: endpointName,\n            parameter,\n            returns,\n            serialization,\n            handler: null,\n        });\n        return this;\n    }\n    addChannelEndpoint(endpointName, { creationParameter, toServerPacket, toClientPacket, serialization = \"raw\", }) {\n        this.assertEndpointNameNotExists(endpointName);\n        this.existingEndpointNames.add(endpointName);\n        this.channelEndpoints.set(endpointName, {\n            name: endpointName,\n            creationParameter,\n            toServerPacket,\n            toClientPacket,\n            serialization,\n            handler: null,\n        });\n        return this;\n    }\n    addSignalEndpoint(endpointName, { creationParameter, signalData, serialization = \"raw\", }) {\n        this.assertEndpointNameNotExists(endpointName);\n        this.existingEndpointNames.add(endpointName);\n        this.signalEndpoints.set(endpointName, {\n            name: endpointName,\n            creationParameter,\n            signalData,\n            serialization,\n            handler: null,\n        });\n        return this;\n    }\n    addWritableSignalEndpoint(endpointName, { creationParameter, signalData, serialization = \"raw\", }) {\n        this.assertEndpointNameNotExists(endpointName);\n        this.existingEndpointNames.add(endpointName);\n        this.writableSignalEndpoints.set(endpointName, {\n            name: endpointName,\n            creationParameter,\n            signalData,\n            serialization,\n            handler: null,\n        });\n        return this;\n    }\n    /**\n     * Adds a handler for an Rpc endpoint.\n     *\n     * @param endpointName - The name of the endpoint.\n     * @param handler - The handler function. Will be called when the endpoint is invoked. When\n     * called, the first parameter is the context, and the second parameter is the \"parameter\" for the\n     * RPC call. Can return a value or a promise that resolves to the result.\n     */\n    handleRpcEndpoint(endpointName, handler) {\n        const endpoint = this.rpcEndpoints.get(endpointName);\n        if (endpoint === undefined) {\n            throw new Error(`No Rpc endpoint with name ${endpointName}`);\n        }\n        if (endpoint.handler !== null) {\n            throw new Error(`Rpc endpoint with name ${endpointName} already has a handler`);\n        }\n        endpoint.handler = handler;\n        this.unhandledEndpoints.delete(endpointName);\n    }\n    /**\n     * Adds a handler for a channel endpoint.\n     *\n     * @param endpointName - The name of the endpoint.\n     * @param handler - The handler function. Will be called when the client creates a channel for\n     * this endpoint. When called, the first parameter is the context, the second parameter is the\n     * \"creationParameter\" for the channel, and the third parameter is a channel object that can be\n     * used to send and receive messages from the client.\n     *\n     * Must return a promise. Once that promise is settled, the channel will be closed.\n     */\n    handleChannelEndpoint(endpointName, handler) {\n        const endpoint = this.channelEndpoints.get(endpointName);\n        if (endpoint === undefined) {\n            throw new Error(`No channel endpoint with name ${endpointName}`);\n        }\n        if (endpoint.handler !== null) {\n            throw new Error(`Channel endpoint with name ${endpointName} already has a handler`);\n        }\n        endpoint.handler = handler;\n        this.unhandledEndpoints.delete(endpointName);\n    }\n    /**\n     * Adds a handler for a signal endpoint.\n     *\n     * @param endpointName - The name of the endpoint.\n     * @param handler - The handler function. Will be called when the client creates a signal, and at\n     * least one subscriber is attached to that signal. When called, the first parameter is the\n     * context, and the second parameter is the \"creationParameter\" for the signal. This method should\n     * return a SignalLike, or a promise that resolves to a SignalLike.\n     *\n     * Note: There is no 1-to-1 correlation between the signal on the client side and the number of\n     * times this handler is called. Every time the number of client subscribers changes from 0 to 1,\n     * this handler will be called. Every time the number of client subscribers changes from 1 to 0,\n     * the signal returned from this handler will be unsubscribed.\n     *\n     * Caution: Do NOT create new subscriptions that don't self-terminate in this handler, as it will\n     * cause memory leaks. That is, either:\n     *\n     * - Return a signal that already exists\n     * - Create and return a LazySignal\n     */\n    handleSignalEndpoint(endpointName, handler) {\n        const endpoint = this.signalEndpoints.get(endpointName);\n        if (endpoint === undefined) {\n            throw new Error(`No signal endpoint with name ${endpointName}`);\n        }\n        if (endpoint.handler !== null) {\n            throw new Error(`Signal endpoint with name ${endpointName} already has a handler`);\n        }\n        endpoint.handler = handler;\n        this.unhandledEndpoints.delete(endpointName);\n    }\n    /**\n     * Adds a handler for a writable signal endpoint.\n     *\n     * @param endpointName - The name of the endpoint.\n     * @param handler - The handler function. Will be called when the client creates a writable\n     * signal, and at least one subscriber is attached to that signal. When called, the first\n     * parameter is the context, and the second parameter is the \"creationParameter\" for the signal.\n     * This method should return a tuple of the signal and an update function. The update function\n     * should be called with the new data, patches, and tags to update the signal.\n     *\n     * Note: There is no 1-to-1 correlation between the signal on the client side and the number of\n     * times this handler is called. Every time the number of client subscribers changes from 0 to 1,\n     * this handler will be called. Every time the number of client subscribers changes from 1 to 0\n     * the signal returned from this handler will be unsubscribed.\n     *\n     * Caution: Do NOT create new subscriptions that don't self-terminate in this handler, as it will\n     * cause memory leaks. That is, either:\n     *\n     * - Return a signal that already exists\n     * - Create and return a LazySignal\n     */\n    handleWritableSignalEndpoint(endpointName, handler) {\n        const endpoint = this.writableSignalEndpoints.get(endpointName);\n        if (endpoint === undefined) {\n            throw new Error(`No writable signal endpoint with name ${endpointName}`);\n        }\n        if (endpoint.handler !== null) {\n            throw new Error(`Writable signal endpoint with name ${endpointName} already has a handler`);\n        }\n        endpoint.handler = handler;\n        this.unhandledEndpoints.delete(endpointName);\n    }\n    assertAllEndpointsHandled() {\n        if (this.unhandledEndpoints.size > 0) {\n            throw new Error(`The following endpoints were not handled: ${Array.from(this.unhandledEndpoints).join(\", \")}`);\n        }\n    }\n    getRpcEndpoint(endpointName) {\n        return this.rpcEndpoints.get(endpointName);\n    }\n    getAllRpcEndpoints() {\n        return [...this.rpcEndpoints.values()];\n    }\n    getChannelEndpoint(endpointName) {\n        return this.channelEndpoints.get(endpointName);\n    }\n    getAllChannelEndpoints() {\n        return [...this.channelEndpoints.values()];\n    }\n    getSignalEndpoint(endpointName) {\n        return this.signalEndpoints.get(endpointName);\n    }\n    getAllSignalEndpoints() {\n        return [...this.signalEndpoints.values()];\n    }\n    getWritableSignalEndpoint(endpointName) {\n        return this.writableSignalEndpoints.get(endpointName);\n    }\n    getAllWritableSignalEndpoints() {\n        return [...this.writableSignalEndpoints.values()];\n    }\n}\n\nvar ConnectionStatus;\n(function (ConnectionStatus) {\n    /**\n     * The underlying transport is connected and is communicating properly.\n     */\n    ConnectionStatus[\"Connected\"] = \"CONNECTED\";\n    /**\n     * The underlying transport has errored out.\n     */\n    ConnectionStatus[\"Errored\"] = \"ERRORED\";\n    /**\n     * The channel has been properly closed and no more messages will be sent or received.\n     */\n    ConnectionStatus[\"Closed\"] = \"CLOSED\";\n})(ConnectionStatus || (ConnectionStatus = {}));\nconst logger = new SimpleLogger(\"Channel\");\nclass Channel {\n    constructor(innerSend) {\n        this.innerSend = innerSend;\n        this.nextAckId = 0;\n        /**\n         * A map for messages that are waiting for an ACK. The values are the functions to resolve or\n         * reject the corresponding promise.\n         */\n        this.waitingForAck = new Map();\n        /**\n         * Returned as a part of create. It should be called by the controlling port.\n         */\n        this.receivedACK = (ackId) => {\n            if (this.connectionStatus.get() !== ConnectionStatus.Connected) {\n                logger.warn(\"Received ACK while in status\", this.connectionStatus.get());\n                return;\n            }\n            const waiting = this.waitingForAck.get(ackId);\n            if (waiting === undefined) {\n                logger.warn(\"Received ACK for a message that is no longer waiting for ACK, ackId =\", ackId);\n                return;\n            }\n            waiting.resolve();\n            this.waitingForAck.delete(ackId);\n        };\n        /**\n         * Returned as a part of create. It should be called by the controlling port.\n         */\n        this.receivedMessage = (packet) => {\n            if (this.connectionStatus.get() !== ConnectionStatus.Connected) {\n                logger.warn(\"Received message while in status\", this.connectionStatus.get());\n                return;\n            }\n            this.emitOnMessage(packet);\n        };\n        /**\n         * Returned as a part of create. It should be called by the controlling port.\n         */\n        this.errored = (error) => {\n            if (this.connectionStatus.get() !== ConnectionStatus.Connected) {\n                logger.warn(\"Received error while in status\", this.connectionStatus.get());\n                return;\n            }\n            this.rejectAllWaitingForAck(error);\n            this.setConnectionStatus(ConnectionStatus.Errored);\n            this.emitOnError(error);\n        };\n        /**\n         * Returned as a part of create. It should be called by the controlling port.\n         */\n        this.closed = () => {\n            this.rejectAllWaitingForAck(new Error(\"Channel closed\"));\n            this.setConnectionStatus(ConnectionStatus.Closed);\n            this.emitOnClose();\n        };\n        [this.onMessage, this.emitOnMessage] = BufferedEvent.create();\n        [this.onError, this.emitOnError] = BufferedEvent.create();\n        [this.onClose, this.emitOnClose] = BufferedEvent.create();\n        [this.connectionStatus, this.setConnectionStatus] = Signal.create(ConnectionStatus.Connected);\n    }\n    rejectAllWaitingForAck(error) {\n        const rejects = Array.from(this.waitingForAck.values()).map(({ reject }) => reject);\n        this.waitingForAck.clear();\n        for (const reject of rejects) {\n            reject(error);\n        }\n    }\n    static create(innerSend) {\n        const channel = new Channel(innerSend);\n        return {\n            channel,\n            receivedAck: channel.receivedACK,\n            receivedMessage: channel.receivedMessage,\n            errored: channel.errored,\n            closed: channel.closed,\n        };\n    }\n    send(packet) {\n        this.innerSend(packet);\n    }\n    sendAndWaitForACK(packet) {\n        const { promise, resolve, reject } = makePromise();\n        const ackId = this.nextAckId;\n        this.nextAckId++;\n        this.waitingForAck.set(ackId, { resolve, reject });\n        this.innerSend(packet, ackId);\n        return promise;\n    }\n}\n\nvar DoubleIndexedKV = /** @class */ (function () {\n    function DoubleIndexedKV() {\n        this.keyToValue = new Map();\n        this.valueToKey = new Map();\n    }\n    DoubleIndexedKV.prototype.set = function (key, value) {\n        this.keyToValue.set(key, value);\n        this.valueToKey.set(value, key);\n    };\n    DoubleIndexedKV.prototype.getByKey = function (key) {\n        return this.keyToValue.get(key);\n    };\n    DoubleIndexedKV.prototype.getByValue = function (value) {\n        return this.valueToKey.get(value);\n    };\n    DoubleIndexedKV.prototype.clear = function () {\n        this.keyToValue.clear();\n        this.valueToKey.clear();\n    };\n    return DoubleIndexedKV;\n}());\n\nvar Registry = /** @class */ (function () {\n    function Registry(generateIdentifier) {\n        this.generateIdentifier = generateIdentifier;\n        this.kv = new DoubleIndexedKV();\n    }\n    Registry.prototype.register = function (value, identifier) {\n        if (this.kv.getByValue(value)) {\n            return;\n        }\n        if (!identifier) {\n            identifier = this.generateIdentifier(value);\n        }\n        this.kv.set(identifier, value);\n    };\n    Registry.prototype.clear = function () {\n        this.kv.clear();\n    };\n    Registry.prototype.getIdentifier = function (value) {\n        return this.kv.getByValue(value);\n    };\n    Registry.prototype.getValue = function (identifier) {\n        return this.kv.getByKey(identifier);\n    };\n    return Registry;\n}());\n\nvar __extends = (globalThis && globalThis.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ClassRegistry = /** @class */ (function (_super) {\n    __extends(ClassRegistry, _super);\n    function ClassRegistry() {\n        var _this = _super.call(this, function (c) { return c.name; }) || this;\n        _this.classToAllowedProps = new Map();\n        return _this;\n    }\n    ClassRegistry.prototype.register = function (value, options) {\n        if (typeof options === 'object') {\n            if (options.allowProps) {\n                this.classToAllowedProps.set(value, options.allowProps);\n            }\n            _super.prototype.register.call(this, value, options.identifier);\n        }\n        else {\n            _super.prototype.register.call(this, value, options);\n        }\n    };\n    ClassRegistry.prototype.getAllowedProps = function (value) {\n        return this.classToAllowedProps.get(value);\n    };\n    return ClassRegistry;\n}(Registry));\n\nvar __read$3 = (globalThis && globalThis.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nfunction valuesOfObj(record) {\n    if ('values' in Object) {\n        // eslint-disable-next-line es5/no-es6-methods\n        return Object.values(record);\n    }\n    var values = [];\n    // eslint-disable-next-line no-restricted-syntax\n    for (var key in record) {\n        if (record.hasOwnProperty(key)) {\n            values.push(record[key]);\n        }\n    }\n    return values;\n}\nfunction find(record, predicate) {\n    var values = valuesOfObj(record);\n    if ('find' in values) {\n        // eslint-disable-next-line es5/no-es6-methods\n        return values.find(predicate);\n    }\n    var valuesNotNever = values;\n    for (var i = 0; i < valuesNotNever.length; i++) {\n        var value = valuesNotNever[i];\n        if (predicate(value)) {\n            return value;\n        }\n    }\n    return undefined;\n}\nfunction forEach(record, run) {\n    Object.entries(record).forEach(function (_a) {\n        var _b = __read$3(_a, 2), key = _b[0], value = _b[1];\n        return run(value, key);\n    });\n}\nfunction includes(arr, value) {\n    return arr.indexOf(value) !== -1;\n}\nfunction findArr(record, predicate) {\n    for (var i = 0; i < record.length; i++) {\n        var value = record[i];\n        if (predicate(value)) {\n            return value;\n        }\n    }\n    return undefined;\n}\n\nvar CustomTransformerRegistry = /** @class */ (function () {\n    function CustomTransformerRegistry() {\n        this.transfomers = {};\n    }\n    CustomTransformerRegistry.prototype.register = function (transformer) {\n        this.transfomers[transformer.name] = transformer;\n    };\n    CustomTransformerRegistry.prototype.findApplicable = function (v) {\n        return find(this.transfomers, function (transformer) {\n            return transformer.isApplicable(v);\n        });\n    };\n    CustomTransformerRegistry.prototype.findByName = function (name) {\n        return this.transfomers[name];\n    };\n    return CustomTransformerRegistry;\n}());\n\nvar getType$1 = function (payload) {\n    return Object.prototype.toString.call(payload).slice(8, -1);\n};\nvar isUndefined = function (payload) {\n    return typeof payload === 'undefined';\n};\nvar isNull = function (payload) { return payload === null; };\nvar isPlainObject$1 = function (payload) {\n    if (typeof payload !== 'object' || payload === null)\n        return false;\n    if (payload === Object.prototype)\n        return false;\n    if (Object.getPrototypeOf(payload) === null)\n        return true;\n    return Object.getPrototypeOf(payload) === Object.prototype;\n};\nvar isEmptyObject = function (payload) {\n    return isPlainObject$1(payload) && Object.keys(payload).length === 0;\n};\nvar isArray$1 = function (payload) {\n    return Array.isArray(payload);\n};\nvar isString = function (payload) {\n    return typeof payload === 'string';\n};\nvar isNumber = function (payload) {\n    return typeof payload === 'number' && !isNaN(payload);\n};\nvar isBoolean = function (payload) {\n    return typeof payload === 'boolean';\n};\nvar isRegExp = function (payload) {\n    return payload instanceof RegExp;\n};\nvar isMap = function (payload) {\n    return payload instanceof Map;\n};\nvar isSet = function (payload) {\n    return payload instanceof Set;\n};\nvar isSymbol = function (payload) {\n    return getType$1(payload) === 'Symbol';\n};\nvar isDate = function (payload) {\n    return payload instanceof Date && !isNaN(payload.valueOf());\n};\nvar isError = function (payload) {\n    return payload instanceof Error;\n};\nvar isNaNValue = function (payload) {\n    return typeof payload === 'number' && isNaN(payload);\n};\nvar isPrimitive = function (payload) {\n    return isBoolean(payload) ||\n        isNull(payload) ||\n        isUndefined(payload) ||\n        isNumber(payload) ||\n        isString(payload) ||\n        isSymbol(payload);\n};\nvar isBigint = function (payload) {\n    return typeof payload === 'bigint';\n};\nvar isInfinite = function (payload) {\n    return payload === Infinity || payload === -Infinity;\n};\nvar isTypedArray = function (payload) {\n    return ArrayBuffer.isView(payload) && !(payload instanceof DataView);\n};\nvar isURL = function (payload) { return payload instanceof URL; };\n\nvar escapeKey = function (key) { return key.replace(/\\./g, '\\\\.'); };\nvar stringifyPath = function (path) {\n    return path\n        .map(String)\n        .map(escapeKey)\n        .join('.');\n};\nvar parsePath = function (string) {\n    var result = [];\n    var segment = '';\n    for (var i = 0; i < string.length; i++) {\n        var char = string.charAt(i);\n        var isEscapedDot = char === '\\\\' && string.charAt(i + 1) === '.';\n        if (isEscapedDot) {\n            segment += '.';\n            i++;\n            continue;\n        }\n        var isEndOfSegment = char === '.';\n        if (isEndOfSegment) {\n            result.push(segment);\n            segment = '';\n            continue;\n        }\n        segment += char;\n    }\n    var lastSegment = segment;\n    result.push(lastSegment);\n    return result;\n};\n\nvar __assign$1 = (globalThis && globalThis.__assign) || function () {\n    __assign$1 = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign$1.apply(this, arguments);\n};\nvar __read$2 = (globalThis && globalThis.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray$2 = (globalThis && globalThis.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nfunction simpleTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n        isApplicable: isApplicable,\n        annotation: annotation,\n        transform: transform,\n        untransform: untransform\n    };\n}\nvar simpleRules = [\n    simpleTransformation(isUndefined, 'undefined', function () { return null; }, function () { return undefined; }),\n    simpleTransformation(isBigint, 'bigint', function (v) { return v.toString(); }, function (v) {\n        if (typeof BigInt !== 'undefined') {\n            return BigInt(v);\n        }\n        console.error('Please add a BigInt polyfill.');\n        return v;\n    }),\n    simpleTransformation(isDate, 'Date', function (v) { return v.toISOString(); }, function (v) { return new Date(v); }),\n    simpleTransformation(isError, 'Error', function (v, superJson) {\n        var baseError = {\n            name: v.name,\n            message: v.message\n        };\n        superJson.allowedErrorProps.forEach(function (prop) {\n            baseError[prop] = v[prop];\n        });\n        return baseError;\n    }, function (v, superJson) {\n        var e = new Error(v.message);\n        e.name = v.name;\n        e.stack = v.stack;\n        superJson.allowedErrorProps.forEach(function (prop) {\n            e[prop] = v[prop];\n        });\n        return e;\n    }),\n    simpleTransformation(isRegExp, 'regexp', function (v) { return '' + v; }, function (regex) {\n        var body = regex.slice(1, regex.lastIndexOf('/'));\n        var flags = regex.slice(regex.lastIndexOf('/') + 1);\n        return new RegExp(body, flags);\n    }),\n    simpleTransformation(isSet, 'set', \n    // (sets only exist in es6+)\n    // eslint-disable-next-line es5/no-es6-methods\n    function (v) { return __spreadArray$2([], __read$2(v.values())); }, function (v) { return new Set(v); }),\n    simpleTransformation(isMap, 'map', function (v) { return __spreadArray$2([], __read$2(v.entries())); }, function (v) { return new Map(v); }),\n    simpleTransformation(function (v) { return isNaNValue(v) || isInfinite(v); }, 'number', function (v) {\n        if (isNaNValue(v)) {\n            return 'NaN';\n        }\n        if (v > 0) {\n            return 'Infinity';\n        }\n        else {\n            return '-Infinity';\n        }\n    }, Number),\n    simpleTransformation(function (v) { return v === 0 && 1 / v === -Infinity; }, 'number', function () {\n        return '-0';\n    }, Number),\n    simpleTransformation(isURL, 'URL', function (v) { return v.toString(); }, function (v) { return new URL(v); }),\n];\nfunction compositeTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n        isApplicable: isApplicable,\n        annotation: annotation,\n        transform: transform,\n        untransform: untransform\n    };\n}\nvar symbolRule = compositeTransformation(function (s, superJson) {\n    if (isSymbol(s)) {\n        var isRegistered = !!superJson.symbolRegistry.getIdentifier(s);\n        return isRegistered;\n    }\n    return false;\n}, function (s, superJson) {\n    var identifier = superJson.symbolRegistry.getIdentifier(s);\n    return ['symbol', identifier];\n}, function (v) { return v.description; }, function (_, a, superJson) {\n    var value = superJson.symbolRegistry.getValue(a[1]);\n    if (!value) {\n        throw new Error('Trying to deserialize unknown symbol');\n    }\n    return value;\n});\nvar constructorToName = [\n    Int8Array,\n    Uint8Array,\n    Int16Array,\n    Uint16Array,\n    Int32Array,\n    Uint32Array,\n    Float32Array,\n    Float64Array,\n    Uint8ClampedArray,\n].reduce(function (obj, ctor) {\n    obj[ctor.name] = ctor;\n    return obj;\n}, {});\nvar typedArrayRule = compositeTransformation(isTypedArray, function (v) { return ['typed-array', v.constructor.name]; }, function (v) { return __spreadArray$2([], __read$2(v)); }, function (v, a) {\n    var ctor = constructorToName[a[1]];\n    if (!ctor) {\n        throw new Error('Trying to deserialize unknown typed array');\n    }\n    return new ctor(v);\n});\nfunction isInstanceOfRegisteredClass(potentialClass, superJson) {\n    if (potentialClass === null || potentialClass === void 0 ? void 0 : potentialClass.constructor) {\n        var isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);\n        return isRegistered;\n    }\n    return false;\n}\nvar classRule = compositeTransformation(isInstanceOfRegisteredClass, function (clazz, superJson) {\n    var identifier = superJson.classRegistry.getIdentifier(clazz.constructor);\n    return ['class', identifier];\n}, function (clazz, superJson) {\n    var allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);\n    if (!allowedProps) {\n        return __assign$1({}, clazz);\n    }\n    var result = {};\n    allowedProps.forEach(function (prop) {\n        result[prop] = clazz[prop];\n    });\n    return result;\n}, function (v, a, superJson) {\n    var clazz = superJson.classRegistry.getValue(a[1]);\n    if (!clazz) {\n        throw new Error('Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564');\n    }\n    return Object.assign(Object.create(clazz.prototype), v);\n});\nvar customRule = compositeTransformation(function (value, superJson) {\n    return !!superJson.customTransformerRegistry.findApplicable(value);\n}, function (value, superJson) {\n    var transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return ['custom', transformer.name];\n}, function (value, superJson) {\n    var transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return transformer.serialize(value);\n}, function (v, a, superJson) {\n    var transformer = superJson.customTransformerRegistry.findByName(a[1]);\n    if (!transformer) {\n        throw new Error('Trying to deserialize unknown custom value');\n    }\n    return transformer.deserialize(v);\n});\nvar compositeRules = [classRule, symbolRule, customRule, typedArrayRule];\nvar transformValue = function (value, superJson) {\n    var applicableCompositeRule = findArr(compositeRules, function (rule) {\n        return rule.isApplicable(value, superJson);\n    });\n    if (applicableCompositeRule) {\n        return {\n            value: applicableCompositeRule.transform(value, superJson),\n            type: applicableCompositeRule.annotation(value, superJson)\n        };\n    }\n    var applicableSimpleRule = findArr(simpleRules, function (rule) {\n        return rule.isApplicable(value, superJson);\n    });\n    if (applicableSimpleRule) {\n        return {\n            value: applicableSimpleRule.transform(value, superJson),\n            type: applicableSimpleRule.annotation\n        };\n    }\n    return undefined;\n};\nvar simpleRulesByAnnotation = {};\nsimpleRules.forEach(function (rule) {\n    simpleRulesByAnnotation[rule.annotation] = rule;\n});\nvar untransformValue = function (json, type, superJson) {\n    if (isArray$1(type)) {\n        switch (type[0]) {\n            case 'symbol':\n                return symbolRule.untransform(json, type, superJson);\n            case 'class':\n                return classRule.untransform(json, type, superJson);\n            case 'custom':\n                return customRule.untransform(json, type, superJson);\n            case 'typed-array':\n                return typedArrayRule.untransform(json, type, superJson);\n            default:\n                throw new Error('Unknown transformation: ' + type);\n        }\n    }\n    else {\n        var transformation = simpleRulesByAnnotation[type];\n        if (!transformation) {\n            throw new Error('Unknown transformation: ' + type);\n        }\n        return transformation.untransform(json, superJson);\n    }\n};\n\nvar getNthKey = function (value, n) {\n    var keys = value.keys();\n    while (n > 0) {\n        keys.next();\n        n--;\n    }\n    return keys.next().value;\n};\nfunction validatePath(path) {\n    if (includes(path, '__proto__')) {\n        throw new Error('__proto__ is not allowed as a property');\n    }\n    if (includes(path, 'prototype')) {\n        throw new Error('prototype is not allowed as a property');\n    }\n    if (includes(path, 'constructor')) {\n        throw new Error('constructor is not allowed as a property');\n    }\n}\nvar getDeep = function (object, path) {\n    validatePath(path);\n    for (var i = 0; i < path.length; i++) {\n        var key = path[i];\n        if (isSet(object)) {\n            object = getNthKey(object, +key);\n        }\n        else if (isMap(object)) {\n            var row = +key;\n            var type = +path[++i] === 0 ? 'key' : 'value';\n            var keyOfRow = getNthKey(object, row);\n            switch (type) {\n                case 'key':\n                    object = keyOfRow;\n                    break;\n                case 'value':\n                    object = object.get(keyOfRow);\n                    break;\n            }\n        }\n        else {\n            object = object[key];\n        }\n    }\n    return object;\n};\nvar setDeep = function (object, path, mapper) {\n    validatePath(path);\n    if (path.length === 0) {\n        return mapper(object);\n    }\n    var parent = object;\n    for (var i = 0; i < path.length - 1; i++) {\n        var key = path[i];\n        if (isArray$1(parent)) {\n            var index = +key;\n            parent = parent[index];\n        }\n        else if (isPlainObject$1(parent)) {\n            parent = parent[key];\n        }\n        else if (isSet(parent)) {\n            var row = +key;\n            parent = getNthKey(parent, row);\n        }\n        else if (isMap(parent)) {\n            var isEnd = i === path.length - 2;\n            if (isEnd) {\n                break;\n            }\n            var row = +key;\n            var type = +path[++i] === 0 ? 'key' : 'value';\n            var keyOfRow = getNthKey(parent, row);\n            switch (type) {\n                case 'key':\n                    parent = keyOfRow;\n                    break;\n                case 'value':\n                    parent = parent.get(keyOfRow);\n                    break;\n            }\n        }\n    }\n    var lastKey = path[path.length - 1];\n    if (isArray$1(parent)) {\n        parent[+lastKey] = mapper(parent[+lastKey]);\n    }\n    else if (isPlainObject$1(parent)) {\n        parent[lastKey] = mapper(parent[lastKey]);\n    }\n    if (isSet(parent)) {\n        var oldValue = getNthKey(parent, +lastKey);\n        var newValue = mapper(oldValue);\n        if (oldValue !== newValue) {\n            parent[\"delete\"](oldValue);\n            parent.add(newValue);\n        }\n    }\n    if (isMap(parent)) {\n        var row = +path[path.length - 2];\n        var keyToRow = getNthKey(parent, row);\n        var type = +lastKey === 0 ? 'key' : 'value';\n        switch (type) {\n            case 'key': {\n                var newKey = mapper(keyToRow);\n                parent.set(newKey, parent.get(keyToRow));\n                if (newKey !== keyToRow) {\n                    parent[\"delete\"](keyToRow);\n                }\n                break;\n            }\n            case 'value': {\n                parent.set(keyToRow, mapper(parent.get(keyToRow)));\n                break;\n            }\n        }\n    }\n    return object;\n};\n\nvar __read$1 = (globalThis && globalThis.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray$1 = (globalThis && globalThis.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nfunction traverse(tree, walker, origin) {\n    if (origin === void 0) { origin = []; }\n    if (!tree) {\n        return;\n    }\n    if (!isArray$1(tree)) {\n        forEach(tree, function (subtree, key) {\n            return traverse(subtree, walker, __spreadArray$1(__spreadArray$1([], __read$1(origin)), __read$1(parsePath(key))));\n        });\n        return;\n    }\n    var _a = __read$1(tree, 2), nodeValue = _a[0], children = _a[1];\n    if (children) {\n        forEach(children, function (child, key) {\n            traverse(child, walker, __spreadArray$1(__spreadArray$1([], __read$1(origin)), __read$1(parsePath(key))));\n        });\n    }\n    walker(nodeValue, origin);\n}\nfunction applyValueAnnotations(plain, annotations, superJson) {\n    traverse(annotations, function (type, path) {\n        plain = setDeep(plain, path, function (v) { return untransformValue(v, type, superJson); });\n    });\n    return plain;\n}\nfunction applyReferentialEqualityAnnotations(plain, annotations) {\n    function apply(identicalPaths, path) {\n        var object = getDeep(plain, parsePath(path));\n        identicalPaths.map(parsePath).forEach(function (identicalObjectPath) {\n            plain = setDeep(plain, identicalObjectPath, function () { return object; });\n        });\n    }\n    if (isArray$1(annotations)) {\n        var _a = __read$1(annotations, 2), root = _a[0], other = _a[1];\n        root.forEach(function (identicalPath) {\n            plain = setDeep(plain, parsePath(identicalPath), function () { return plain; });\n        });\n        if (other) {\n            forEach(other, apply);\n        }\n    }\n    else {\n        forEach(annotations, apply);\n    }\n    return plain;\n}\nvar isDeep = function (object, superJson) {\n    return isPlainObject$1(object) ||\n        isArray$1(object) ||\n        isMap(object) ||\n        isSet(object) ||\n        isInstanceOfRegisteredClass(object, superJson);\n};\nfunction addIdentity(object, path, identities) {\n    var existingSet = identities.get(object);\n    if (existingSet) {\n        existingSet.push(path);\n    }\n    else {\n        identities.set(object, [path]);\n    }\n}\nfunction generateReferentialEqualityAnnotations(identitites, dedupe) {\n    var result = {};\n    var rootEqualityPaths = undefined;\n    identitites.forEach(function (paths) {\n        if (paths.length <= 1) {\n            return;\n        }\n        // if we're not deduping, all of these objects continue existing.\n        // putting the shortest path first makes it easier to parse for humans\n        // if we're deduping though, only the first entry will still exist, so we can't do this optimisation.\n        if (!dedupe) {\n            paths = paths\n                .map(function (path) { return path.map(String); })\n                .sort(function (a, b) { return a.length - b.length; });\n        }\n        var _a = __read$1(paths), representativePath = _a[0], identicalPaths = _a.slice(1);\n        if (representativePath.length === 0) {\n            rootEqualityPaths = identicalPaths.map(stringifyPath);\n        }\n        else {\n            result[stringifyPath(representativePath)] = identicalPaths.map(stringifyPath);\n        }\n    });\n    if (rootEqualityPaths) {\n        if (isEmptyObject(result)) {\n            return [rootEqualityPaths];\n        }\n        else {\n            return [rootEqualityPaths, result];\n        }\n    }\n    else {\n        return isEmptyObject(result) ? undefined : result;\n    }\n}\nvar walker = function (object, identities, superJson, dedupe, path, objectsInThisPath, seenObjects) {\n    var _a;\n    if (path === void 0) { path = []; }\n    if (objectsInThisPath === void 0) { objectsInThisPath = []; }\n    if (seenObjects === void 0) { seenObjects = new Map(); }\n    var primitive = isPrimitive(object);\n    if (!primitive) {\n        addIdentity(object, path, identities);\n        var seen = seenObjects.get(object);\n        if (seen) {\n            // short-circuit result if we've seen this object before\n            return dedupe\n                ? {\n                    transformedValue: null\n                }\n                : seen;\n        }\n    }\n    if (!isDeep(object, superJson)) {\n        var transformed_1 = transformValue(object, superJson);\n        var result_1 = transformed_1\n            ? {\n                transformedValue: transformed_1.value,\n                annotations: [transformed_1.type]\n            }\n            : {\n                transformedValue: object\n            };\n        if (!primitive) {\n            seenObjects.set(object, result_1);\n        }\n        return result_1;\n    }\n    if (includes(objectsInThisPath, object)) {\n        // prevent circular references\n        return {\n            transformedValue: null\n        };\n    }\n    var transformationResult = transformValue(object, superJson);\n    var transformed = (_a = transformationResult === null || transformationResult === void 0 ? void 0 : transformationResult.value) !== null && _a !== void 0 ? _a : object;\n    var transformedValue = isArray$1(transformed) ? [] : {};\n    var innerAnnotations = {};\n    forEach(transformed, function (value, index) {\n        var recursiveResult = walker(value, identities, superJson, dedupe, __spreadArray$1(__spreadArray$1([], __read$1(path)), [index]), __spreadArray$1(__spreadArray$1([], __read$1(objectsInThisPath)), [object]), seenObjects);\n        transformedValue[index] = recursiveResult.transformedValue;\n        if (isArray$1(recursiveResult.annotations)) {\n            innerAnnotations[index] = recursiveResult.annotations;\n        }\n        else if (isPlainObject$1(recursiveResult.annotations)) {\n            forEach(recursiveResult.annotations, function (tree, key) {\n                innerAnnotations[escapeKey(index) + '.' + key] = tree;\n            });\n        }\n    });\n    var result = isEmptyObject(innerAnnotations)\n        ? {\n            transformedValue: transformedValue,\n            annotations: !!transformationResult\n                ? [transformationResult.type]\n                : undefined\n        }\n        : {\n            transformedValue: transformedValue,\n            annotations: !!transformationResult\n                ? [transformationResult.type, innerAnnotations]\n                : innerAnnotations\n        };\n    if (!primitive) {\n        seenObjects.set(object, result);\n    }\n    return result;\n};\n\nfunction getType(payload) {\n  return Object.prototype.toString.call(payload).slice(8, -1);\n}\n\nfunction isArray(payload) {\n  return getType(payload) === \"Array\";\n}\n\nfunction isPlainObject(payload) {\n  if (getType(payload) !== \"Object\")\n    return false;\n  const prototype = Object.getPrototypeOf(payload);\n  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;\n}\n\nfunction assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\n  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? \"enumerable\" : \"nonenumerable\";\n  if (propType === \"enumerable\")\n    carry[key] = newVal;\n  if (includeNonenumerable && propType === \"nonenumerable\") {\n    Object.defineProperty(carry, key, {\n      value: newVal,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nfunction copy(target, options = {}) {\n  if (isArray(target)) {\n    return target.map((item) => copy(item, options));\n  }\n  if (!isPlainObject(target)) {\n    return target;\n  }\n  const props = Object.getOwnPropertyNames(target);\n  const symbols = Object.getOwnPropertySymbols(target);\n  return [...props, ...symbols].reduce((carry, key) => {\n    if (isArray(options.props) && !options.props.includes(key)) {\n      return carry;\n    }\n    const val = target[key];\n    const newVal = copy(val, options);\n    assignProp(carry, key, newVal, target, options.nonenumerable);\n    return carry;\n  }, {});\n}\n\nvar __assign = (globalThis && globalThis.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (globalThis && globalThis.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (globalThis && globalThis.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar SuperJSON = /** @class */ (function () {\n    /**\n     * @param dedupeReferentialEqualities  If true, SuperJSON will make sure only one instance of referentially equal objects are serialized and the rest are replaced with `null`.\n     */\n    function SuperJSON(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.dedupe, dedupe = _c === void 0 ? false : _c;\n        this.classRegistry = new ClassRegistry();\n        this.symbolRegistry = new Registry(function (s) { var _a; return (_a = s.description) !== null && _a !== void 0 ? _a : ''; });\n        this.customTransformerRegistry = new CustomTransformerRegistry();\n        this.allowedErrorProps = [];\n        this.dedupe = dedupe;\n    }\n    SuperJSON.prototype.serialize = function (object) {\n        var identities = new Map();\n        var output = walker(object, identities, this, this.dedupe);\n        var res = {\n            json: output.transformedValue\n        };\n        if (output.annotations) {\n            res.meta = __assign(__assign({}, res.meta), { values: output.annotations });\n        }\n        var equalityAnnotations = generateReferentialEqualityAnnotations(identities, this.dedupe);\n        if (equalityAnnotations) {\n            res.meta = __assign(__assign({}, res.meta), { referentialEqualities: equalityAnnotations });\n        }\n        return res;\n    };\n    SuperJSON.prototype.deserialize = function (payload) {\n        var json = payload.json, meta = payload.meta;\n        var result = copy(json);\n        if (meta === null || meta === void 0 ? void 0 : meta.values) {\n            result = applyValueAnnotations(result, meta.values, this);\n        }\n        if (meta === null || meta === void 0 ? void 0 : meta.referentialEqualities) {\n            result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);\n        }\n        return result;\n    };\n    SuperJSON.prototype.stringify = function (object) {\n        return JSON.stringify(this.serialize(object));\n    };\n    SuperJSON.prototype.parse = function (string) {\n        return this.deserialize(JSON.parse(string));\n    };\n    SuperJSON.prototype.registerClass = function (v, options) {\n        this.classRegistry.register(v, options);\n    };\n    SuperJSON.prototype.registerSymbol = function (v, identifier) {\n        this.symbolRegistry.register(v, identifier);\n    };\n    SuperJSON.prototype.registerCustom = function (transformer, name) {\n        this.customTransformerRegistry.register(__assign({ name: name }, transformer));\n    };\n    SuperJSON.prototype.allowErrorProps = function () {\n        var _a;\n        var props = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            props[_i] = arguments[_i];\n        }\n        (_a = this.allowedErrorProps).push.apply(_a, __spreadArray([], __read(props)));\n    };\n    SuperJSON.defaultInstance = new SuperJSON();\n    SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);\n    SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);\n    SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);\n    SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);\n    SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);\n    return SuperJSON;\n}());\nvar serialize$1 = SuperJSON.serialize;\nvar deserialize$1 = SuperJSON.deserialize;\n\n/**\n * Serialize a value to another value using the specified serialization type.\n */\nfunction serialize(type, value) {\n    switch (type) {\n        case \"raw\":\n            return value;\n        case \"superjson\":\n            return serialize$1(value);\n    }\n}\nfunction deserialize(type, value) {\n    switch (type) {\n        case \"raw\":\n            return value;\n        case \"superjson\":\n            return deserialize$1(value);\n    }\n}\nconst serializedOpaqueSchema = z.any();\n\nconst clientToServerMessageSchema = z.discriminatedUnion(\"type\", [\n    // Communication\n    z.object({\n        type: z.literal(\"communicationWarning\"),\n        warning: z.string(),\n    }),\n    z.object({\n        type: z.literal(\"keepAlive\"),\n    }),\n    // Channel\n    z.object({\n        type: z.literal(\"channelCreate\"),\n        endpoint: z.string(),\n        channelId: z.number().int(),\n        creationParameter: serializedOpaqueSchema,\n    }),\n    z.object({\n        type: z.literal(\"channelSend\"),\n        channelId: z.number().int(),\n        message: serializedOpaqueSchema,\n        ackId: z.number().int().optional(),\n    }),\n    z.object({\n        type: z.literal(\"channelAck\"),\n        channelId: z.number().int(),\n        ackId: z.number().int(),\n    }),\n    // RPC\n    z.object({\n        type: z.literal(\"rpcCall\"),\n        endpoint: z.string(),\n        callId: z.number().int(),\n        parameter: serializedOpaqueSchema,\n    }),\n    // Readonly signal\n    z.object({\n        type: z.literal(\"signalSubscribe\"),\n        creationParameter: serializedOpaqueSchema,\n        endpoint: z.string(),\n        subscribeId: z.number().int(),\n    }),\n    z.object({\n        type: z.literal(\"signalUnsubscribe\"),\n        subscribeId: z.number().int(),\n    }),\n    // Writable signal\n    z.object({\n        type: z.literal(\"writableSignalSubscribe\"),\n        creationParameter: serializedOpaqueSchema,\n        endpoint: z.string(),\n        subscribeId: z.number().int(),\n    }),\n    z.object({\n        type: z.literal(\"writableSignalUnsubscribe\"),\n        subscribeId: z.number().int(),\n    }),\n    z.object({\n        type: z.literal(\"writableSignalUpdate\"),\n        subscribeId: z.number().int(),\n        patches: z.array(serializedOpaqueSchema),\n        tags: z.array(z.string()),\n    }),\n]);\nconst serverToClientMessageSchema = z.discriminatedUnion(\"type\", [\n    // Communication\n    z.object({\n        type: z.literal(\"communicationWarning\"),\n        warning: z.string(),\n    }),\n    z.object({\n        type: z.literal(\"keepAliveAck\"),\n    }),\n    // Channel\n    z.object({\n        type: z.literal(\"channelSend\"),\n        channelId: z.number().int(),\n        message: serializedOpaqueSchema,\n        ackId: z.number().int().optional(),\n    }),\n    z.object({\n        type: z.literal(\"channelAck\"),\n        channelId: z.number().int(),\n        ackId: z.number().int(),\n    }),\n    z.object({\n        type: z.literal(\"channelClose\"),\n        channelId: z.number().int(),\n    }),\n    z.object({\n        type: z.literal(\"channelError\"),\n        channelId: z.number().int(),\n        error: serializedLMSExtendedErrorSchema,\n    }),\n    // RPC\n    z.object({\n        type: z.literal(\"rpcResult\"),\n        callId: z.number().int(),\n        result: serializedOpaqueSchema,\n    }),\n    z.object({\n        type: z.literal(\"rpcError\"),\n        callId: z.number().int(),\n        error: serializedLMSExtendedErrorSchema,\n    }),\n    // Readonly signal\n    z.object({\n        type: z.literal(\"signalUpdate\"),\n        subscribeId: z.number().int(),\n        patches: z.array(serializedOpaqueSchema),\n        tags: z.array(z.string()),\n    }),\n    z.object({\n        type: z.literal(\"signalError\"),\n        subscribeId: z.number().int(),\n        error: serializedLMSExtendedErrorSchema,\n    }),\n    // Writable signal\n    z.object({\n        type: z.literal(\"writableSignalUpdate\"),\n        subscribeId: z.number().int(),\n        patches: z.array(serializedOpaqueSchema),\n        tags: z.array(z.string()),\n    }),\n    z.object({\n        type: z.literal(\"writableSignalError\"),\n        subscribeId: z.number().int(),\n        error: serializedLMSExtendedErrorSchema,\n    }),\n]);\nclass Transport {\n    constructor() {\n        /**\n         * Whether this transport has been disposed.\n         */\n        this.disposed = false;\n    }\n    async [Symbol.asyncDispose]() {\n        if (this.disposed) {\n            throw new Error(\"Cannot dispose twice\");\n        }\n        // Only sets disposed to true, transport implementations should override this method to\n        // perform actual cleanup.\n        this.disposed = true;\n    }\n}\nclass ClientTransport extends Transport {\n    parseIncomingMessage(message) {\n        return serverToClientMessageSchema.parse(message);\n    }\n    send(message) {\n        const result = clientToServerMessageSchema.parse(message);\n        this.sendViaTransport(result);\n    }\n    /**\n     * Called by the client port when the number of open communications changes from 0 to 1. This\n     * usually indicates the `socket.ref()` should be called to prevent the process from exiting.\n     */\n    onHavingOneOrMoreOpenCommunication() { }\n    // The following snippet is intentionally not a tsdoc (only 1 star as oppose to 2). There is\n    // likely a bug in TypeScript that when we change it to tsdoc, on darwin and linux, it causes the\n    // generated .d.ts file to be invalid. We have considered reporting this to TypeScript, but it is\n    // way too difficult to narrow down, thus we just hope this is the only case that this error\n    // occurs.\n    /*\n     * Called by the client port when the number of open communications changes from 1 or more to 0.\n     * This usually indicates the `socket.unref()` should be called to allow the process to exit.\n     */\n    onHavingNoOpenCommunication() { }\n}\n\nconst wsAuthenticationResultSchema = z.discriminatedUnion(\"success\", [\n    z.object({\n        success: z.literal(true),\n    }),\n    z.object({\n        success: z.literal(false),\n        error: z.string(),\n    }),\n]);\n\nvar WsClientTransportStatus;\n(function (WsClientTransportStatus) {\n    WsClientTransportStatus[\"Disconnected\"] = \"DISCONNECTED\";\n    WsClientTransportStatus[\"Connecting\"] = \"CONNECTING\";\n    WsClientTransportStatus[\"Connected\"] = \"CONNECTED\";\n})(WsClientTransportStatus || (WsClientTransportStatus = {}));\nclass WsClientTransport extends ClientTransport {\n    constructor(url, receivedMessage, errored, { abortSignal, parentLogger } = {}) {\n        super();\n        this.url = url;\n        this.receivedMessage = receivedMessage;\n        this.errored = errored;\n        this.ws = null;\n        this.queuedMessages = [];\n        this.status = WsClientTransportStatus.Disconnected;\n        this.resolvedUrl = null;\n        /**\n         * Whether the underlying socket should hold the process open.\n         */\n        this.shouldRef = false;\n        this.resolveDisposed = null;\n        this.abortSignal = abortSignal;\n        this.logger = new SimpleLogger(\"WsClientTransport\", parentLogger);\n    }\n    static createWsClientTransportFactory(url, { abortSignal, } = {}) {\n        return (receivedMessage, errored, parentLogger) => new WsClientTransport(url, receivedMessage, errored, {\n            abortSignal,\n            parentLogger,\n        });\n    }\n    connect() {\n        if (this.status !== WsClientTransportStatus.Disconnected) {\n            this.logger.warn(\"connect() called while not disconnected\");\n            return;\n        }\n        if (this.disposed) {\n            throw new Error(text `\r\n        Cannot establish WebSocket connection because the transport has been disposed.\r\n      `);\n        }\n        if (this.abortSignal !== undefined && this.abortSignal.aborted) {\n            throw new Error(this.abortSignal.reason);\n        }\n        this.status = WsClientTransportStatus.Connecting;\n        Promise.resolve(this.url).then(url => {\n            this.resolvedUrl = url;\n            this.ws = new WebSocket(url);\n            this.ws.addEventListener(\"open\", this.onWsOpen.bind(this));\n            this.ws.addEventListener(\"error\", event => this.onWsError(event.error));\n            this.ws.addEventListener(\"close\", () => {\n                this.onWsError(new Error(\"WebSocket connection closed\"));\n            });\n            const abortSignal = this.abortSignal;\n            if (abortSignal !== undefined) {\n                if (abortSignal.aborted) {\n                    this.onWsError(abortSignal.reason);\n                }\n                else {\n                    const abortListener = () => {\n                        this.onWsError(abortSignal.reason);\n                    };\n                    abortSignal.addEventListener(\"abort\", abortListener, { once: true });\n                    this.ws.addEventListener(\"close\", () => {\n                        abortSignal.removeEventListener(\"abort\", abortListener);\n                    });\n                }\n            }\n        });\n    }\n    onWsOpen() {\n        this.ws.addEventListener(\"message\", this.onWsMessage.bind(this));\n        this.status = WsClientTransportStatus.Connected;\n        this.queuedMessages.forEach(message => this.sendViaTransport(message));\n        this.queuedMessages = [];\n        this.updateShouldRef(this.shouldRef);\n        // this.setupWebsocketKeepAlive(this.ws!, this.onWsTimeout.bind(this));\n    }\n    onWsMessage(event) {\n        if (this.status !== WsClientTransportStatus.Connected) {\n            this.logger.warn(\"Received message while not connected. Message ignored:\", event.data);\n            return;\n        }\n        let message;\n        try {\n            message = JSON.parse(String(event.data));\n        }\n        catch (error) {\n            this.logger.warn(\"Received invalid JSON message from server:\", event.data);\n            return;\n        }\n        let parsed;\n        try {\n            parsed = this.parseIncomingMessage(message);\n        }\n        catch (error) {\n            this.logger.warn(\"Received invalid message from server:\", message);\n            return;\n        }\n        this.receivedMessage(parsed);\n    }\n    onWsError(error) {\n        if (this.status === WsClientTransportStatus.Disconnected) {\n            return;\n        }\n        this.logger.warn(\"WebSocket error:\", error);\n        if (error.code === \"ECONNREFUSED\") {\n            this.logger.warnText `\r\n        WebSocket connection refused. This can happen if the server is not running or the client\r\n        is trying to connect to the wrong path. The server path that this client is\r\n        attempting to connect to is:\r\n        ${this.resolvedUrl ?? \"Unknown\" /* Should never be Unknown */}.\r\n\r\n        Please make sure the following:\r\n\r\n          1. LM Studio is running\r\n\r\n          2. The API server in LM Studio has started\r\n\r\n          3. The client is attempting to connect to the correct path\r\n      `;\n        }\n        try {\n            this.ws?.close();\n        }\n        catch (error) {\n            // Ignore\n        }\n        this.status = WsClientTransportStatus.Disconnected;\n        this.errored(error);\n    }\n    onWsTimeout() {\n        if (this.status === WsClientTransportStatus.Disconnected) {\n            return;\n        }\n        this.logger.warn(\"Websocket timed out\");\n        try {\n            this.ws?.close();\n        }\n        catch (error) {\n            // Ignore\n        }\n        this.status = WsClientTransportStatus.Disconnected;\n        this.errored(new Error(\"WebSocket timed out\"));\n    }\n    onHavingNoOpenCommunication() {\n        this.updateShouldRef(false);\n        if (this.disposed && this.resolveDisposed !== null) {\n            // If the transport is disposed, we can resolve the disposed promise to allow the\n            // async dispose to complete.\n            this.resolveDisposed();\n            this.resolveDisposed = null;\n        }\n    }\n    onHavingOneOrMoreOpenCommunication() {\n        this.updateShouldRef(true);\n    }\n    updateShouldRef(shouldRef) {\n        this.shouldRef = shouldRef;\n        if (this.ws === null) {\n            return;\n        }\n        if (!this.ws._socket) {\n            return;\n        }\n        if (shouldRef) {\n            this.ws._socket.ref();\n        }\n        else {\n            this.ws._socket.unref();\n        }\n    }\n    sendViaTransport(message) {\n        if (this.status === WsClientTransportStatus.Connected) {\n            this.ws.send(JSON.stringify(message));\n        }\n        else {\n            this.queuedMessages.push(message);\n            if (this.status === WsClientTransportStatus.Disconnected) {\n                this.connect();\n            }\n        }\n    }\n    async [Symbol.asyncDispose]() {\n        await super[Symbol.asyncDispose]();\n        if (this.shouldRef) {\n            // If the connection needs to held up, wait until all communications are terminates\n            const { promise: disposedPromise, resolve: resolveDisposed } = makePromise();\n            this.resolveDisposed = resolveDisposed;\n            await disposedPromise;\n        }\n        if (this.ws !== null) {\n            try {\n                this.ws.close();\n            }\n            catch (error) {\n                // Ignore\n            }\n            this.ws = null;\n        }\n        this.errored(new Error(\"WebSocket client transport disposed\"));\n        this.status = WsClientTransportStatus.Disconnected;\n    }\n}\n\nclass AuthenticatedWsClientTransport extends WsClientTransport {\n    constructor(url, clientIdentifier, clientPasskey, receivedMessage, errored, { parentLogger, abortSignal } = {}) {\n        super(url, receivedMessage, errored, { parentLogger, abortSignal });\n        this.clientIdentifier = clientIdentifier;\n        this.clientPasskey = clientPasskey;\n        this.logger = this.logger.subclass(\"AuthenticatedWsClientTransport\");\n    }\n    static createAuthenticatedWsClientTransportFactory({ url, clientIdentifier, clientPasskey, abortSignal, }) {\n        return (receivedMessage, errored, parentLogger) => new AuthenticatedWsClientTransport(url, clientIdentifier, clientPasskey, receivedMessage, errored, { parentLogger, abortSignal });\n    }\n    onWsOpen() {\n        this.ws.send(JSON.stringify({\n            authVersion: 1,\n            clientIdentifier: this.clientIdentifier,\n            clientPasskey: this.clientPasskey,\n        }));\n        this.ws.addEventListener(\"message\", (event) => {\n            try {\n                const data = JSON.parse(event.data.toString(\"utf-8\"));\n                const result = wsAuthenticationResultSchema.parse(data);\n                if (result.success) {\n                    super.onWsOpen();\n                }\n                else {\n                    this.onWsError(new Error(\"Failed to authenticate: \" + result.error));\n                }\n            }\n            catch (error) {\n                this.onWsError(new Error(\"Failed to parse authentication result: \" + error?.message));\n            }\n        }, {\n            once: true,\n        });\n    }\n}\n\nfunction defaultErrorDeserializer(serialized, directCause, stack) {\n    return fromSerializedError(serialized, directCause, stack);\n}\nclass ClientPort {\n    constructor(backendInterface, factory, { parentLogger, errorDeserializer, verboseErrorMessage, } = {}) {\n        this.backendInterface = backendInterface;\n        this.openChannels = new Map();\n        this.ongoingRpcs = new Map();\n        this.openSignalSubscriptions = new Map();\n        this.openWritableSignalSubscriptions = new Map();\n        this.openCommunicationsCount = 0;\n        this.nextChannelId = 0;\n        this.nextSubscribeId = 0;\n        this.nextWritableSubscribeId = 0;\n        this.producedCommunicationWarningsCount = 0;\n        this.receivedMessage = (message) => {\n            switch (message.type) {\n                case \"channelSend\": {\n                    this.receivedChannelSend(message);\n                    break;\n                }\n                case \"channelAck\": {\n                    this.receivedChannelAck(message);\n                    break;\n                }\n                case \"channelClose\": {\n                    this.receivedChannelClose(message);\n                    break;\n                }\n                case \"channelError\": {\n                    this.receivedChannelError(message);\n                    break;\n                }\n                case \"rpcResult\": {\n                    this.receivedRpcResult(message);\n                    break;\n                }\n                case \"rpcError\": {\n                    this.receivedRpcError(message);\n                    break;\n                }\n                case \"signalUpdate\": {\n                    this.receivedSignalUpdate(message);\n                    break;\n                }\n                case \"signalError\": {\n                    this.receivedSignalError(message);\n                    break;\n                }\n                case \"writableSignalUpdate\": {\n                    this.receivedWritableSignalUpdate(message);\n                    break;\n                }\n                case \"writableSignalError\": {\n                    this.receivedWritableSignalError(message);\n                    break;\n                }\n                case \"communicationWarning\": {\n                    this.receivedCommunicationWarning(message);\n                    break;\n                }\n                case \"keepAliveAck\": {\n                    this.receivedKeepAliveAck(message);\n                    break;\n                }\n            }\n        };\n        this.errored = (error) => {\n            for (const openChannel of this.openChannels.values()) {\n                openChannel.errored(error);\n            }\n            this.openChannels.clear();\n            for (const ongoingRpc of this.ongoingRpcs.values()) {\n                ongoingRpc.reject(error);\n            }\n            this.ongoingRpcs.clear();\n            for (const openSignalSubscription of this.openSignalSubscriptions.values()) {\n                openSignalSubscription.errored(error);\n            }\n            this.openSignalSubscriptions.clear();\n            for (const openWritableSignalSubscription of this.openWritableSignalSubscriptions.values()) {\n                openWritableSignalSubscription.errored(error);\n            }\n            this.openWritableSignalSubscriptions.clear();\n            this.updateOpenCommunicationsCount();\n        };\n        this.logger = new SimpleLogger(\"ClientPort\", parentLogger);\n        this.errorDeserializer = errorDeserializer ?? defaultErrorDeserializer;\n        this.verboseErrorMessage = verboseErrorMessage ?? true;\n        this.transport = factory(this.receivedMessage, this.errored, this.logger);\n    }\n    communicationWarning(warning) {\n        if (this.producedCommunicationWarningsCount >= 5) {\n            return;\n        }\n        this.logger.warnText `\r\n      Produced communication warning: ${warning}\r\n      \r\n      This is usually caused by communication protocol incompatibility. Please make sure you are\r\n      using the up-to-date versions of the SDK and LM Studio.\r\n    `;\n        this.transport.send({\n            type: \"communicationWarning\",\n            warning,\n        });\n        this.producedCommunicationWarningsCount++;\n        if (this.producedCommunicationWarningsCount >= 5) {\n            this.logger.errorText `\r\n        5 communication warnings have been produced. Further warnings will not be printed.\r\n      `;\n        }\n    }\n    updateOpenCommunicationsCount() {\n        const previousCount = this.openCommunicationsCount;\n        this.openCommunicationsCount =\n            this.openChannels.size +\n                this.ongoingRpcs.size +\n                this.openSignalSubscriptions.size +\n                this.openWritableSignalSubscriptions.size;\n        if (this.openCommunicationsCount === 0 && previousCount > 0) {\n            this.transport.onHavingNoOpenCommunication();\n        }\n        else if (this.openCommunicationsCount === 1 && previousCount === 0) {\n            this.transport.onHavingOneOrMoreOpenCommunication();\n        }\n    }\n    receivedChannelSend(message) {\n        const openChannel = this.openChannels.get(message.channelId);\n        if (openChannel === undefined) {\n            this.communicationWarning(`Received channelSend for unknown channel, channelId = ${message.channelId}`);\n            return;\n        }\n        const deserializedMessage = deserialize(openChannel.endpoint.serialization, message.message);\n        const parsed = openChannel.endpoint.toClientPacket.safeParse(deserializedMessage);\n        if (!parsed.success) {\n            this.communicationWarning(text `\r\n        Received invalid message for channel: endpointName = ${openChannel.endpoint.name}, message =\r\n        ${deserializedMessage}. Zod error:\r\n\r\n        ${Validator.prettyPrintZod(\"message\", parsed.error)}\r\n      `);\n            return;\n        }\n        openChannel.receivedMessage(parsed.data);\n    }\n    receivedChannelAck(message) {\n        const openChannel = this.openChannels.get(message.channelId);\n        if (openChannel === undefined) {\n            this.communicationWarning(`Received channelAck for unknown channel, channelId = ${message.channelId}`);\n            return;\n        }\n        openChannel.receivedAck(message.ackId);\n    }\n    receivedChannelClose(message) {\n        const openChannel = this.openChannels.get(message.channelId);\n        if (openChannel === undefined) {\n            this.communicationWarning(`Received channelClose for unknown channel, channelId = ${message.channelId}`);\n            return;\n        }\n        this.openChannels.delete(message.channelId);\n        openChannel.closed();\n        this.updateOpenCommunicationsCount();\n    }\n    receivedChannelError(message) {\n        const openChannel = this.openChannels.get(message.channelId);\n        if (openChannel === undefined) {\n            this.communicationWarning(`Received channelError for unknown channel, channelId = ${message.channelId}`);\n            return;\n        }\n        this.openChannels.delete(message.channelId);\n        const error = this.errorDeserializer(message.error, \"Channel Error\", this.verboseErrorMessage ? openChannel.stack : undefined);\n        openChannel.errored(error);\n        this.updateOpenCommunicationsCount();\n    }\n    receivedRpcResult(message) {\n        const ongoingRpc = this.ongoingRpcs.get(message.callId);\n        if (ongoingRpc === undefined) {\n            this.communicationWarning(`Received rpcResult for unknown rpc, callId = ${message.callId}`);\n            return;\n        }\n        const deserializedResult = deserialize(ongoingRpc.endpoint.serialization, message.result);\n        const parsed = ongoingRpc.endpoint.returns.safeParse(deserializedResult);\n        if (!parsed.success) {\n            this.communicationWarning(text `\r\n        Received invalid result for rpc, endpointName = ${ongoingRpc.endpoint.name}, result =\r\n        ${deserializedResult}. Zod error:\r\n\r\n        ${Validator.prettyPrintZod(\"result\", parsed.error)}\r\n      `);\n            return;\n        }\n        ongoingRpc.resolve(parsed.data);\n        this.ongoingRpcs.delete(message.callId);\n        this.updateOpenCommunicationsCount();\n    }\n    receivedRpcError(message) {\n        const ongoingRpc = this.ongoingRpcs.get(message.callId);\n        if (ongoingRpc === undefined) {\n            this.communicationWarning(`Received rpcError for unknown rpc, callId = ${message.callId}`);\n            return;\n        }\n        const error = this.errorDeserializer(message.error, \"RPC Error\", this.verboseErrorMessage ? ongoingRpc.stack : undefined);\n        ongoingRpc.reject(error);\n        this.ongoingRpcs.delete(message.callId);\n        this.updateOpenCommunicationsCount();\n    }\n    receivedSignalUpdate(message) {\n        const openSignalSubscription = this.openSignalSubscriptions.get(message.subscribeId);\n        if (openSignalSubscription === undefined) {\n            // This is caused by update and unsubscribe event happening at the same time. By the time the\n            // update has arrived at the client side, as far as the client is considered, the signal is\n            // already unsubscribed. This is a normal behavior and is especially prevalent when React\n            // StrictMode is enabled, because components are rendered twice where signals are oftentimes\n            // subscribed and then unsubscribed immediately after.\n            return;\n        }\n        const patches = message.patches.map(patch => deserialize(openSignalSubscription.endpoint.serialization, patch));\n        const beforeValue = openSignalSubscription.getValue();\n        let afterValue;\n        try {\n            afterValue = applyPatches(beforeValue, patches);\n        }\n        catch (error) {\n            this.communicationWarning(text `\r\n        Failed to apply patches to signal on signalUpdate. subscribeId = ${message.subscribeId}.\r\n\r\n        beforeValue = ${JSON.stringify(beforeValue, null, 2)},\r\n\r\n        patches = ${JSON.stringify(patches, null, 2)}.\r\n\r\n        Error: ${String(error)}\r\n      `);\n            return;\n        }\n        const parseResult = openSignalSubscription.endpoint.signalData.safeParse(afterValue);\n        if (!parseResult.success) {\n            this.communicationWarning(text `\r\n        Received invalid signal patch data, subscribeId = ${message.subscribeId}\r\n\r\n        patches = ${patches},\r\n\r\n        beforeValue = ${beforeValue},\r\n\r\n        afterValue = ${afterValue}.\r\n\r\n        Zod error:\r\n\r\n        ${Validator.prettyPrintZod(\"value\", parseResult.error)}\r\n      `);\n            return;\n        }\n        // Don't use the parsed value, as it loses the substructure identities\n        openSignalSubscription.receivedPatches(afterValue, patches, message.tags);\n    }\n    receivedSignalError(message) {\n        const openSignalSubscription = this.openSignalSubscriptions.get(message.subscribeId);\n        if (openSignalSubscription === undefined) {\n            this.communicationWarning(`Received signalError for unknown signal, subscribeId = ${message.subscribeId}`);\n            return;\n        }\n        const error = this.errorDeserializer(message.error, \"Signal Error\", this.verboseErrorMessage ? openSignalSubscription.stack : undefined);\n        openSignalSubscription.errored(error);\n        this.openSignalSubscriptions.delete(message.subscribeId);\n        this.updateOpenCommunicationsCount();\n    }\n    receivedWritableSignalUpdate(message) {\n        const openSignalSubscription = this.openWritableSignalSubscriptions.get(message.subscribeId);\n        if (openSignalSubscription === undefined) {\n            // This is caused by update and unsubscribe event happening at the same time. By the time the\n            // update has arrived at the client side, as far as the client is considered, the signal is\n            // already unsubscribed. This is a normal behavior and is especially prevalent when React\n            // StrictMode is enabled, because components are rendered twice where signals are oftentimes\n            // subscribed and then unsubscribed immediately after.\n            return;\n        }\n        const patches = message.patches.map(patch => deserialize(openSignalSubscription.endpoint.serialization, patch));\n        const beforeValue = openSignalSubscription.getValue();\n        let afterValue;\n        try {\n            afterValue = applyPatches(openSignalSubscription.getValue(), patches);\n        }\n        catch (error) {\n            this.communicationWarning(text `\r\n        Failed to apply patches to writable signal on writableSignalUpdate. subscribeId =\r\n        ${message.subscribeId}.\r\n\r\n        beforeValue = ${JSON.stringify(beforeValue, null, 2)},\r\n\r\n        patches = ${JSON.stringify(patches, null, 2)}.\r\n\r\n        Error: ${String(error)}\r\n      `);\n        }\n        const parseResult = openSignalSubscription.endpoint.signalData.safeParse(afterValue);\n        if (!parseResult.success) {\n            this.communicationWarning(text `\r\n        Received invalid writable signal patch data, subscribeId = ${message.subscribeId}\r\n\r\n        patches = ${patches},\r\n\r\n        beforeValue = ${beforeValue},\r\n\r\n        afterValue = ${afterValue}.\r\n\r\n        Zod error:\r\n\r\n        ${Validator.prettyPrintZod(\"value\", parseResult.error)}\r\n      `);\n            return;\n        }\n        // Don't use the parsed value, as it loses the substructure identities\n        openSignalSubscription.firstUpdateReceived = true;\n        openSignalSubscription.receivedPatches(afterValue, patches, message.tags);\n    }\n    receivedWritableSignalError(message) {\n        const openSignalSubscription = this.openWritableSignalSubscriptions.get(message.subscribeId);\n        if (openSignalSubscription === undefined) {\n            this.communicationWarning(`Received writableSignalError for unknown signal, subscribeId = ${message.subscribeId}`);\n            return;\n        }\n        const error = this.errorDeserializer(message.error, \"Writable Signal Error\", this.verboseErrorMessage ? openSignalSubscription.stack : undefined);\n        openSignalSubscription.errored(error);\n        this.openWritableSignalSubscriptions.delete(message.subscribeId);\n        this.updateOpenCommunicationsCount();\n    }\n    receivedCommunicationWarning(message) {\n        this.logger.warnText `\r\n      Received communication warning from the server: ${message.warning}\r\n      \r\n      This is usually caused by communication protocol incompatibility. Please make sure you are\r\n      using the up-to-date versions of the SDK and LM Studio.\r\n\r\n      Note: This warning was received from the server and is printed on the client for convenience.\r\n    `;\n    }\n    receivedKeepAliveAck(_message) {\n        // Do nothing\n    }\n    async callRpc(endpointName, param, { stack } = {}) {\n        const endpoint = this.backendInterface.getRpcEndpoint(endpointName);\n        if (endpoint === undefined) {\n            throw new Error(`No Rpc endpoint with name ${endpointName}`);\n        }\n        const parameter = endpoint.parameter.parse(param);\n        const serializedParameter = serialize(endpoint.serialization, parameter);\n        const callId = this.nextChannelId;\n        this.nextChannelId++;\n        const { promise, resolve, reject } = makePromise();\n        stack = stack ?? getCurrentStack(1);\n        this.ongoingRpcs.set(callId, {\n            endpoint,\n            stack,\n            resolve,\n            reject,\n        });\n        this.transport.send({\n            type: \"rpcCall\",\n            endpoint: endpointName,\n            callId,\n            parameter: serializedParameter,\n        });\n        this.updateOpenCommunicationsCount();\n        return await promise;\n    }\n    createChannel(endpointName, param, onMessage, { stack } = {}) {\n        const channelEndpoint = this.backendInterface.getChannelEndpoint(endpointName);\n        if (channelEndpoint === undefined) {\n            throw new Error(`No channel endpoint with name ${endpointName}`);\n        }\n        const creationParameter = channelEndpoint.creationParameter.parse(param);\n        const serializedCreationParameter = serialize(channelEndpoint.serialization, creationParameter);\n        const channelId = this.nextChannelId;\n        this.nextChannelId++;\n        this.transport.send({\n            type: \"channelCreate\",\n            endpoint: endpointName,\n            channelId,\n            creationParameter: serializedCreationParameter,\n        });\n        stack = stack ?? getCurrentStack(1);\n        const openChannel = {\n            endpoint: channelEndpoint,\n            stack,\n            ...Channel.create(packet => {\n                const parsed = channelEndpoint.toServerPacket.parse(packet);\n                const serializedMessage = serialize(channelEndpoint.serialization, parsed);\n                this.transport.send({\n                    type: \"channelSend\",\n                    channelId,\n                    message: serializedMessage,\n                });\n            }),\n        };\n        if (onMessage !== undefined) {\n            openChannel.channel.onMessage.subscribe(onMessage);\n        }\n        this.openChannels.set(channelId, openChannel);\n        this.updateOpenCommunicationsCount();\n        return openChannel.channel;\n    }\n    /**\n     * Creates a readonly lazy signal will subscribe to the signal endpoint with the given name.\n     */\n    createSignal(endpointName, param, { stack } = {}) {\n        const signalEndpoint = this.backendInterface.getSignalEndpoint(endpointName);\n        if (signalEndpoint === undefined) {\n            throw new Error(`No signal endpoint with name ${endpointName}`);\n        }\n        const creationParameter = signalEndpoint.creationParameter.parse(param);\n        const serializedCreationParameter = serialize(signalEndpoint.serialization, creationParameter);\n        stack = stack ?? getCurrentStack(1);\n        const signal = LazySignal.createWithoutInitialValue((setDownstream, errorListener) => {\n            const subscribeId = this.nextSubscribeId;\n            this.nextSubscribeId++;\n            this.transport.send({\n                type: \"signalSubscribe\",\n                endpoint: endpointName,\n                subscribeId,\n                creationParameter: serializedCreationParameter,\n            });\n            this.openSignalSubscriptions.set(subscribeId, {\n                endpoint: signalEndpoint,\n                getValue: () => signal.get(),\n                receivedPatches: setDownstream.withValueAndPatches,\n                errored: errorListener,\n                stack,\n            });\n            this.updateOpenCommunicationsCount();\n            return () => {\n                this.transport.send({\n                    type: \"signalUnsubscribe\",\n                    subscribeId,\n                });\n                this.openSignalSubscriptions.delete(subscribeId);\n            };\n        });\n        return signal;\n    }\n    createWritableSignal(endpointName, param, { stack } = {}) {\n        const signalEndpoint = this.backendInterface.getWritableSignalEndpoint(endpointName);\n        if (signalEndpoint === undefined) {\n            throw new Error(`No writable signal endpoint with name ${endpointName}`);\n        }\n        const creationParameter = signalEndpoint.creationParameter.parse(param);\n        const serializedCreationParameter = serialize(signalEndpoint.serialization, creationParameter);\n        stack = stack ?? getCurrentStack(1);\n        let currentSubscribeId = null;\n        const writeUpstream = (_data, patches, tags) => {\n            if (currentSubscribeId === null) {\n                console.warn(\"writeUpstream called when not subscribed\");\n                return false;\n            }\n            const subscription = this.openWritableSignalSubscriptions.get(currentSubscribeId);\n            if (!subscription?.firstUpdateReceived) {\n                console.warn(\"writeUpstream called before the first update is received\");\n                return false;\n            }\n            this.transport.send({\n                type: \"writableSignalUpdate\",\n                subscribeId: currentSubscribeId,\n                patches: patches.map(patch => serialize(signalEndpoint.serialization, patch)),\n                tags,\n            });\n            return true;\n        };\n        const [signal, setter] = OWLSignal.createWithoutInitialValue((setDownstream, errorListener) => {\n            const subscribeId = this.nextWritableSubscribeId;\n            currentSubscribeId = subscribeId;\n            this.nextWritableSubscribeId++;\n            this.transport.send({\n                type: \"writableSignalSubscribe\",\n                endpoint: endpointName,\n                subscribeId,\n                creationParameter: serializedCreationParameter,\n            });\n            this.openWritableSignalSubscriptions.set(subscribeId, {\n                endpoint: signalEndpoint,\n                getValue: () => signal.getPessimistic(),\n                receivedPatches: setDownstream.withValueAndPatches,\n                firstUpdateReceived: false,\n                errored: errorListener,\n                stack,\n            });\n            this.updateOpenCommunicationsCount();\n            return () => {\n                currentSubscribeId = null;\n                this.transport.send({\n                    type: \"writableSignalUnsubscribe\",\n                    subscribeId,\n                });\n                this.openWritableSignalSubscriptions.delete(subscribeId);\n            };\n        }, writeUpstream);\n        return [signal, setter];\n    }\n    async [Symbol.asyncDispose]() {\n        await this.transport[Symbol.asyncDispose]();\n    }\n}\n\nclass GenericClientTransport extends ClientTransport {\n    constructor(onMessage, onClose, sendMessage, receivedMessage, errored, parentLogger) {\n        super();\n        this.sendMessage = sendMessage;\n        this.receivedMessage = receivedMessage;\n        this.errored = errored;\n        this.closed = false;\n        this.logger = new SimpleLogger(\"GenericClientTransport\", parentLogger);\n        onMessage.subscribe(message => {\n            let parsed;\n            try {\n                parsed = this.parseIncomingMessage(message);\n            }\n            catch (error) {\n                this.logger.warn(\"Received invalid message from server:\", message);\n                return;\n            }\n            this.receivedMessage(parsed);\n        });\n        onClose.subscribeOnce(() => {\n            if (this.closed) {\n                return;\n            }\n            this.closed = true;\n            this.errored(new Error(\"Server closed the connection\"));\n        });\n    }\n    static createFactory(onMessage, onClose, sendMessage) {\n        return (receivedMessage, errored, parentLogger) => new GenericClientTransport(onMessage, onClose, sendMessage, receivedMessage, errored, parentLogger);\n    }\n    sendViaTransport(message) {\n        this.sendMessage(message);\n    }\n}\n\nfunction getHostedEnv() {\n    let anyWindow;\n    try {\n        anyWindow = window;\n    }\n    catch (error) {\n        anyWindow = undefined;\n    }\n    if (anyWindow !== undefined && anyWindow.lmsHostedEnv !== undefined) {\n        return anyWindow.lmsHostedEnv;\n    }\n    return null;\n}\n\n/**\n * Create a base model backend interface that are used by all domain-specific model backend\n * interfaces.\n */\nfunction createBaseModelBackendInterface(specificModelInstanceInfoSchemaInput, specificModelInfoSchemaInput) {\n    const specificModelInstanceInfoSchema = specificModelInstanceInfoSchemaInput;\n    const specificModelInfoSchema = specificModelInfoSchemaInput;\n    return new BackendInterface()\n        .addChannelEndpoint(\"loadModel\", {\n        creationParameter: z.object({\n            modelKey: z.string(),\n            identifier: z.string().optional(),\n            /**\n             * If provided, when the model is not used for this amount of time, it will be unloaded.\n             */\n            ttlMs: z.number().int().min(1).optional(),\n            loadConfigStack: kvConfigStackSchema,\n        }),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"resolved\"),\n                info: specificModelInfoSchema,\n                ambiguous: z.array(z.string()).optional(),\n            }),\n            z.object({\n                type: z.literal(\"progress\"),\n                progress: z.number(),\n            }),\n            z.object({\n                type: z.literal(\"success\"),\n                info: specificModelInstanceInfoSchema,\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"cancel\"),\n            }),\n        ]),\n    })\n        .addRpcEndpoint(\"unloadModel\", {\n        parameter: z.object({\n            identifier: z.string(),\n        }),\n        returns: z.void(),\n    })\n        .addRpcEndpoint(\"listLoaded\", {\n        parameter: z.undefined(),\n        returns: z.array(specificModelInstanceInfoSchema),\n    })\n        .addRpcEndpoint(\"getModelInfo\", {\n        parameter: z.object({\n            specifier: modelSpecifierSchema,\n            throwIfNotFound: z.boolean(),\n        }),\n        returns: specificModelInstanceInfoSchema.optional(),\n    })\n        .addRpcEndpoint(\"getLoadConfig\", {\n        parameter: z.object({\n            specifier: modelSpecifierSchema,\n        }),\n        returns: kvConfigSchema,\n    })\n        .addChannelEndpoint(\"getOrLoad\", {\n        creationParameter: z.object({\n            identifier: z.string(),\n            /**\n             * If provided and a new instance is loaded as a result of this call, it will be unloaded\n             * after idling for this amount of time.\n             */\n            loadTtlMs: z.number().int().min(1).optional(),\n            loadConfigStack: kvConfigStackSchema,\n        }),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"alreadyLoaded\"),\n                info: specificModelInstanceInfoSchema,\n            }),\n            z.object({\n                type: z.literal(\"startLoading\"),\n                identifier: z.string(),\n                info: specificModelInfoSchema,\n            }),\n            z.object({\n                // We are unloading other JIT model\n                type: z.literal(\"unloadingOtherJITModel\"),\n                info: modelInstanceInfoSchema,\n            }),\n            z.object({\n                type: z.literal(\"loadProgress\"),\n                progress: z.number(),\n            }),\n            z.object({\n                type: z.literal(\"loadSuccess\"),\n                info: specificModelInstanceInfoSchema,\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"cancel\"),\n            }),\n        ]),\n    });\n}\n\nfunction createDiagnosticsBackendInterface() {\n    return new BackendInterface().addChannelEndpoint(\"streamLogs\", {\n        creationParameter: z.void(),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"stop\"),\n            }),\n        ]),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"log\"),\n                log: diagnosticsLogEventSchema,\n            }),\n        ]),\n    });\n}\n\nfunction createEmbeddingBackendInterface() {\n    const baseModelBackendInterface = createBaseModelBackendInterface(embeddingModelInstanceInfoSchema, embeddingModelInfoSchema);\n    return baseModelBackendInterface\n        .addRpcEndpoint(\"embedString\", {\n        parameter: z.object({\n            modelSpecifier: modelSpecifierSchema,\n            inputString: z.string(),\n        }),\n        returns: z.object({\n            embedding: z.array(z.number()),\n        }),\n    })\n        .addRpcEndpoint(\"tokenize\", {\n        parameter: z.object({\n            specifier: modelSpecifierSchema,\n            inputString: z.string(),\n        }),\n        returns: z.object({\n            tokens: z.array(z.number()),\n        }),\n    })\n        .addRpcEndpoint(\"countTokens\", {\n        parameter: z.object({\n            specifier: modelSpecifierSchema,\n            inputString: z.string(),\n        }),\n        returns: z.object({\n            tokenCount: z.number().int(),\n        }),\n    });\n}\n\nfunction createFilesBackendInterface() {\n    return new BackendInterface()\n        .addRpcEndpoint(\"getLocalFileAbsolutePath\", {\n        parameter: z.object({\n            fileName: z.string(),\n        }),\n        returns: z.object({\n            path: z.string(),\n        }),\n    })\n        .addRpcEndpoint(\"uploadFileBase64\", {\n        parameter: z.object({\n            name: z.string(),\n            contentBase64: z.string(),\n        }),\n        returns: z.object({\n            identifier: z.string(),\n            fileType: fileTypeSchema,\n            sizeBytes: z.number().int(),\n        }),\n    })\n        .addChannelEndpoint(\"retrieve\", {\n        creationParameter: z.object({\n            query: z.string(),\n            fileIdentifiers: z.array(z.string()),\n            config: kvConfigSchema,\n        }),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"stop\"),\n            }),\n        ]),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"onFileProcessList\"),\n                indices: z.array(z.number().int()),\n            }),\n            z.object({\n                type: z.literal(\"onFileProcessingStart\"),\n                index: z.number().int(),\n            }),\n            z.object({\n                type: z.literal(\"onFileProcessingEnd\"),\n                index: z.number().int(),\n            }),\n            z.object({\n                type: z.literal(\"onFileProcessingStepStart\"),\n                index: z.number().int(),\n                step: retrievalFileProcessingStepSchema,\n            }),\n            z.object({\n                type: z.literal(\"onFileProcessingStepProgress\"),\n                index: z.number().int(),\n                step: retrievalFileProcessingStepSchema,\n                progress: z.number(),\n            }),\n            z.object({\n                type: z.literal(\"onFileProcessingStepEnd\"),\n                index: z.number().int(),\n                step: retrievalFileProcessingStepSchema,\n            }),\n            z.object({\n                type: z.literal(\"onSearchingStart\"),\n            }),\n            z.object({\n                type: z.literal(\"onSearchingEnd\"),\n            }),\n            z.object({\n                type: z.literal(\"result\"),\n                result: internalRetrievalResultSchema,\n            }),\n        ]),\n    })\n        .addChannelEndpoint(\"parseDocument\", {\n        creationParameter: z.object({\n            fileIdentifier: z.string(),\n            parseOpts: documentParsingOptsSchema,\n        }),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"parserLoaded\"),\n                parser: documentParsingLibraryIdentifierSchema,\n            }),\n            z.object({\n                type: z.literal(\"progress\"),\n                progress: z.number(),\n            }),\n            z.object({\n                type: z.literal(\"result\"),\n                content: z.string(),\n                parser: documentParsingLibraryIdentifierSchema,\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"cancel\"),\n            }),\n        ]),\n    })\n        .addRpcEndpoint(\"getDocumentParsingLibrary\", {\n        parameter: z.object({\n            fileIdentifier: z.string(),\n        }),\n        returns: z.object({\n            library: z.string(),\n            version: z.string(),\n        }),\n    });\n}\n\nfunction createLlmBackendInterface() {\n    const baseModelBackendInterface = createBaseModelBackendInterface(llmInstanceInfoSchema, llmInfoSchema);\n    return (baseModelBackendInterface\n        .addChannelEndpoint(\"predict\", {\n        creationParameter: z.object({\n            modelSpecifier: modelSpecifierSchema,\n            history: chatHistoryDataSchema,\n            predictionConfigStack: kvConfigStackSchema,\n            /**\n             * Which preset to use. Supports limited fuzzy matching.\n             */\n            fuzzyPresetIdentifier: z.string().optional(),\n            ignoreServerSessionConfig: z.boolean().optional(),\n        }),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"fragment\"),\n                fragment: llmPredictionFragmentSchema,\n                logprobs: z\n                    .array(z.array(z.object({ text: z.string(), logprob: z.number() })))\n                    .optional(),\n            }),\n            z.object({\n                type: z.literal(\"promptProcessingProgress\"),\n                progress: z.number(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationStart\"),\n                /**\n                 * The LLM specific call id of the tool call.\n                 */\n                toolCallId: z.string().optional(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationNameReceived\"),\n                name: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationArgumentFragmentGenerated\"),\n                content: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationEnd\"),\n                toolCallRequest: toolCallRequestSchema,\n                /**\n                 * The raw output that represents this tool call. It is recommended to present this to\n                 * the user as is, if desired.\n                 *\n                 * @remarks It is not guaranteed to be valid JSON as the model does not necessarily use\n                 * JSON to represent tool calls.\n                 */\n                rawContent: z.string().optional(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationFailed\"),\n                error: serializedLMSExtendedErrorSchema,\n                /**\n                 * The raw output that was generated by the model before the tool call. The exact nature\n                 * of this fields depends on the error. It sometimes include the entire tool calls\n                 * section, or sometimes just the single tool call that failed.\n                 *\n                 * It is recommended to present this to the user as is, if desired.\n                 */\n                rawContent: z.string().optional(),\n            }),\n            z.object({\n                type: z.literal(\"success\"),\n                stats: llmPredictionStatsSchema,\n                modelInfo: llmInstanceInfoSchema,\n                loadModelConfig: kvConfigSchema,\n                predictionConfig: kvConfigSchema,\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"cancel\"),\n            }),\n        ]),\n    })\n        .addRpcEndpoint(\"applyPromptTemplate\", {\n        parameter: z.object({\n            specifier: modelSpecifierSchema,\n            history: chatHistoryDataSchema,\n            predictionConfigStack: kvConfigStackSchema,\n            opts: llmApplyPromptTemplateOptsSchema,\n        }),\n        returns: z.object({\n            formatted: z.string(),\n        }),\n    })\n        .addRpcEndpoint(\"tokenize\", {\n        parameter: z.object({\n            specifier: modelSpecifierSchema,\n            inputString: z.string(),\n        }),\n        returns: z.object({\n            tokens: z.array(z.number()),\n        }),\n    })\n        .addRpcEndpoint(\"countTokens\", {\n        parameter: z.object({\n            specifier: modelSpecifierSchema,\n            inputString: z.string(),\n        }),\n        returns: z.object({\n            tokenCount: z.number().int(),\n        }),\n    })\n        // Starts to eagerly preload a draft model. This is useful when you want a draft model to be\n        // ready for speculative decoding.\n        .addRpcEndpoint(\"preloadDraftModel\", {\n        parameter: z.object({\n            specifier: modelSpecifierSchema,\n            draftModelKey: z.string(),\n        }),\n        returns: z.void(),\n    }));\n}\n\nfunction createPluginsBackendInterface() {\n    return (new BackendInterface()\n        /**\n         * The following method is called by a client that wants to use plugins that are registered\n         * to LM Studio.\n         */\n        .addChannelEndpoint(\"startToolUseSession\", {\n        creationParameter: z.object({\n            pluginIdentifier: z.string(),\n            pluginConfigSpecifier: pluginConfigSpecifierSchema,\n        }),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            /**\n             * The session has been started successfully. The client can now use the session. Note,\n             * there are no sessionError message because if a session fails to start, the channel\n             * will error instead.\n             */\n            z.object({\n                type: z.literal(\"sessionReady\"),\n                toolDefinitions: z.array(llmToolSchema),\n            }),\n            /**\n             * A tool call has been completed.\n             */\n            z.object({\n                type: z.literal(\"toolCallComplete\"),\n                callId: z.number(),\n                result: jsonSerializableSchema,\n            }),\n            /**\n             * A tool call has failed.\n             */\n            z.object({\n                type: z.literal(\"toolCallError\"),\n                callId: z.number(),\n                error: serializedLMSExtendedErrorSchema,\n            }),\n            /**\n             * Status update for a tool call.\n             */\n            z.object({\n                type: z.literal(\"toolCallStatus\"),\n                callId: z.number(),\n                statusText: z.string(),\n            }),\n            /**\n             * Warning message for a tool call.\n             */\n            z.object({\n                type: z.literal(\"toolCallWarn\"),\n                callId: z.number(),\n                warnText: z.string(),\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            /**\n             * Request to start a tool call. This call can be aborted using the `abortToolCall`\n             * packet. When the tool call is completed, either the `toolCallResult` or `toolCallError`\n             * packet will be sent.\n             */\n            z.object({\n                type: z.literal(\"callTool\"),\n                callId: z.number(),\n                name: z.string(),\n                arguments: jsonSerializableSchema,\n            }),\n            /**\n             * Request to abort a tool call. Upon calling this, no toolCallComplete or toolCallError\n             * packets will be sent for the call. We assume abort is done immediately.\n             */\n            z.object({\n                type: z.literal(\"abortToolCall\"),\n                callId: z.number(),\n            }),\n            /**\n             * Client requests to discard the session. Upon calling this, the channel will be closed.\n             */\n            z.object({\n                type: z.literal(\"discardSession\"),\n            }),\n        ]),\n    })\n        .addChannelEndpoint(\"generateWithGenerator\", {\n        creationParameter: z.object({\n            pluginIdentifier: z.string(),\n            pluginConfigSpecifier: pluginConfigSpecifierSchema,\n            tools: z.array(llmToolSchema),\n            history: chatHistoryDataSchema,\n        }),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"fragment\"),\n                fragment: llmPredictionFragmentSchema,\n            }),\n            z.object({\n                type: z.literal(\"promptProcessingProgress\"),\n                progress: z.number(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationStart\"),\n                /**\n                 * The LLM specific call id of the tool call.\n                 */\n                toolCallId: z.string().optional(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationNameReceived\"),\n                name: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationArgumentFragmentGenerated\"),\n                content: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationEnd\"),\n                toolCallRequest: toolCallRequestSchema,\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationFailed\"),\n            }),\n            z.object({\n                type: z.literal(\"success\"),\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"cancel\"),\n            }),\n        ]),\n    })\n        /**\n         * The following method is called by the controlling client. (e.g. lms-cli)\n         */\n        .addChannelEndpoint(\"registerDevelopmentPlugin\", {\n        creationParameter: z.object({\n            manifest: pluginManifestSchema,\n        }),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"ready\"),\n                clientIdentifier: z.string(),\n                clientPasskey: z.string(),\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"end\"),\n            }),\n        ]),\n    })\n        .addRpcEndpoint(\"reindexPlugins\", {\n        parameter: z.void(),\n        returns: z.void(),\n    })\n        /**\n         * The following method is called by the plugin client. (plugin:*)\n         */\n        .addChannelEndpoint(\"setPromptPreprocessor\", {\n        creationParameter: z.void(),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"preprocess\"),\n                taskId: z.string(),\n                input: chatMessageDataSchema,\n                config: kvConfigSchema,\n                pluginConfig: kvConfigSchema,\n                globalPluginConfig: kvConfigSchema,\n                workingDirectoryPath: z.string().nullable(),\n                /**\n                 * An array of all the plugins that are enabled for this prediction.\n                 */\n                enabledPluginInfos: z.array(remotePluginInfoSchema),\n                /** Processing Context Identifier */\n                pci: z.string(),\n                token: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"abort\"),\n                taskId: z.string(),\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"complete\"),\n                taskId: z.string(),\n                processed: chatMessageDataSchema,\n            }),\n            z.object({\n                type: z.literal(\"aborted\"),\n                taskId: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"error\"),\n                taskId: z.string(),\n                error: serializedLMSExtendedErrorSchema,\n            }),\n        ]),\n    })\n        .addChannelEndpoint(\"setPredictionLoopHandler\", {\n        creationParameter: z.void(),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"handlePredictionLoop\"),\n                taskId: z.string(),\n                config: kvConfigSchema,\n                pluginConfig: kvConfigSchema,\n                globalPluginConfig: kvConfigSchema,\n                workingDirectoryPath: z.string().nullable(),\n                /**\n                 * An array of all the plugins that are enabled for this prediction.\n                 */\n                enabledPluginInfos: z.array(remotePluginInfoSchema),\n                /** Processing Context Identifier */\n                pci: z.string(),\n                token: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"abort\"),\n                taskId: z.string(),\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"complete\"),\n                taskId: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"aborted\"),\n                taskId: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"error\"),\n                taskId: z.string(),\n                error: serializedLMSExtendedErrorSchema,\n            }),\n        ]),\n    })\n        .addChannelEndpoint(\"setToolsProvider\", {\n        creationParameter: z.void(),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            /**\n             * Starts a \"tool providing session\". Once this is received, the plugin should call the\n             * tools provider and pass the tools to the server using the `sessionInitialized` packet.\n             *\n             * If the initialization failed, the plugin should send the `sessionInitializationFailed`\n             * packet.\n             */\n            z.object({\n                type: z.literal(\"initSession\"),\n                pluginConfig: kvConfigSchema,\n                globalPluginConfig: kvConfigSchema,\n                workingDirectoryPath: z.string().nullable(),\n                sessionId: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"discardSession\"),\n                sessionId: z.string(),\n            }),\n            /**\n             * Call a tool within a session. The plugin should call the tool and return the result\n             * using the `toolCallComplete` packet.\n             *\n             * If the tool call fails in an unrecoverable way the plugin can send the `toolCallError`\n             * packet.\n             */\n            z.object({\n                type: z.literal(\"callTool\"),\n                sessionId: z.string(),\n                callId: z.string(),\n                toolName: z.string(),\n                parameters: jsonSerializableSchema,\n            }),\n            /**\n             * Abort a tool call. The plugin should abort the tool call and confirm the abort using\n             * the `toolCallAborted` packet.\n             */\n            z.object({\n                type: z.literal(\"abortToolCall\"),\n                sessionId: z.string(),\n                callId: z.string(),\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            /**\n             * The plugin has provided a list of tools in a new session.\n             */\n            z.object({\n                type: z.literal(\"sessionInitialized\"),\n                sessionId: z.string(),\n                toolDefinitions: z.array(llmToolSchema),\n            }),\n            z.object({\n                type: z.literal(\"sessionInitializationFailed\"),\n                sessionId: z.string(),\n                error: serializedLMSExtendedErrorSchema,\n            }),\n            z.object({\n                type: z.literal(\"toolCallComplete\"),\n                sessionId: z.string(),\n                callId: z.string(),\n                result: jsonSerializableSchema,\n            }),\n            z.object({\n                type: z.literal(\"toolCallError\"),\n                sessionId: z.string(),\n                callId: z.string(),\n                error: serializedLMSExtendedErrorSchema,\n            }),\n            z.object({\n                type: z.literal(\"toolCallStatus\"),\n                sessionId: z.string(),\n                callId: z.string(),\n                statusText: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallWarn\"),\n                sessionId: z.string(),\n                callId: z.string(),\n                warnText: z.string(),\n            }),\n        ]),\n    })\n        .addChannelEndpoint(\"setGenerator\", {\n        creationParameter: z.void(),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"generate\"),\n                taskId: z.string(),\n                input: chatHistoryDataSchema,\n                pluginConfig: kvConfigSchema,\n                globalPluginConfig: kvConfigSchema,\n                toolDefinitions: z.array(llmToolSchema),\n                workingDirectoryPath: z.string().nullable(),\n            }),\n            z.object({\n                type: z.literal(\"abort\"),\n                taskId: z.string(),\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"complete\"),\n                taskId: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"aborted\"),\n                taskId: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"error\"),\n                taskId: z.string(),\n                error: serializedLMSExtendedErrorSchema,\n            }),\n            z.object({\n                type: z.literal(\"fragmentGenerated\"),\n                taskId: z.string(),\n                content: z.string(),\n                opts: llmPredictionFragmentInputOptsSchema,\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationStarted\"),\n                taskId: z.string(),\n                toolCallId: z.string().optional(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationNameReceived\"),\n                taskId: z.string(),\n                toolName: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationArgumentFragmentGenerated\"),\n                taskId: z.string(),\n                content: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationEnded\"),\n                taskId: z.string(),\n                toolCallRequest: toolCallRequestSchema,\n            }),\n            z.object({\n                type: z.literal(\"toolCallGenerationFailed\"),\n                taskId: z.string(),\n                error: serializedLMSExtendedErrorSchema,\n            }),\n        ]),\n    })\n        .addRpcEndpoint(\"processingHandleUpdate\", {\n        parameter: z.object({\n            /** Processing Context Identifier */\n            pci: z.string(),\n            token: z.string(),\n            update: processingUpdateSchema,\n        }),\n        returns: z.void(),\n    })\n        .addRpcEndpoint(\"processingHandleRequest\", {\n        parameter: z.object({\n            /** Processing Context Identifier */\n            pci: z.string(),\n            token: z.string(),\n            request: processingRequestSchema,\n        }),\n        returns: z.object({\n            response: processingRequestResponseSchema,\n        }),\n    })\n        .addRpcEndpoint(\"processingPullHistory\", {\n        parameter: z.object({\n            /** Processing Context Identifier */\n            pci: z.string(),\n            token: z.string(),\n            includeCurrent: z.boolean(),\n        }),\n        returns: chatHistoryDataSchema,\n    })\n        .addRpcEndpoint(\"processingGetOrLoadTokenSource\", {\n        parameter: z.object({\n            /** Processing Context Identifier */\n            pci: z.string(),\n            token: z.string(),\n        }),\n        returns: z.object({\n            tokenSourceIdentifier: tokenSourceIdentifierSchema,\n        }),\n    })\n        .addRpcEndpoint(\"processingHasStatus\", {\n        parameter: z.object({\n            /** Processing Context Identifier */\n            pci: z.string(),\n            token: z.string(),\n        }),\n        returns: z.boolean(),\n    })\n        .addRpcEndpoint(\"processingNeedsNaming\", {\n        parameter: z.object({\n            /** Processing Context Identifier */\n            pci: z.string(),\n            token: z.string(),\n        }),\n        returns: z.boolean(),\n    })\n        .addRpcEndpoint(\"processingSuggestName\", {\n        parameter: z.object({\n            /** Processing Context Identifier */\n            pci: z.string(),\n            token: z.string(),\n            name: z.string(),\n        }),\n        returns: z.void(),\n    })\n        .addRpcEndpoint(\"processingSetSenderName\", {\n        parameter: z.object({\n            /** Processing Context Identifier */\n            pci: z.string(),\n            token: z.string(),\n            name: z.string(),\n        }),\n        returns: z.void(),\n    })\n        .addRpcEndpoint(\"setConfigSchematics\", {\n        parameter: z.object({\n            schematics: serializedKVConfigSchematicsSchema,\n        }),\n        returns: z.void(),\n    })\n        .addRpcEndpoint(\"setGlobalConfigSchematics\", {\n        parameter: z.object({\n            schematics: serializedKVConfigSchematicsSchema,\n        }),\n        returns: z.void(),\n    })\n        .addRpcEndpoint(\"pluginInitCompleted\", {\n        parameter: z.void(),\n        returns: z.void(),\n    }));\n}\n\nfunction createRepositoryBackendInterface() {\n    return (new BackendInterface()\n        .addRpcEndpoint(\"searchModels\", {\n        parameter: z.object({\n            opts: modelSearchOptsSchema,\n        }),\n        returns: z.object({\n            results: z.array(modelSearchResultEntryDataSchema),\n        }),\n    })\n        .addRpcEndpoint(\"getModelDownloadOptions\", {\n        parameter: z.object({\n            modelSearchResultIdentifier: modelSearchResultIdentifierSchema,\n        }),\n        returns: z.object({\n            results: z.array(modelSearchResultDownloadOptionDataSchema),\n        }),\n    })\n        .addChannelEndpoint(\"downloadModel\", {\n        creationParameter: z.object({\n            downloadIdentifier: z.string(),\n        }),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"downloadProgress\"),\n                update: downloadProgressUpdateSchema,\n            }),\n            z.object({\n                type: z.literal(\"startFinalizing\"),\n            }),\n            z.object({\n                type: z.literal(\"success\"),\n                defaultIdentifier: z.string(),\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"cancel\"),\n            }),\n        ]),\n    })\n        /**\n         * Downloads one singular artifact at a certain revision. Ignore dependencies.\n         */\n        .addChannelEndpoint(\"downloadArtifact\", {\n        creationParameter: z.object({\n            artifactOwner: kebabCaseSchema,\n            artifactName: kebabCaseWithDotsSchema,\n            revisionNumber: z.number().int().nullable(),\n            path: z.string(),\n        }),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"downloadProgress\"),\n                update: downloadProgressUpdateSchema,\n            }),\n            z.object({\n                type: z.literal(\"startFinalizing\"),\n            }),\n            z.object({\n                type: z.literal(\"success\"),\n            }),\n        ]),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"cancel\"),\n            }),\n        ]),\n    })\n        .addRpcEndpoint(\"installPluginDependencies\", {\n        parameter: z.object({\n            pluginFolder: z.string(),\n        }),\n        returns: z.void(),\n    })\n        /**\n         * Given the path to a local artifact folder, returns the list of files in that folder that\n         * would be pushed when invoking the pushArtifact endpoint.\n         */\n        .addRpcEndpoint(\"getLocalArtifactFiles\", {\n        parameter: z.object({\n            path: z.string(),\n        }),\n        returns: z.object({\n            fileList: localArtifactFileListSchema,\n        }),\n    })\n        .addChannelEndpoint(\"pushArtifact\", {\n        creationParameter: z.object({\n            path: z.string(),\n            description: z.string().max(1000).optional(),\n            /**\n             * Request to make the artifact private. Only effective if the artifact did not exist\n             * before. Will not change the visibility of an existing artifact.\n             */\n            makePrivate: z.boolean().optional(),\n            /**\n             * If true, will write the revision number of the artifact after the push back to the\n             * artifact manifest.json.\n             */\n            writeRevision: z.boolean().optional(),\n            overrides: jsonSerializableSchema.optional(),\n        }),\n        toServerPacket: z.void(),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"message\"),\n                message: z.string(),\n            }),\n        ]),\n    })\n        .addChannelEndpoint(\"ensureAuthenticated\", {\n        creationParameter: z.void(),\n        toServerPacket: z.void(),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"authenticationUrl\"),\n                url: z.string(),\n            }),\n            z.object({\n                type: z.literal(\"authenticated\"),\n            }),\n        ]),\n    })\n        .addRpcEndpoint(\"loginWithPreAuthenticatedKeys\", {\n        parameter: z.object({\n            keyId: z.string(),\n            publicKey: z.string(),\n            privateKey: z.string(),\n        }),\n        returns: z.object({\n            userName: z.string(),\n        }),\n    })\n        /**\n         * Given the owner and name of an artifact, creates a download plan for the artifact. Throws\n         * an error is the artifact is not found.\n         */\n        .addChannelEndpoint(\"createArtifactDownloadPlan\", {\n        creationParameter: z.object({\n            owner: kebabCaseSchema,\n            name: kebabCaseWithDotsSchema,\n        }),\n        toServerPacket: z.discriminatedUnion(\"type\", [\n            /**\n             * If called before committing the plan, the plan is aborted. If called after committing\n             * the plan, the download is canceled.\n             */\n            z.object({\n                type: z.literal(\"cancel\"),\n            }),\n            /**\n             * Can only be called after plan ready. Once called, starts the plan.\n             */\n            z.object({\n                type: z.literal(\"commit\"),\n            }),\n        ]),\n        toClientPacket: z.discriminatedUnion(\"type\", [\n            z.object({\n                type: z.literal(\"planUpdated\"),\n                plan: artifactDownloadPlanSchema,\n            }),\n            z.object({\n                type: z.literal(\"planReady\"),\n                plan: artifactDownloadPlanSchema,\n            }),\n            z.object({\n                type: z.literal(\"downloadProgress\"),\n                update: downloadProgressUpdateSchema,\n            }),\n            z.object({\n                type: z.literal(\"startFinalizing\"),\n            }),\n            z.object({\n                type: z.literal(\"success\"),\n            }),\n        ]),\n    }));\n}\n\nfunction createSystemBackendInterface() {\n    return (new BackendInterface()\n        .addRpcEndpoint(\"listDownloadedModels\", {\n        parameter: z.void(),\n        returns: z.array(modelInfoSchema),\n    })\n        .addChannelEndpoint(\"alive\", {\n        creationParameter: z.void(),\n        toServerPacket: z.void(),\n        toClientPacket: z.void(),\n    })\n        .addRpcEndpoint(\"notify\", {\n        parameter: backendNotificationSchema,\n        returns: z.void(),\n    })\n        /**\n         * Get the LM Studio version\n         */\n        .addRpcEndpoint(\"version\", {\n        parameter: z.void(),\n        returns: z.object({\n            /**\n             * `major.minor.patch`\n             */\n            version: z.string(),\n            /**\n             * LM Studio build number\n             */\n            build: z.number(),\n        }),\n    })\n        .addRpcEndpoint(\"setExperimentFlag\", {\n        parameter: z.object({\n            code: z.string(),\n            value: z.boolean(),\n        }),\n        returns: z.void(),\n    })\n        .addRpcEndpoint(\"getExperimentFlags\", {\n        parameter: z.void(),\n        returns: z.array(z.string()),\n    })\n        .addRpcEndpoint(\"startHttpServer\", {\n        parameter: z.object({\n            port: z.number().int().min(1).max(65535).optional(),\n            cors: z.boolean().optional(),\n        }),\n        returns: z.void(),\n    })\n        .addRpcEndpoint(\"stopHttpServer\", {\n        parameter: z.void(),\n        returns: z.void(),\n    }));\n}\n\nfunction createAuthenticatedIpcTransportFactory(apiNamespace, hostedEnv, clientIdentifier, clientPasskey) {\n    const [onMessage, emitOnMessage] = BufferedEvent.create();\n    const [onClose, emitOnClose] = BufferedEvent.create();\n    const sendToServer = hostedEnv.getApiIpcTunnel(apiNamespace, {\n        authVersion: 1,\n        clientIdentifier: clientIdentifier,\n        clientPasskey: clientPasskey,\n    }, emitOnMessage, emitOnClose);\n    return GenericClientTransport.createFactory(onMessage, onClose, sendToServer);\n}\nfunction createAuthenticatedWsTransportFactory(apiNamespace, wsAddress, clientIdentifier, clientPasskey) {\n    return AuthenticatedWsClientTransport.createAuthenticatedWsClientTransportFactory({\n        url: Promise.resolve(wsAddress).then(wsAddress => `${wsAddress}/${apiNamespace}`),\n        clientIdentifier: clientIdentifier,\n        clientPasskey: clientPasskey,\n    });\n}\nfunction createAuthenticatedClientPort(backendInterface, wsAddress, apiNamespace, clientIdentifier, clientPasskey, logger, { errorDeserializer, verboseErrorMessage, } = {}) {\n    const hostedEnv = getHostedEnv();\n    if (hostedEnv !== null) {\n        if (wsAddress !== undefined) {\n            logger.debug(\"Ignoring wsAddress parameter when constructing the client because the client is\" +\n                \" running in a hosted environment. This is not an error.\");\n        }\n        return new ClientPort(backendInterface, createAuthenticatedIpcTransportFactory(apiNamespace, hostedEnv, clientIdentifier, clientPasskey), { parentLogger: logger, errorDeserializer, verboseErrorMessage });\n    }\n    else {\n        return new ClientPort(backendInterface, createAuthenticatedWsTransportFactory(apiNamespace, wsAddress, clientIdentifier, clientPasskey), { parentLogger: logger, errorDeserializer, verboseErrorMessage });\n    }\n}\n\n/** @public */\nclass DiagnosticsNamespace {\n    /** @internal */\n    constructor(diagnosticsPort, validator, parentLogger) {\n        this.diagnosticsPort = diagnosticsPort;\n        this.validator = validator;\n        this.logger = new SimpleLogger(\"Diagnostics\", parentLogger);\n    }\n    /**\n     * Register a callback to receive log events. Return a function to stop receiving log events.\n     *\n     * This method is in alpha. Do not use this method in production yet.\n     * @alpha\n     */\n    unstable_streamLogs(listener) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"client.diagnostics\", \"unstable_streamLogs\", \"listener\", z.function(), listener, stack);\n        const channel = this.diagnosticsPort.createChannel(\"streamLogs\", undefined, undefined, {\n            stack,\n        });\n        const unsubscribe = channel.onMessage.subscribe(message => {\n            if (message.type === \"log\") {\n                listener(message.log);\n            }\n        });\n        return () => {\n            unsubscribe();\n            channel.send({\n                type: \"stop\",\n            });\n        };\n    }\n}\n\nfunction makeLoadModelOptsSchema(loadModelConfigSchema) {\n    return z.object({\n        identifier: z.string().optional(),\n        config: loadModelConfigSchema.optional(),\n        signal: z.instanceof(AbortSignal).optional(),\n        ttl: z.number().optional(),\n        verbose: z.union([z.boolean(), logLevelSchema]).optional(),\n        onProgress: z.function().optional(),\n    });\n}\n/**\n * Abstract namespace for namespaces that deal with models.\n *\n * @public\n */\nclass ModelNamespace {\n    /** @internal */\n    getLoadModelOptsSchema() {\n        if (this.loadModelOptsSchema === null) {\n            this.loadModelOptsSchema = makeLoadModelOptsSchema(this.loadModelConfigSchema);\n        }\n        return this.loadModelOptsSchema;\n    }\n    /** @internal */\n    constructor(\n    /** @internal */\n    client, \n    /** @internal */\n    port, \n    /** @internal */\n    logger, \n    /** @internal */\n    validator) {\n        this.client = client;\n        this.port = port;\n        this.logger = logger;\n        this.validator = validator;\n        /** @internal */\n        this.loadModelOptsSchema = null;\n    }\n    /**\n     * Load a model for inferencing. The first parameter is the model key. The second parameter is an\n     * optional object with additional options.\n     *\n     * To find out what models are available, you can use the `lms ls` command, or programmatically\n     * use the `client.system.listDownloadedModels` method.\n     *\n     * Here are some examples:\n     *\n     * Loading Llama 3.2:\n     *\n     * ```typescript\n     * const model = await client.llm.load(\"llama-3.2-3b-instruct\");\n     * ```\n     *\n     * Once loaded, see {@link LLMDynamicHandle} or {@link EmbeddingDynamicHandle} for how to use the\n     * model for inferencing or other things you can do with the model.\n     *\n     * @param modelKey - The path of the model to load.\n     * @param opts - Options for loading the model.\n     * @returns A promise that resolves to the model that can be used for inferencing\n     */\n    async load(modelKey, opts = {}) {\n        const stack = getCurrentStack(1);\n        [modelKey, opts] = this.validator.validateMethodParamsOrThrow(`client.${this.namespace}`, \"load\", [\"modelKey\", \"opts\"], [reasonableKeyStringSchema, this.getLoadModelOptsSchema()], [modelKey, opts], stack);\n        const { identifier, signal, verbose = \"info\", config, onProgress } = opts;\n        let lastVerboseCallTime = 0;\n        const { promise, resolve, reject } = makePromise();\n        const verboseLevel = typeof verbose === \"boolean\" ? \"info\" : verbose;\n        const startTime = Date.now();\n        if (verbose) {\n            this.logger.logAtLevel(verboseLevel, text `\r\n          Verbose logging is enabled. To hide progress logs, set the \"verbose\" option to false in\r\n          client.llm.load.\r\n        `);\n        }\n        let fullPath = modelKey;\n        const channel = this.port.createChannel(\"loadModel\", {\n            modelKey,\n            identifier,\n            ttlMs: opts.ttl === undefined ? undefined : opts.ttl * 1000,\n            loadConfigStack: singleLayerKVConfigStackOf(\"apiOverride\", this.loadConfigToKVConfig(config ?? this.defaultLoadConfig)),\n        }, message => {\n            switch (message.type) {\n                case \"resolved\": {\n                    fullPath = message.info.modelKey;\n                    if (message.ambiguous !== undefined) {\n                        this.logger.warn(text `\r\n                Multiple models found for key ${modelKey}:\r\n\r\n                ${message.ambiguous.map(x => ` - ${x}`).join(\"\\n\")}\r\n\r\n                Using the first one.\r\n              `);\n                    }\n                    if (verbose) {\n                        this.logger.logAtLevel(verboseLevel, text `\r\n                  Start loading model ${fullPath}...\r\n                `);\n                    }\n                    break;\n                }\n                case \"success\": {\n                    if (verbose) {\n                        this.logger.logAtLevel(verboseLevel, text `\r\n                  Successfully loaded model ${fullPath} in ${Date.now() - startTime}ms\r\n                `);\n                    }\n                    resolve(this.createDomainSpecificModel(this.port, message.info, this.validator, this.logger));\n                    break;\n                }\n                case \"progress\": {\n                    const { progress } = message;\n                    if (onProgress !== undefined) {\n                        safeCallCallback(this.logger, \"onProgress\", onProgress, [progress]);\n                    }\n                    else if (verbose) {\n                        const now = Date.now();\n                        if (now - lastVerboseCallTime > 500 || progress === 1) {\n                            const progressText = (progress * 100).toFixed(1);\n                            this.logger.logAtLevel(verboseLevel, `Loading the model, progress: ${progressText}%`);\n                            lastVerboseCallTime = now;\n                        }\n                    }\n                }\n            }\n        }, { stack });\n        channel.onError.subscribeOnce(reject);\n        if (signal !== undefined) {\n            if (signal.aborted) {\n                // If the signal is already aborted, we should reject immediately.\n                channel.send({ type: \"cancel\" });\n                reject(signal.reason);\n            }\n            else {\n                signal.addEventListener(\"abort\", () => {\n                    channel.send({ type: \"cancel\" });\n                    reject(signal.reason);\n                }, { once: true });\n            }\n        }\n        return await promise;\n    }\n    /**\n     * Unload a model. Once a model is unloaded, it can no longer be used. If you wish to use the\n     * model afterwards, you will need to load it with {@link LLMNamespace#loadModel} again.\n     *\n     * @param identifier - The identifier of the model to unload.\n     */\n    unload(identifier) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(`client.${this.namespace}`, \"unload\", \"identifier\", reasonableKeyStringSchema, identifier, stack);\n        return this.port.callRpc(\"unloadModel\", { identifier }, { stack });\n    }\n    /**\n     * List all the currently loaded models.\n     */\n    async listLoaded() {\n        const stack = getCurrentStack(1);\n        const infos = await this.port.callRpc(\"listLoaded\", undefined, { stack });\n        return infos.map(info => this.createDomainSpecificModel(this.port, info, this.validator, this.logger));\n    }\n    /**\n     * Get any loaded model of this domain.\n     */\n    async getAny(stack) {\n        const info = await this.port.callRpc(\"getModelInfo\", { specifier: { type: \"query\", query: {} }, throwIfNotFound: true }, { stack });\n        if (info === undefined) {\n            throw new Error(\"Backend should have thrown.\");\n        }\n        return this.createDomainSpecificModel(this.port, info, this.validator, new SimpleLogger(\"LLM\", this.logger));\n    }\n    createDynamicHandle(param) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(`client.${this.namespace}`, \"createDynamicHandle\", \"param\", z.union([reasonableKeyStringSchema, modelQuerySchema]), param, stack);\n        let query;\n        if (typeof param === \"string\") {\n            query = {\n                identifier: param,\n            };\n        }\n        else {\n            query = param;\n        }\n        if (query.path?.includes(\"\\\\\")) {\n            throw makePrettyError(text `\r\n          Model path should not contain backslashes, even if you are on Windows. Use forward\r\n          slashes instead.\r\n        `, stack);\n        }\n        return this.createDomainDynamicHandle(this.port, {\n            type: \"query\",\n            query,\n        }, this.validator, new SimpleLogger(\"DynamicHandle\", this.logger));\n    }\n    /**\n     * Create a dynamic handle from the internal instance reference.\n     *\n     * @alpha\n     */\n    createDynamicHandleFromInstanceReference(instanceReference) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(`client.${this.namespace}`, \"createDynamicHandleFromInstanceReference\", \"instanceReference\", z.string(), instanceReference, stack);\n        return this.createDomainDynamicHandle(this.port, {\n            type: \"instanceReference\",\n            instanceReference,\n        }, this.validator, new SimpleLogger(\"DynamicHandle\", this.logger));\n    }\n    async model(modelKey, opts = {}) {\n        const stack = getCurrentStack(1);\n        if (modelKey === undefined) {\n            // We want to get any loaded model.\n            return await this.getAny(stack);\n        }\n        [modelKey, opts] = this.validator.validateMethodParamsOrThrow(`client.${this.namespace}`, \"model\", [\"modelKey\", \"opts\"], [reasonableKeyStringSchema, this.getLoadModelOptsSchema()], [modelKey, opts], stack);\n        const { identifier, signal, verbose = \"info\", config, onProgress } = opts;\n        if (identifier !== undefined) {\n            throw new Error(\"The identifier option is not allowed when using `.model`.\");\n        }\n        let lastVerboseCallTime = 0;\n        const { promise, resolve, reject } = makePromise();\n        const verboseLevel = typeof verbose === \"boolean\" ? \"info\" : verbose;\n        const startTime = Date.now();\n        const channel = this.port.createChannel(\"getOrLoad\", {\n            identifier: modelKey,\n            loadTtlMs: opts.ttl === undefined ? undefined : opts.ttl * 1000,\n            loadConfigStack: singleLayerKVConfigStackOf(\"apiOverride\", this.loadConfigToKVConfig(config ?? this.defaultLoadConfig)),\n        }, message => {\n            switch (message.type) {\n                case \"alreadyLoaded\": {\n                    return resolve(this.createDomainSpecificModel(this.port, message.info, this.validator, this.logger));\n                }\n                case \"unloadingOtherJITModel\": {\n                    if (verbose) {\n                        this.logger.logAtLevel(verboseLevel, text `\r\n                  Unloading other JIT model ${message.info.modelKey}. (You can disable this behavior\r\n                  by going to LM Studio -> Settings -> Developer -> Turn OFF JIT models auto-evict)\r\n                `);\n                    }\n                    break;\n                }\n                case \"startLoading\": {\n                    if (verbose) {\n                        this.logger.logAtLevel(verboseLevel, text `\r\n                  Verbose logging is enabled. To hide progress logs, set the \"verbose\" option to\r\n                  false in .model().\r\n                `);\n                        this.logger.logAtLevel(verboseLevel, text `\r\n                  Model ${modelKey} is not loaded. Start loading...\r\n                `);\n                    }\n                    break;\n                }\n                case \"loadProgress\": {\n                    const { progress } = message;\n                    if (onProgress !== undefined) {\n                        safeCallCallback(this.logger, \"onProgress\", onProgress, [progress]);\n                    }\n                    else if (verbose) {\n                        const now = Date.now();\n                        if (now - lastVerboseCallTime > 500 || progress === 1) {\n                            const progressText = (progress * 100).toFixed(1);\n                            this.logger.logAtLevel(verboseLevel, `Loading the model, progress: ${progressText}%`);\n                            lastVerboseCallTime = now;\n                        }\n                    }\n                    break;\n                }\n                case \"loadSuccess\": {\n                    if (verbose) {\n                        this.logger.logAtLevel(verboseLevel, text `\r\n                  Successfully loaded model ${message.info.modelKey} in ${Date.now() - startTime}ms\r\n                `);\n                    }\n                    resolve(this.createDomainSpecificModel(this.port, message.info, this.validator, this.logger));\n                }\n            }\n        }, { stack });\n        channel.onError.subscribeOnce(reject);\n        signal?.addEventListener(\"abort\", () => {\n            channel.send({ type: \"cancel\" });\n            reject(signal.reason);\n        });\n        return await promise;\n    }\n}\n\n/**\n * Translate a number to a checkbox numeric value.\n *\n * @param value - The value to translate.\n * @param uncheckedValue - The value to use when the checkbox is unchecked.\n * @param valueWhenUnchecked - The value to use when the checkbox is unchecked.\n */\nfunction numberToCheckboxNumeric(value, uncheckedValue, valueWhenUnchecked) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === uncheckedValue) {\n        return { checked: false, value: valueWhenUnchecked };\n    }\n    return { checked: true, value };\n}\n\n/**\n * This represents a set of requirements for a model. It is not tied to a specific model, but rather\n * to a set of requirements that a model must satisfy.\n *\n * For example, if you got the model via `client.llm.get(\"my-identifier\")`, you will get a\n * `LLMModel` for the model with the identifier `my-identifier`. If the model is unloaded, and\n * another model is loaded with the same identifier, using the same `LLMModel` will use the new\n * model.\n *\n * @public\n */\nclass DynamicHandle {\n    /**\n     * Don't construct this on your own. Use {@link LLMNamespace#get} or {@link LLMNamespace#load}\n     * instead.\n     *\n     * @internal\n     */\n    constructor(\n    /** @internal */\n    port, \n    /** @internal */\n    specifier) {\n        this.port = port;\n        this.specifier = specifier;\n    }\n    /**\n     * Gets the information of the model that is currently associated with this `DynamicHandle`. If no\n     * model is currently associated, this will return `undefined`.\n     *\n     * Note: As models are loaded/unloaded, the model associated with this `LLMModel` may change at\n     * any moment.\n     */\n    async getModelInfo() {\n        const info = await this.port.callRpc(\"getModelInfo\", { specifier: this.specifier, throwIfNotFound: false }, { stack: getCurrentStack(1) });\n        if (info === undefined) {\n            return undefined;\n        }\n        return info;\n    }\n    async getLoadConfig(stack) {\n        const loadConfig = await this.port.callRpc(\"getLoadConfig\", { specifier: this.specifier }, { stack });\n        return loadConfig;\n    }\n}\n\n/**\n * This represents a set of requirements for a model. It is not tied to a specific model, but rather\n * to a set of requirements that a model must satisfy.\n *\n * For example, if you got the model via `client.embedding.get(\"my-identifier\")`, you will get a\n * `EmbeddingModel` for the model with the identifier `my-identifier`. If the model is unloaded, and\n * another model is loaded with the same identifier, using the same `EmbeddingModel` will use the\n * new model.\n *\n * @public\n */\nclass EmbeddingDynamicHandle extends DynamicHandle {\n    /**\n     * Don't construct this on your own. Use {@link EmbeddingNamespace#get} or\n     * {@link EmbeddingNamespace#load}\n     * instead.\n     *\n     * @internal\n     */\n    constructor(\n    /** @internal */\n    port, \n    /** @internal */\n    specifier, \n    /** @internal */\n    validator, \n    /** @internal */\n    logger = new SimpleLogger(`EmbeddingModel`)) {\n        super(port, specifier);\n        this.validator = validator;\n        this.logger = logger;\n    }\n    async embed(inputString) {\n        const stack = getCurrentStack(1);\n        inputString = this.validator.validateMethodParamOrThrow(\"client.embedding\", \"embed\", \"inputString\", z.string().or(z.array(z.string())), inputString, stack);\n        if (Array.isArray(inputString)) {\n            return await Promise.all(inputString.map(s => this.port.callRpc(\"embedString\", { inputString: s, modelSpecifier: this.specifier }, { stack })));\n        }\n        else {\n            return await this.port.callRpc(\"embedString\", { inputString, modelSpecifier: this.specifier }, { stack });\n        }\n    }\n    async getContextLength() {\n        const stack = getCurrentStack(1);\n        const loadConfig = await this.getLoadConfig(stack);\n        return embeddingSharedLoadConfigSchematics.access(loadConfig, \"contextLength\");\n    }\n    async getEvalBatchSize() {\n        const stack = getCurrentStack(1);\n        const loadConfig = await this.getLoadConfig(stack);\n        return globalConfigSchematics.access(loadConfig, \"embedding.load.llama.evalBatchSize\");\n    }\n    async tokenize(inputString) {\n        const stack = getCurrentStack(1);\n        inputString = this.validator.validateMethodParamOrThrow(\"model\", \"tokenize\", \"inputString\", z.string().or(z.array(z.string())), inputString, stack);\n        if (Array.isArray(inputString)) {\n            return (await Promise.all(inputString.map(s => this.port.callRpc(\"tokenize\", { specifier: this.specifier, inputString: s }, { stack })))).map(r => r.tokens);\n        }\n        else {\n            return (await this.port.callRpc(\"tokenize\", {\n                specifier: this.specifier,\n                inputString,\n            }, { stack })).tokens;\n        }\n    }\n    async countTokens(inputString) {\n        const stack = getCurrentStack(1);\n        inputString = this.validator.validateMethodParamOrThrow(\"model\", \"countTokens\", \"inputString\", z.string(), inputString, stack);\n        return (await this.port.callRpc(\"countTokens\", {\n            specifier: this.specifier,\n            inputString,\n        }, { stack })).tokenCount;\n    }\n}\n\n/**\n * Represents a specific loaded Embedding. Most Embedding related operations are inherited from\n * {@link EmbeddingDynamicHandle}.\n *\n * @public\n */\nclass EmbeddingModel extends EmbeddingDynamicHandle {\n    /** @internal */\n    constructor(embeddingPort, info, validator, logger = new SimpleLogger(`EmbeddingModel`)) {\n        const specifier = {\n            type: \"instanceReference\",\n            instanceReference: info.instanceReference,\n        };\n        super(embeddingPort, specifier, validator, logger);\n        this.identifier = info.identifier;\n        this.path = info.path;\n        this.modelKey = info.modelKey;\n        this.format = info.format;\n        this.displayName = info.displayName;\n        this.sizeBytes = info.sizeBytes;\n    }\n    async unload() {\n        const stack = getCurrentStack(1);\n        await this.port.callRpc(\"unloadModel\", { identifier: this.identifier }, { stack });\n    }\n    async getModelInfo() {\n        const info = await super.getModelInfo();\n        if (info === undefined) {\n            const stack = getCurrentStack(1);\n            throw makePrettyError(\"This model has already been unloaded\", stack);\n        }\n        return info;\n    }\n}\n\n/** @public */\nclass EmbeddingNamespace extends ModelNamespace {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.namespace = \"embedding\";\n        /** @internal */\n        this.defaultLoadConfig = {};\n        /** @internal */\n        this.loadModelConfigSchema = embeddingLoadModelConfigSchema;\n    }\n    /** @internal */\n    loadConfigToKVConfig(config) {\n        return embeddingLlamaLoadConfigSchematics.buildPartialConfig({\n            \"llama.acceleration.offloadRatio\": config.gpu?.ratio,\n            \"load.gpuSplitConfig\": convertGPUSettingToGPUSplitConfig(config.gpu),\n            \"contextLength\": config.contextLength,\n            \"llama.ropeFrequencyBase\": numberToCheckboxNumeric(config.ropeFrequencyBase, 0, 0),\n            \"llama.ropeFrequencyScale\": numberToCheckboxNumeric(config.ropeFrequencyScale, 0, 0),\n            \"llama.keepModelInMemory\": config.keepModelInMemory,\n            \"llama.tryMmap\": config.tryMmap,\n        });\n    }\n    /** @internal */\n    createDomainSpecificModel(port, info, validator, logger) {\n        return new EmbeddingModel(port, info, validator, logger);\n    }\n    /** @internal */\n    createDomainDynamicHandle(port, specifier, validator, logger) {\n        return new EmbeddingDynamicHandle(port, specifier, validator, logger);\n    }\n}\n\nconst parseDocumentOptsSchema = documentParsingOptsSchema.extend({\n    onProgress: z.function().optional(),\n    signal: z.instanceof(AbortSignal).optional(),\n});\n\nconst retrievalCallbacksSchema = z.object({\n    onFileProcessList: z.function().optional(),\n    onFileProcessingStart: z.function().optional(),\n    onFileProcessingEnd: z.function().optional(),\n    onFileProcessingStepStart: z.function().optional(),\n    onFileProcessingStepProgress: z.function().optional(),\n    onFileProcessingStepEnd: z.function().optional(),\n    onSearchingStart: z.function().optional(),\n    onSearchingEnd: z.function().optional(),\n    verbose: z.union([z.boolean(), z.string()]).optional(),\n});\nconst retrievalOptsSchema = z.object({\n    chunkingMethod: retrievalChunkingMethodSchema.optional(),\n    limit: z.number().int().optional(),\n    embeddingModel: z.instanceof(EmbeddingDynamicHandle).optional(),\n    databasePath: z.string().optional(),\n    signal: z.instanceof(AbortSignal).optional(),\n    ...retrievalCallbacksSchema.shape,\n});\n\nfunction getProcessingStepName(processingStep) {\n    switch (processingStep) {\n        case \"loading\":\n            return \"Loading\";\n        case \"chunking\":\n            return \"Chunking\";\n        case \"embedding\":\n            return \"Embedding\";\n        default: {\n            const exhaustiveCheck = processingStep;\n            throw new Error(`Unexpected processing step: ${exhaustiveCheck}`);\n        }\n    }\n}\n/**\n * @public\n *\n * The namespace for file-related operations.\n */\nclass FilesNamespace {\n    /** @internal */\n    constructor(\n    /** @internal */\n    filesPort, validator, parentLogger) {\n        this.filesPort = filesPort;\n        this.validator = validator;\n        this.logger = new SimpleLogger(\"File\", parentLogger);\n    }\n    /**\n     * Gets the absolute path to a local file.\n     *\n     * @internal\n     */\n    async getLocalFileAbsolutePath(fileName, stack) {\n        return await this.filesPort.callRpc(\"getLocalFileAbsolutePath\", { fileName }, { stack });\n    }\n    /**\n     * Creates a file handle from a chat message part file data. Used internally.\n     *\n     * @internal\n     */\n    createFileHandleFromChatMessagePartFileData(data) {\n        return new FileHandle(this, data.identifier, data.fileType, data.sizeBytes, data.name);\n    }\n    /**\n     * Adds a temporary image to LM Studio, and returns a FileHandle that can be used to reference\n     * this image. This image will be deleted when the client disconnects.\n     *\n     * This method can only be used in environments that have file system access (such as Node.js).\n     */\n    async prepareImage(path) {\n        const result = await readFileAsBase64(path);\n        if (result.success === false) {\n            throw new Error(text `\r\n        Your current JavaScript environment does not support reading files. If you can read the file\r\n        using other methods, please use \"prepareImageBase64\".\r\n      `);\n        }\n        const fileName = path.split(/[\\\\/]/).at(-1);\n        const { identifier, fileType, sizeBytes } = await this.filesPort.callRpc(\"uploadFileBase64\", {\n            name: fileName,\n            contentBase64: result.base64,\n        });\n        return new FileHandle(this, identifier, fileType, sizeBytes, fileName);\n    }\n    /**\n     * Adds a temporary image to LM Studio. The content of the file is specified using base64. If you\n     * are using Node.js and have a file laying around, consider using `prepareImage` instead.\n     */\n    async prepareImageBase64(fileName, contentBase64) {\n        const { identifier, fileType, sizeBytes } = await this.filesPort.callRpc(\"uploadFileBase64\", {\n            name: fileName,\n            contentBase64,\n        });\n        return new FileHandle(this, identifier, fileType, sizeBytes, fileName);\n    }\n    /**\n     * Adds a temporary file to LM Studio, and returns a FileHandle that can be used to reference this\n     * file. This file will be deleted when the client disconnects.\n     *\n     * This method can only be used in environments that have file system access (such as Node.js).\n     *\n     * @deprecated [DEP-RETRIEVAL] Retrieval API is still in active development. Stay tuned for\n     * updates.\n     */\n    async prepareFile(path) {\n        // Currently, exactly the same as prepareImage.\n        const result = await readFileAsBase64(path);\n        if (result.success === false) {\n            throw new Error(text `\r\n        Your current JavaScript environment does not support reading files. If you can read the file\r\n        using other methods, please use \"prepareFileBase64\".\r\n      `);\n        }\n        const fileName = path.split(/[\\\\/]/).at(-1);\n        const { identifier, fileType, sizeBytes } = await this.filesPort.callRpc(\"uploadFileBase64\", {\n            name: fileName,\n            contentBase64: result.base64,\n        });\n        return new FileHandle(this, identifier, fileType, sizeBytes, fileName);\n    }\n    /**\n     * Adds a temporary file to LM Studio. The content of the file is specified using base64. If you\n     * are using Node.js and have a file laying around, consider using `prepareFile` instead.\n     *\n     * @deprecated [DEP-RETRIEVAL] Retrieval API is still in active development. Stay tuned for\n     * updates.   */\n    async prepareFileBase64(fileName, contentBase64) {\n        // Currently, exactly the same as prepareImageBase64.\n        const { identifier, fileType, sizeBytes } = await this.filesPort.callRpc(\"uploadFileBase64\", {\n            name: fileName,\n            contentBase64,\n        });\n        return new FileHandle(this, identifier, fileType, sizeBytes, fileName);\n    }\n    /**\n     * @deprecated [DEP-RETRIEVAL] Retrieval API is still in active development. Stay tuned for\n     * updates.   */\n    async retrieve(query, files, opts = {}) {\n        const logger = this.logger;\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamsOrThrow(\"client.retrieval\", \"retrieve\", [\"query\", \"filePaths\", \"opts\"], [z.string(), z.array(z.instanceof(FileHandle)), retrievalOptsSchema], [query, files, opts], stack);\n        const { verbose = \"info\" } = opts;\n        const verboseLevel = typeof verbose === \"boolean\" ? \"info\" : verbose;\n        const shouldLog = verbose &&\n            opts.onFileProcessList === undefined &&\n            opts.onFileProcessingStart === undefined &&\n            opts.onFileProcessingEnd === undefined &&\n            opts.onFileProcessingStepStart === undefined &&\n            opts.onFileProcessingStepProgress === undefined &&\n            opts.onFileProcessingStepEnd === undefined &&\n            opts.onSearchingStart === undefined &&\n            opts.onSearchingEnd === undefined;\n        if (opts.embeddingModel === undefined) {\n            throw new Error(\"Embedding model currently is required.\");\n        }\n        const resolveFileIndex = (index) => {\n            const file = files[index];\n            if (file === undefined) {\n                throw new Error(`File not found: ${index}`);\n            }\n            return file;\n        };\n        const resolveFileIndices = (indices) => {\n            return indices.map(resolveFileIndex);\n        };\n        const kvConfig = retrievalSchematics.buildPartialConfig({\n            chunkingMethod: opts.chunkingMethod,\n            databaseFile: opts.databasePath,\n            embeddingModel: (await opts.embeddingModel.getModelInfo())?.identifier,\n            limit: opts.limit,\n        });\n        let filesToProcess;\n        const filesProcessingStartTimes = [];\n        let searchingStartTime = 0;\n        let lastVerboseCallTime = 0;\n        let lastVerboseLine = \"\";\n        return await new Promise((resolve, reject) => {\n            const channel = this.filesPort.createChannel(\"retrieve\", { query, fileIdentifiers: files.map(file => file.identifier), config: kvConfig }, message => {\n                switch (message.type) {\n                    case \"onFileProcessList\":\n                        filesToProcess = resolveFileIndices(message.indices);\n                        safeCallCallback(logger, \"onFileProcessList\", opts.onFileProcessList, [\n                            filesToProcess,\n                        ]);\n                        if (shouldLog) {\n                            logger.logAtLevel(verboseLevel, text `\r\n                    Found ${filesToProcess.length} files need processing:\r\n                    ${filesToProcess.map(file => file.name).join(\", \")}\r\n                  `);\n                        }\n                        break;\n                    case \"onFileProcessingStart\": {\n                        if (filesToProcess === null) {\n                            throw new Error(\"onFileProcessList must be called before onFileProcessingStart\");\n                        }\n                        const file = resolveFileIndex(message.index);\n                        safeCallCallback(logger, \"onFileProcessingStart\", opts.onFileProcessingStart, [\n                            file,\n                            filesToProcess.indexOf(file),\n                            filesToProcess,\n                        ]);\n                        if (shouldLog) {\n                            filesProcessingStartTimes[message.index] = Date.now();\n                            logger.logAtLevel(verboseLevel, text `\r\n                    Start processing file: ${file.name}\r\n                    (${message.index + 1}/${filesToProcess.length})\r\n                  `);\n                        }\n                        break;\n                    }\n                    case \"onFileProcessingEnd\": {\n                        if (filesToProcess === null) {\n                            throw new Error(\"onFileProcessList must be called before onFileProcessingEnd\");\n                        }\n                        const file = resolveFileIndex(message.index);\n                        safeCallCallback(logger, \"onFileProcessingEnd\", opts.onFileProcessingEnd, [\n                            file,\n                            filesToProcess.indexOf(file),\n                            filesToProcess,\n                        ]);\n                        if (shouldLog) {\n                            logger.logAtLevel(verboseLevel, text `\r\n                    File processed: ${file.name}.\r\n                    Time took: ${Date.now() - filesProcessingStartTimes[message.index]}ms\r\n                  `);\n                        }\n                        break;\n                    }\n                    case \"onFileProcessingStepStart\":\n                        safeCallCallback(logger, \"onFileProcessingStepStart\", opts.onFileProcessingStepStart, [resolveFileIndex(message.index), message.step]);\n                        break;\n                    case \"onFileProcessingStepProgress\": {\n                        safeCallCallback(logger, \"onFileProcessingStepProgress\", opts.onFileProcessingStepProgress, [resolveFileIndex(message.index), message.step, message.progress]);\n                        const now = Date.now();\n                        if (shouldLog && (now - lastVerboseCallTime > 500 || message.progress === 1)) {\n                            lastVerboseCallTime = now;\n                            const line = text `\r\n                  > ${getProcessingStepName(message.step)}: ${Math.round(message.progress * 100)}%\r\n                `;\n                            if (lastVerboseLine !== line) {\n                                lastVerboseLine = line;\n                                logger.logAtLevel(verboseLevel, line);\n                            }\n                        }\n                        break;\n                    }\n                    case \"onFileProcessingStepEnd\":\n                        safeCallCallback(logger, \"onFileProcessingStepEnd\", opts.onFileProcessingStepEnd, [\n                            resolveFileIndex(message.index),\n                            message.step,\n                        ]);\n                        break;\n                    case \"onSearchingStart\":\n                        safeCallCallback(logger, \"onSearchingStart\", opts.onSearchingStart, []);\n                        if (shouldLog) {\n                            searchingStartTime = Date.now();\n                            logger.logAtLevel(verboseLevel, \"Start searching in the vector database...\");\n                        }\n                        break;\n                    case \"onSearchingEnd\":\n                        safeCallCallback(logger, \"onSearchingEnd\", opts.onSearchingEnd, []);\n                        if (shouldLog) {\n                            logger.logAtLevel(verboseLevel, text `\r\n                    Finished searching in the vector database.\r\n                    Time took: ${Date.now() - searchingStartTime}ms\r\n                  `);\n                        }\n                        break;\n                    case \"result\": {\n                        resolve({\n                            entries: message.result.entries.map(entry => ({\n                                content: entry.content,\n                                score: entry.score,\n                                source: files[entry.sourceIndex],\n                            })),\n                        });\n                        break;\n                    }\n                }\n            });\n            if (opts.signal !== undefined) {\n                if (opts.signal.aborted) {\n                    reject(opts.signal.reason);\n                    channel.send({ type: \"stop\" });\n                }\n                else {\n                    opts.signal?.addEventListener(\"abort\", () => {\n                        reject(opts.signal.reason);\n                        channel.send({ type: \"stop\" });\n                    });\n                }\n            }\n            channel.onError.subscribeOnce(reject);\n        });\n    }\n    /**\n     * Parse a document\n     *\n     * @deprecated [DEP-DOC-PARSE] Document parsing API is still in active development. Stay tuned for\n     * updates.\n     */\n    async parseDocument(fileHandle, opts = {}) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamsOrThrow(\"client.files\", \"parseDocument\", [\"fileHandle\", \"opts\"], [z.instanceof(FileHandle), parseDocumentOptsSchema], [fileHandle, opts], stack);\n        const { onParserLoaded, onProgress, signal, ...config } = opts;\n        const { promise, resolve, reject } = makePromise();\n        opts.signal?.throwIfAborted();\n        let finished = false;\n        const channel = this.filesPort.createChannel(\"parseDocument\", { fileIdentifier: fileHandle.identifier, parseOpts: config }, message => {\n            const messageType = message.type;\n            switch (messageType) {\n                case \"progress\": {\n                    safeCallCallback(this.logger, \"onProgress\", onProgress, [message.progress]);\n                    break;\n                }\n                case \"parserLoaded\": {\n                    safeCallCallback(this.logger, \"onParserLoaded\", onParserLoaded, [message.parser]);\n                    break;\n                }\n                case \"result\": {\n                    resolve({\n                        content: message.content,\n                        parser: message.parser,\n                    });\n                    finished = true;\n                    break;\n                }\n            }\n        }, { stack });\n        signal?.addEventListener(\"abort\", () => {\n            if (finished) {\n                return;\n            }\n            reject(signal.reason);\n            channel.send({ type: \"cancel\" });\n        });\n        channel.onError.subscribeOnce(reject);\n        channel.onClose.subscribeOnce(() => {\n            if (!finished) {\n                reject(new Error(\"Channel closed before receiving a result.\"));\n            }\n        });\n        return await promise;\n    }\n    /**\n     * Get the parsing method for a document.\n     *\n     * @deprecated [DEP-DOC-PARSE] Document parsing API is still in active development. Stay tuned for\n     * updates.\n     */\n    async getDocumentParsingLibrary(fileHandle) {\n        const stack = getCurrentStack(1);\n        return await this.filesPort.callRpc(\"getDocumentParsingLibrary\", { fileIdentifier: fileHandle.identifier }, { stack });\n    }\n}\n\nfunction deserializeOtherError(serialized, stack) {\n    let content = chalk.redBright(` ${serialized.title} `);\n    if (serialized.suggestion !== undefined) {\n        content +=\n            \"\\n\\n\\n \" +\n                chalk.bgWhite.black(\"  (!) SUGGESTION  \") +\n                \"\\n\\n\" +\n                chalk.white(serialized.suggestion);\n    }\n    if (serialized.cause !== undefined) {\n        content +=\n            \"\\n\\n\\n \" + chalk.bgWhite.black(\"  (X) CAUSE  \") + \"\\n\\n\" + chalk.gray(serialized.cause);\n    }\n    return makePrettyError(content, stack);\n}\nconst errorDeserializersMap = new Map();\nfunction registerErrorDeserializer(code, deserializer) {\n    errorDeserializersMap.set(code, deserializer);\n}\nfunction formatAvailableLLMs(availablePathsSample, totalModels) {\n    if (availablePathsSample.length === 0) {\n        return chalk.gray(\"    You don't have any LLMs downloaded.\");\n    }\n    let text = availablePathsSample.map(path => chalk.cyanBright(\" • \" + path)).join(\"\\n\");\n    if (availablePathsSample.length < totalModels) {\n        text += chalk.gray(`\\n     ... (and ${totalModels - availablePathsSample.length} more)`);\n    }\n    return text;\n}\nregisterErrorDeserializer(\"generic.pathNotFound\", ({ availablePathsSample, path, totalModels }, stack) => {\n    return makeTitledPrettyError(`Cannot find a model with path \"${chalk.yellowBright(path)}\"`, text `\r\n        Here are your available models:\r\n\r\n        ${formatAvailableLLMs(availablePathsSample, totalModels)}\r\n\r\n        Run\r\n\r\n            ${chalk.yellowBright(\"lms ls\")}\r\n\r\n        to see a full list of loadable models\r\n      `, stack);\n});\nfunction formatLoadedModels(loadedModelsSample, totalLoadedModels) {\n    if (loadedModelsSample.length === 0) {\n        return chalk.gray(\"    You don't have any models loaded.\");\n    }\n    let text = loadedModelsSample.map(path => chalk.cyanBright(\" • \" + path)).join(\"\\n\");\n    if (loadedModelsSample.length < totalLoadedModels) {\n        text += chalk.gray(`\\n     ... (and ${totalLoadedModels - loadedModelsSample.length} more)`);\n    }\n    return text;\n}\nregisterErrorDeserializer(\"generic.identifierNotFound\", ({ loadedModelsSample, identifier, totalLoadedModels }, stack) => {\n    return makeTitledPrettyError(`Cannot find a model with identifier \"${chalk.yellowBright(identifier)}\"`, text `\r\n        Here are your loaded models:\r\n\r\n        ${formatLoadedModels(loadedModelsSample, totalLoadedModels)}\r\n\r\n        Run\r\n\r\n            ${chalk.yellowBright(\"lms ps\")}\r\n\r\n        to see a full list of loaded models\r\n      `, stack);\n});\nregisterErrorDeserializer(\"generic.specificModelUnloaded\", (_, stack) => {\n    return makePrettyError(chalk.bgRed.white(text `\r\n      This model has already been unloaded.\r\n    `), stack);\n});\nfunction getModelDomainTypeDisplayNameSingular(domain) {\n    switch (domain) {\n        case \"llm\":\n            return \"an LLM\";\n        case \"embedding\":\n            return \"an embedding model\";\n        case \"imageGen\":\n            return \"an image generation model\";\n        case \"transcription\":\n            return \"a transcription model\";\n        case \"tts\":\n            return \"a text-to-speech model\";\n        default: {\n            const exhaustiveCheck = domain;\n            console.error(`Unexpected domain type: ${exhaustiveCheck}`);\n            return \"Unknown Model Domain\";\n        }\n    }\n}\nfunction formatQuery(query) {\n    const requirements = [];\n    if (query.domain !== undefined) {\n        requirements.push(text `\r\n      The model must be ${chalk.yellowBright(getModelDomainTypeDisplayNameSingular(query.domain))}\r\n    `);\n    }\n    if (query.identifier !== undefined) {\n        requirements.push(`The identifier must be exactly \"${chalk.yellowBright(query.identifier)}\"`);\n    }\n    if (query.path !== undefined) {\n        requirements.push(`The path must match \"${chalk.yellowBright(query.path)}\"`);\n    }\n    if (requirements.length === 0) {\n        return chalk.gray(\" • Any Model\");\n    }\n    return requirements.map(req => chalk.white(\" • \" + req)).join(\"\\n\");\n}\nregisterErrorDeserializer(\"generic.noModelMatchingQuery\", ({ loadedModelsSample, totalLoadedModels, query }, stack) => {\n    return makePrettyError(text `\r\n        ${chalk.bgRed.white(\" No loaded model satisfies all requirements specified in the query. \")}\r\n\r\n        Loaded Models:\r\n\r\n        ${formatLoadedModels(loadedModelsSample, totalLoadedModels)}\r\n\r\n        Your query:\r\n\r\n        ${formatQuery(query)}\r\n\r\n        Run\r\n\r\n            ${chalk.yellowBright(\"lms ps\")}\r\n\r\n        to see a full list of loaded models with details\r\n      `, stack);\n});\nregisterErrorDeserializer(\"generic.domainMismatch\", ({ actualDomain, expectedDomain, path }, stack) => {\n    return makePrettyError(text `\r\n        ${chalk.bgRed.white(\" Model has wrong domain. \")}\r\n\r\n        Expecting ${chalk.greenBright(path)} to be ${chalk.yellowBright(getModelDomainTypeDisplayNameSingular(expectedDomain))}, but it is actually ${chalk.yellowBright(getModelDomainTypeDisplayNameSingular(actualDomain))}.\r\n      `, stack);\n});\nfunction formatAvailablePresets(presets, totalAvailablePresets) {\n    if (presets.length === 0) {\n        return chalk.gray(\"    You don't have any presets available.\");\n    }\n    let text = presets\n        .map(({ identifier, name }) => chalk.cyanBright(` • ${name} (${chalk.cyan(identifier)})`))\n        .join(\"\\n\");\n    if (presets.length < totalAvailablePresets) {\n        text += chalk.gray(`\\n     ... (and ${totalAvailablePresets - presets.length} more)`);\n    }\n    return text;\n}\nregisterErrorDeserializer(\"generic.presetNotFound\", ({ specifiedFuzzyPresetIdentifier, availablePresetsSample, totalAvailablePresets }) => {\n    return makeTitledPrettyError(`Cannot find a preset with identifier \"${chalk.yellowBright(specifiedFuzzyPresetIdentifier)}\"`, text `\r\n        Here are your available presets:\r\n\r\n        ${formatAvailablePresets(availablePresetsSample, totalAvailablePresets)}\r\n\r\n        Note: To specify a preset in the SDK, you need to use its identifier (in parentheses). You\r\n        can get a preset's identifier by right-clicking on it and then select \"Copy Preset\r\n        Identifier\".\r\n      `);\n});\nfunction friendlyErrorDeserializer(serialized, _directCause, stack) {\n    if (serialized.displayData === undefined) {\n        return deserializeOtherError(serialized, stack);\n    }\n    let error;\n    const specificDeserializer = errorDeserializersMap.get(serialized.displayData.code);\n    if (specificDeserializer !== undefined) {\n        error = specificDeserializer(serialized.displayData, stack);\n        attachSerializedErrorData(error, serialized);\n        return error;\n    }\n    else {\n        return deserializeOtherError(serialized, stack);\n    }\n}\n\nfunction cacheQuantizationTypeToCheckbox({ value, falseDefault, }) {\n    return value === undefined\n        ? undefined\n        : value === false\n            ? { checked: false, value: falseDefault }\n            : { checked: true, value: value };\n}\n\n/**\n * Represents the result of running `llm.act`. Currently only contains minimum amount of\n * information.\n *\n * If you think more information/fields should be added, please open an issue or a PR on GitHub.\n *\n * @public\n */\nclass ActResult {\n    constructor(\n    /**\n     * Number of rounds performed.\n     *\n     * For example, in the following scenario:\n     *\n     * - User asks the model to add 1234 and 5678.\n     * - The model requests to use a calculator tool.\n     * - The calculator tool outputs 6912.\n     * - The calculator's output is then fed back to the model for a second round of prediction.\n     * - The model sees the output and generates a paragraph explaining the result.\n     *\n     * There are 2 rounds. On the beginning of a round, the callback `onRoundStart` is triggered.\n     * On the end of a round, the callback `onRoundEnd` is triggered.\n     */\n    rounds, \n    /**\n     * Total time taken to run `.act` in seconds. measured from beginning of the `.act` invocation\n     * to when the entire operation is finished.\n     */\n    totalExecutionTimeSeconds) {\n        this.rounds = rounds;\n        this.totalExecutionTimeSeconds = totalExecutionTimeSeconds;\n    }\n}\n\n/**\n * Each call uses a globally unique call ID that starts somewhere before the half of the\n * `Number.MAX_SAFE_INTEGER`.\n */\nconst callIdGiver = new IdGiver(Math.floor(Math.random() * (Number.MAX_SAFE_INTEGER / 2 / 10000)) * 10000);\nclass NoQueueQueue {\n    needsQueueing() {\n        return false;\n    }\n    async runInQueue(fn, signal) {\n        if (signal?.aborted) {\n            throw new Error(\"Operation aborted\");\n        }\n        return fn();\n    }\n}\nclass FIFOQueue {\n    constructor() {\n        this.queue = [];\n        this.executing = false;\n        this.poisoned = false;\n        this.poisonError = null;\n    }\n    needsQueueing() {\n        return this.executing || this.queue.length > 0;\n    }\n    async runInQueue(fn, signal) {\n        // Check if the operation is already aborted\n        if (signal?.aborted) {\n            throw new Error(\"Operation aborted\");\n        }\n        // If the queue is poisoned, fail immediately with the saved error\n        if (this.poisoned) {\n            throw this.poisonError ?? new Error(\"Queue has been poisoned by a previous error\");\n        }\n        if (!this.needsQueueing()) {\n            // If nothing is in the queue, execute immediately\n            this.executing = true;\n            try {\n                // Check for abort before execution\n                if (signal?.aborted) {\n                    throw new Error(\"Operation aborted\");\n                }\n                return await fn();\n            }\n            catch (error) {\n                // Poison the queue\n                this.poisoned = true;\n                this.poisonError = error;\n                // Clear the queue since nothing will run after this\n                this.clearQueue(error);\n                throw error;\n            }\n            finally {\n                this.executing = false;\n                this.processQueue();\n            }\n        }\n        // Otherwise, add to queue and wait for execution\n        return new Promise((resolve, reject) => {\n            // Add abort listener if a signal was provided\n            if (signal) {\n                if (signal.aborted) {\n                    return reject(new Error(\"Operation aborted\"));\n                }\n                signal.addEventListener(\"abort\", () => {\n                    // Remove from queue if it hasn't started yet\n                    const index = this.queue.findIndex(item => item.resolve === resolve && item.reject === reject);\n                    if (index !== -1) {\n                        this.queue.splice(index, 1);\n                        reject(new Error(\"Operation aborted\"));\n                    }\n                }, { once: true });\n            }\n            this.queue.push({\n                fn: async () => {\n                    try {\n                        // Check for abort before execution\n                        if (signal?.aborted) {\n                            throw new Error(\"Operation aborted\");\n                        }\n                        const result = await fn();\n                        resolve(result);\n                        return result;\n                    }\n                    catch (error) {\n                        reject(error);\n                        throw error;\n                    }\n                },\n                resolve,\n                reject,\n                signal,\n            });\n        });\n    }\n    async processQueue() {\n        if (this.executing || this.queue.length === 0 || this.poisoned) {\n            return;\n        }\n        const nextItem = this.queue.shift();\n        if (!nextItem)\n            return;\n        // Skip if this task has been aborted\n        if (nextItem.signal?.aborted) {\n            nextItem.reject(new Error(\"Operation aborted\"));\n            this.processQueue();\n            return;\n        }\n        this.executing = true;\n        try {\n            await nextItem.fn();\n        }\n        catch (error) {\n            // Poison the queue\n            this.poisoned = true;\n            this.poisonError = error;\n            // Clear the queue since nothing will run after this\n            this.clearQueue(error);\n        }\n        finally {\n            this.executing = false;\n            // Only continue processing if not poisoned\n            if (!this.poisoned) {\n                this.processQueue();\n            }\n        }\n    }\n    clearQueue(error) {\n        // Reject all pending promises in the queue\n        for (const item of this.queue) {\n            item.reject(error);\n        }\n        this.queue = [];\n    }\n}\n/**\n * Controller object used to allow/modify/deny a tool call.\n */\nclass GuardToolCallController {\n    /**\n     * Don't construct this object yourself.\n     */\n    constructor(toolCallRequest, tool, resultContainer) {\n        this.toolCallRequest = toolCallRequest;\n        this.tool = tool;\n        this.resultContainer = resultContainer;\n        /**\n         * Allows the tool call to proceed without any modifications.\n         */\n        this.allow = () => {\n            this.assertNoResultYet(\"allow\", getCurrentStack(1));\n            this.resultContainer[0] = { type: \"allow\" };\n        };\n        /**\n         * Allows the tool call to proceed, but overrides the parameters with the provided ones.\n         */\n        this.allowAndOverrideParameters = (newParameters) => {\n            this.assertNoResultYet(\"allowAndOverrideParameters\", getCurrentStack(1));\n            this.resultContainer[0] = { type: \"allowAndOverrideParameters\", parameters: newParameters };\n        };\n        /**\n         * Denys the tool call with a specified reason. This will not interrupt the `.act` call. Instead,\n         * the reason you provide will be provided to the model as the tool call result.\n         *\n         * If `reason` is not provided, a generic default reason will be used.\n         *\n         * If you wish to immediately fail the `.act` call, you can throw an error instead.\n         */\n        this.deny = (reason) => {\n            this.assertNoResultYet(\"deny\", getCurrentStack(1));\n            this.resultContainer[0] = { type: \"deny\", reason };\n        };\n    }\n    assertNoResultYet(calledMethodName, stack) {\n        if (this.resultContainer[0] === null) {\n            return;\n        }\n        // Oh no, the result has already been set! Make an error message.\n        throw makeTitledPrettyError(`Cannot call ${calledMethodName} after a result has been set`, text `\r\n        This tool call guard has already set a result previously (${this.resultContainer[0].type}). \r\n        You cannot set a result more than once.\r\n      `, stack);\n    }\n}\nconst llmActBaseOptsSchema = z.object({\n    onFirstToken: z.function().optional(),\n    onPredictionFragment: z.function().optional(),\n    onMessage: z.function().optional(),\n    onRoundStart: z.function().optional(),\n    onRoundEnd: z.function().optional(),\n    onPredictionCompleted: z.function().optional(),\n    onPromptProcessingProgress: z.function().optional(),\n    onToolCallRequestStart: z.function().optional(),\n    onToolCallRequestNameReceived: z.function().optional(),\n    onToolCallRequestArgumentFragmentGenerated: z.function().optional(),\n    onToolCallRequestEnd: z.function().optional(),\n    onToolCallRequestFinalized: z.function().optional(),\n    onToolCallRequestFailure: z.function().optional(),\n    onToolCallRequestDequeued: z.function().optional(),\n    guardToolCall: z.function().optional(),\n    handleInvalidToolRequest: z.function().optional(),\n    maxPredictionRounds: z.number().int().min(1).optional(),\n    signal: z.instanceof(AbortSignal).optional(),\n    allowParallelToolExecution: z.boolean().optional(),\n});\nconst defaultHandleInvalidToolRequest = (error, request) => {\n    if (request) {\n        return error.message;\n    }\n    throw error;\n};\n/**\n * The internal method for performing .act(). This is used by both `LLMDynamicHandle` and\n * `LLMGeneratorHandle`.\n *\n * @param TPredictionResult - The type of the prediction result.\n * @param TEndPacket - The type of the success packet that is returned. This type is received from\n * `handlePredictionEnd` and is passed to the `makePredictionResult` function to create the\n * `TPredictionResult`.\n * @param chat - The chat to use for the prediction.\n * @param tools - The tools to use for the prediction. This is an array of tools that the model can\n * use during the prediction.\n * @param baseOpts - The base options for the prediction. This includes callbacks and other\n * options that control the prediction process.\n * @param stack - The stack trace to use for the prediction. This is used for generating errors.\n * @param logger - The logger to use for the prediction. This is used for logging messages during\n * the prediction.\n * @param startTime - The start time of the prediction. This is used to calculate the duration of\n * the act.\n * @param predictImpl - The implementation of the prediction. This is a function that takes the\n * prediction arguments and performs the prediction. This is the main abstraction - `internalAct`\n * performs the prediction loop while this function handles the actual prediction itself.\n * @param makePredictionResult - A function that takes the end packet and the content of the\n * prediction and creates the `TPredictionResult`. This is used to create the prediction result\n * object for each round of the prediction.\n */\nasync function internalAct(chat, tools, baseOpts, stack, logger, startTime, predictImpl, makePredictionResult) {\n    const abortController = new AbortController();\n    const mutableChat = Chat.from(chat); // Make a copy\n    let currentCallId = -1;\n    /**\n     * A flag that will be set if any unimplemented tool is called. In which case, the loop will\n     * terminate after all the parallel tool calls are resolved.\n     */\n    let hasCalledUnimplementedTool = false;\n    if (baseOpts.signal !== undefined) {\n        if (baseOpts.signal.aborted) {\n            // If the signal is already aborted, we should not continue.\n            abortController.abort(baseOpts.signal.reason);\n        }\n        else {\n            baseOpts.signal.addEventListener(\"abort\", () => {\n                abortController.abort(baseOpts.signal?.reason);\n            }, { once: true });\n        }\n    }\n    let shouldContinue = false;\n    let predictionsPerformed = 0;\n    const toolsMap = new Map();\n    for (const tool of tools) {\n        if (toolsMap.has(tool.name)) {\n            logger.warnText `\r\n        Duplicate tool (${tool.name}) found in the tools array. The last tool with the same name\r\n        will be used.\r\n      `;\n        }\n        toolsMap.set(tool.name, tool);\n    }\n    do {\n        // Main loop - execute as many times as the model requests tools\n        let allowTools = true;\n        if (\n        // If there is a defined number of max predictions,\n        baseOpts.maxPredictionRounds !== undefined &&\n            // ... and this is the last chance to perform predictions, don't allow the model to use\n            // tools.\n            predictionsPerformed + 1 >= baseOpts.maxPredictionRounds) {\n            allowTools = false;\n        }\n        // Start the prediction\n        let finished = false;\n        let firstTokenTriggered = false;\n        const contentArray = [];\n        const reasoningContentArray = [];\n        const nonReasoningContentArray = [];\n        const toolCallRequests = [];\n        let nextToolCallIndex = 0;\n        const toolCallResults = [];\n        /**\n         * All promises that need to be awaited. Once they are done, they will add their own results\n         * to the toolCallResults array in-place.\n         */\n        const toolCallPromises = [];\n        /**\n         * The promise that represents the prediction itself (The RPC call).\n         */\n        const { promise: predictionPromise, resolve: predictionResolve, reject: predictionReject, } = makePromise();\n        /**\n         * The final promise that will be awaited on for this prediction. It is resolved when the\n         * prediction is done and all tool calls have been resolved.\n         */\n        const { promise: finalPromise, resolve: finalResolve, reject: finalReject, } = makePromise();\n        const internalHandleInvalidToolCallRequest = async (error, request, \n        /**\n         * In the case this tool call got a replacement, the index to use.\n         */\n        toolCallIndex) => {\n            let result;\n            try {\n                result = await (baseOpts.handleInvalidToolRequest ?? defaultHandleInvalidToolRequest)(error, request);\n            }\n            catch (error) {\n                if (abortController.signal.aborted) {\n                    throw abortController.signal.reason;\n                }\n                abortController.abort();\n                throw error; // Rethrow the error.\n            }\n            if (result === undefined) {\n                // No replacement.\n                return;\n            }\n            let resultString;\n            try {\n                resultString = JSON.stringify(result);\n            }\n            catch (error) {\n                abortController.abort();\n                throw makePrettyError(\"handleInvalidToolRequest returned a value that cannot be converted to JSON.\", stack);\n            }\n            // The handleInvalidToolRequest has returned a \"replacement\"\n            if (request === undefined) {\n                // We cannot provide a result to a tool call that has failed to parse.\n                logger.warnText `\r\n          The \"handleInvalidToolRequest\" callback has returned a result, but the tool request has\r\n          completely failed to parse, thus LM Studio cannot provide the result to the tool call.\r\n          Please avoid returning a result when the second parameter of the callback is undefined.\r\n          See the documentation for \"handleInvalidToolRequest\" for more information.\r\n        `;\n            }\n            else {\n                toolCallResults.push({\n                    index: toolCallIndex,\n                    data: {\n                        type: \"toolCallResult\",\n                        toolCallId: request.id,\n                        content: resultString,\n                    },\n                });\n                nextToolCallIndex++;\n            }\n        };\n        abortController.signal.throwIfAborted();\n        // Round start callback\n        safeCallCallback(logger, \"onRoundStart\", baseOpts.onRoundStart, [predictionsPerformed]);\n        let isGeneratingToolCall = false;\n        /**\n         * Abort controller for the current round.\n         */\n        const roundAbortController = new AbortController();\n        const queue = baseOpts.allowParallelToolExecution\n            ? new NoQueueQueue()\n            : new FIFOQueue();\n        let receivedEagerToolNameReporting = false;\n        let receivedToolArgumentsStreaming = false;\n        predictImpl({\n            allowTools,\n            history: accessMaybeMutableInternals(mutableChat)._internalGetData(),\n            signal: roundAbortController.signal,\n            handleFragment: fragment => {\n                if (!firstTokenTriggered) {\n                    firstTokenTriggered = true;\n                    safeCallCallback(logger, \"onFirstToken\", baseOpts.onFirstToken, [predictionsPerformed]);\n                }\n                safeCallCallback(logger, \"onFragment\", baseOpts.onPredictionFragment, [\n                    { roundIndex: predictionsPerformed, ...fragment },\n                ]);\n                contentArray.push(fragment.content);\n                if (!fragment.isStructural) {\n                    if (fragment.reasoningType === \"reasoning\") {\n                        reasoningContentArray.push(fragment.content);\n                    }\n                    else {\n                        nonReasoningContentArray.push(fragment.content);\n                    }\n                }\n            },\n            handlePromptProcessingProgress: progress => {\n                safeCallCallback(logger, \"onPromptProcessingProgress\", baseOpts.onPromptProcessingProgress, [predictionsPerformed, progress]);\n            },\n            handleToolCallGenerationStart: toolCallId => {\n                currentCallId = callIdGiver.next();\n                receivedEagerToolNameReporting = false;\n                receivedToolArgumentsStreaming = false;\n                isGeneratingToolCall = true;\n                safeCallCallback(logger, \"onToolCallRequestStart\", baseOpts.onToolCallRequestStart, [\n                    predictionsPerformed,\n                    currentCallId,\n                    { toolCallId: toolCallId },\n                ]);\n            },\n            handleToolCallGenerationNameReceived: name => {\n                receivedEagerToolNameReporting = true;\n                safeCallCallback(logger, \"onToolCallRequestNameReceived\", baseOpts.onToolCallRequestNameReceived, [predictionsPerformed, currentCallId, name]);\n            },\n            handleToolCallGenerationArgumentFragmentGenerated: content => {\n                receivedToolArgumentsStreaming = true;\n                safeCallCallback(logger, \"onToolCallRequestArgumentFragmentGenerated\", baseOpts.onToolCallRequestArgumentFragmentGenerated, [predictionsPerformed, currentCallId, content]);\n            },\n            handleToolCallGenerationEnd: (request, rawContent) => {\n                const callId = currentCallId;\n                isGeneratingToolCall = false;\n                const toolCallIndex = nextToolCallIndex;\n                nextToolCallIndex++;\n                if (!receivedEagerToolNameReporting) {\n                    // If eager name reporting not received, report it.\n                    safeCallCallback(logger, \"onToolCallRequestNameReceived\", baseOpts.onToolCallRequestNameReceived, [predictionsPerformed, callId, request.name]);\n                }\n                if (!receivedToolArgumentsStreaming) {\n                    // If arguments streaming not received, just pretend we have received all the arguments\n                    // as a single JSON\n                    safeCallCallback(logger, \"onToolCallRequestArgumentFragmentGenerated\", baseOpts.onToolCallRequestArgumentFragmentGenerated, [predictionsPerformed, callId, JSON.stringify(request.arguments ?? {}, null, 2)]);\n                }\n                const pushedRequest = { ...request };\n                // We have now received a tool call request. Now let's see if we can call the tool and\n                // get the result.\n                toolCallRequests.push(pushedRequest);\n                const tool = toolsMap.get(request.name);\n                if (tool === undefined) {\n                    // Tool does not exist.\n                    const toolCallRequestError = new ToolCallRequestError(`Cannot find tool with name ${request.name}.`, rawContent);\n                    toolCallPromises.push(internalHandleInvalidToolCallRequest(toolCallRequestError, request, toolCallIndex).catch(finalReject));\n                    safeCallCallback(logger, \"onToolCallRequestFailure\", baseOpts.onToolCallRequestFailure, [\n                        predictionsPerformed,\n                        callId,\n                        toolCallRequestError,\n                    ]);\n                    return;\n                }\n                // Try check the parameters:\n                try {\n                    tool.checkParameters(pushedRequest.arguments); // Defaults to empty object\n                }\n                catch (error) {\n                    // Failed to parse the parameters\n                    const toolCallRequestError = new ToolCallRequestError(error.message, rawContent);\n                    toolCallPromises.push(internalHandleInvalidToolCallRequest(toolCallRequestError, request, toolCallIndex).catch(finalReject));\n                    safeCallCallback(logger, \"onToolCallRequestFailure\", baseOpts.onToolCallRequestFailure, [\n                        predictionsPerformed,\n                        callId,\n                        toolCallRequestError,\n                    ]);\n                    return;\n                }\n                const toolCallContext = new SimpleToolCallContext(new SimpleLogger(`Tool(${request.name})`, logger), abortController.signal, callId);\n                const isQueued = queue.needsQueueing();\n                safeCallCallback(logger, \"onToolCallRequestEnd\", baseOpts.onToolCallRequestEnd, [\n                    predictionsPerformed,\n                    callId,\n                    {\n                        isQueued,\n                        toolCallRequest: request,\n                        rawContent,\n                    },\n                ]);\n                // We have successfully parsed the parameters. Let's call the tool.\n                toolCallPromises.push(queue\n                    .runInQueue(async () => {\n                    // Emit the dequeued event if the tool call was queued.\n                    if (isQueued) {\n                        safeCallCallback(logger, \"onToolCallRequestDequeued\", baseOpts.onToolCallRequestDequeued, [predictionsPerformed, callId]);\n                    }\n                    // Guard the tool call if have a tool call guard.\n                    if (baseOpts.guardToolCall !== undefined) {\n                        const resultContainer = [null];\n                        await baseOpts.guardToolCall(predictionsPerformed, callId, new GuardToolCallController(request, tool, resultContainer));\n                        if (resultContainer[0] === null) {\n                            // The guard did not return anything, thus we will report this error.\n                            throw makeTitledPrettyError(\"Tool call guard did not allow or deny the tool call.\", text `\r\n                      The \\`guardToolCall\\` handler must call one of the methods on the controller\r\n                      to allow or deny the tool call.\r\n                    `, stack);\n                        }\n                        const guardResult = resultContainer[0];\n                        const guardResultType = guardResult.type;\n                        switch (guardResultType) {\n                            case \"allow\": {\n                                // 1. The guard allowed the tool call without overriding the parameters. In this\n                                //    case, we will use the original parameters.\n                                break;\n                            }\n                            case \"allowAndOverrideParameters\": {\n                                // 2. The guard allowed the tool call and provided new parameters. In this case,\n                                //    we will use the new parameters. This will update the request in-place.\n                                pushedRequest.arguments = guardResult.parameters;\n                                break;\n                            }\n                            case \"deny\": {\n                                // 3. The guard denied the tool call. In this case, we will early return and not\n                                //    call the tool.\n                                toolCallResults.push({\n                                    index: toolCallIndex,\n                                    data: {\n                                        type: \"toolCallResult\",\n                                        toolCallId: request.id,\n                                        content: JSON.stringify({\n                                            error: guardResult.reason,\n                                        }),\n                                    },\n                                });\n                                return;\n                            }\n                        }\n                    }\n                    // Now we need to call RequestFinalized\n                    safeCallCallback(logger, \"onToolCallRequestFinalized\", baseOpts.onToolCallRequestFinalized, [\n                        predictionsPerformed,\n                        callId,\n                        {\n                            toolCallRequest: request,\n                            rawContent,\n                        },\n                    ]);\n                    let result;\n                    try {\n                        result = await tool.implementation(pushedRequest.arguments ?? {}, toolCallContext);\n                    }\n                    catch (error) {\n                        if (!(error instanceof UnimplementedToolError)) {\n                            throw error;\n                        }\n                        hasCalledUnimplementedTool = true;\n                    }\n                    let resultString;\n                    if (result === undefined) {\n                        resultString = \"undefined\";\n                    }\n                    else {\n                        try {\n                            resultString = JSON.stringify(result);\n                        }\n                        catch (error) {\n                            throw makePrettyError(`Return value of tool ${tool.name} cannot be converted to JSON.`, stack);\n                        }\n                    }\n                    toolCallResults.push({\n                        index: toolCallIndex,\n                        data: {\n                            type: \"toolCallResult\",\n                            toolCallId: request.id,\n                            content: resultString,\n                        },\n                    });\n                }, abortController.signal)\n                    .catch(finalReject));\n            },\n            handleToolCallGenerationFailed: (error, rawContent) => {\n                isGeneratingToolCall = false;\n                const toolCallRequestError = new ToolCallRequestError(error.message, rawContent);\n                toolCallPromises.push(internalHandleInvalidToolCallRequest(toolCallRequestError, \n                // We don't have a request in this because the model has failed miserably.\n                undefined, \n                // Tool call index. Doesn't matter because if there is no request, there cannot be\n                // a replacement.\n                0).catch(finalReject));\n                safeCallCallback(logger, \"onToolCallRequestFailure\", baseOpts.onToolCallRequestFailure, [\n                    predictionsPerformed,\n                    currentCallId,\n                    toolCallRequestError,\n                ]);\n            },\n            handlePredictionEnd: endPacket => {\n                const predictionResult = makePredictionResult({\n                    endPacket,\n                    content: contentArray.join(\"\"),\n                    reasoningContent: reasoningContentArray.join(\"\"),\n                    nonReasoningContent: nonReasoningContentArray.join(\"\"),\n                    predictionsPerformed,\n                });\n                safeCallCallback(logger, \"onPredictionCompleted\", baseOpts.onPredictionCompleted, [\n                    predictionResult,\n                ]);\n                predictionResolve();\n            },\n            handleError: error => {\n                if (isGeneratingToolCall) {\n                    const toolCallRequestError = new ToolCallRequestError(`Generation failed: ${error.message}`, undefined);\n                    // Notify tool call generation failure.\n                    isGeneratingToolCall = false;\n                    safeCallCallback(logger, \"onToolCallRequestFailure\", baseOpts.onToolCallRequestFailure, [\n                        predictionsPerformed,\n                        currentCallId,\n                        toolCallRequestError,\n                    ]);\n                }\n                finished = true;\n                predictionReject(error);\n            },\n        });\n        const abortListener = () => {\n            if (finished) {\n                return;\n            }\n            finished = true;\n            roundAbortController.abort(abortController.signal.reason);\n        };\n        abortController.signal.addEventListener(\"abort\", abortListener);\n        predictionPromise\n            .then(() => {\n            // Append and emit the assistant message.\n            const assistantMessage = ChatMessage.from({\n                role: \"assistant\",\n                content: [\n                    {\n                        type: \"text\",\n                        text: contentArray.join(\"\"),\n                    },\n                    ...toolCallRequests.map(toolCallRequest => ({\n                        type: \"toolCallRequest\",\n                        toolCallRequest,\n                    })),\n                ],\n            });\n            mutableChat.append(assistantMessage.asMutableCopy());\n            safeCallCallback(logger, \"onMessage\", baseOpts.onMessage, [assistantMessage]);\n        })\n            // When the prediction is completed, wait for all tool calls to be completed.\n            .then(() => Promise.all(toolCallPromises))\n            .then(() => finalResolve(), finalReject);\n        await finalPromise;\n        shouldContinue = false;\n        if (toolCallResults.length > 0) {\n            // Sort the tool call results back into the order they were requested.\n            toolCallResults.sort((a, b) => a.index - b.index);\n            // Emit the tool call results.\n            const toolMessage = ChatMessage.from({\n                role: \"tool\",\n                content: toolCallResults.map(r => r.data),\n            });\n            mutableChat.append(toolMessage.asMutableCopy());\n            safeCallCallback(logger, \"onMessage\", baseOpts.onMessage, [toolMessage]);\n            shouldContinue = true;\n        }\n        safeCallCallback(logger, \"onRoundEnd\", baseOpts.onRoundEnd, [predictionsPerformed]);\n        predictionsPerformed++;\n        // Don't continue if we've reached the max predictions.\n        if (baseOpts.maxPredictionRounds !== undefined &&\n            predictionsPerformed >= baseOpts.maxPredictionRounds) {\n            shouldContinue = false;\n        }\n        shouldContinue &&= !hasCalledUnimplementedTool; // Stop loop if unimplemented tool was called.\n    } while (shouldContinue);\n    return new ActResult(predictionsPerformed, (performance.now() - startTime) / 1_000);\n}\n\n/**\n * Represents the result of an LLM prediction.\n *\n * The most notably property is {@link PredictionResult#content}, which contains the generated text.\n * Additionally, the {@link PredictionResult#stats} property contains statistics about the\n * prediction.\n *\n * @public\n */\nclass PredictionResult {\n    constructor(\n    /**\n     * The newly generated text as predicted by the LLM.\n     */\n    content, \n    /**\n     * Part of the generated text that is \"reasoning\" content. For example, text inside <think>\n     * tags. You can adjust what is considered reasoning content by changing the `reasoningParsing`\n     * field when performing the prediction.\n     */\n    reasoningContent, \n    /**\n     * Part of the generated that is not \"reasoning\" content. For example, text outside <think>\n     * tags. You can adjust what is considered reasoning content by changing the `reasoningParsing`\n     * field when performing the prediction.\n     */\n    nonReasoningContent, \n    /**\n     * Statistics about the prediction.\n     */\n    stats, \n    /**\n     * Information about the model used for the prediction.\n     */\n    modelInfo, \n    /**\n     * The 0-indexed round index of the prediction in multi-round scenario (for example,\n     * `.act`). Will always be 0 for single-round predictions such as `.respond` or `.complete`.\n     */\n    roundIndex, \n    /**\n     * The configuration used to load the model. Not stable, subject to change.\n     *\n     * @deprecated [DEP-RAW-CONFIG] Raw config access API is still in active development. Stay\n     * turned for updates.\n     */\n    loadConfig, \n    /**\n     * The configuration used for the prediction. Not stable, subject to change.\n     *\n     * @deprecated [DEP-RAW-CONFIG] Raw config access API is still in active development. Stay\n     * turned for updates.\n     */\n    predictionConfig) {\n        this.content = content;\n        this.reasoningContent = reasoningContent;\n        this.nonReasoningContent = nonReasoningContent;\n        this.stats = stats;\n        this.modelInfo = modelInfo;\n        this.roundIndex = roundIndex;\n        this.loadConfig = loadConfig;\n        this.predictionConfig = predictionConfig;\n    }\n}\n/**\n * Result of a typed structured prediction. In addition to a regular {@link PredictionResult}, there\n * is one additional field: {@link StructuredPredictionResult#parsed}.\n *\n * To enable typed structured prediction, you should pass in a zod schema as the structured option\n * when constructing the prediction config.\n *\n * @public\n */\nclass StructuredPredictionResult extends PredictionResult {\n    constructor(content, reasoningContent, nonReasoningContent, stats, modelInfo, roundIndex, loadConfig, predictionConfig, \n    /**\n     * Parsed result of the structured output.\n     */\n    parsed) {\n        super(content, reasoningContent, nonReasoningContent, stats, modelInfo, roundIndex, loadConfig, predictionConfig);\n        this.parsed = parsed;\n    }\n}\n\n/**\n * Represents an ongoing prediction.\n *\n * Note, this class is Promise-like, meaning you can use it as a promise. It resolves to a\n * {@link PredictionResult}, which contains the generated text in the `.content` property. Example\n * usage:\n *\n * ```typescript\n * const result = await model.complete(\"When will The Winds of Winter be released?\");\n * console.log(result.content);\n * ```\n *\n * Or you can use instances methods like `then` and `catch` to handle the result or error of the\n * prediction.\n *\n * ```typescript\n * model.complete(\"When will The Winds of Winter be released?\")\n *  .then(result =\\> console.log(result.content))\n *  .catch(error =\\> console.error(error));\n * ```\n *\n * Alternatively, you can also stream the result (process the results as more content is being\n * generated). For example:\n *\n * ```typescript\n * for await (const { content } of model.complete(\"When will The Winds of Winter be released?\")) {\n *   process.stdout.write(content);\n * }\n * ```\n *\n * @public\n */\nclass OngoingPrediction extends StreamablePromise {\n    async collect(fragments) {\n        const content = fragments.map(({ content }) => content).join(\"\");\n        const reasoningContent = fragments\n            .filter(({ isStructural }) => !isStructural)\n            .filter(({ reasoningType }) => reasoningType === \"reasoning\")\n            .map(({ content }) => content)\n            .join(\"\");\n        const nonReasoningContent = fragments\n            .filter(({ isStructural }) => !isStructural)\n            .filter(({ reasoningType }) => reasoningType === \"none\")\n            .map(({ content }) => content)\n            .join(\"\");\n        if (this.stats === null) {\n            throw new Error(\"Stats should not be null\");\n        }\n        if (this.modelInfo === null) {\n            throw new Error(\"Model info should not be null\");\n        }\n        if (this.loadModelConfig === null) {\n            throw new Error(\"Load model config should not be null\");\n        }\n        if (this.predictionConfig === null) {\n            throw new Error(\"Prediction config should not be null\");\n        }\n        if (this.parser === null) {\n            return new PredictionResult(content, reasoningContent, nonReasoningContent, this.stats, this.modelInfo, \n            // Currently, OngoingPrediction is only used with single round predictions. Thus always\n            // use roundIndex 0.\n            /* roundIndex */ 0, this.loadModelConfig, this.predictionConfig);\n        }\n        else {\n            return new StructuredPredictionResult(content, reasoningContent, nonReasoningContent, this.stats, this.modelInfo, \n            // Currently, OngoingPrediction is only used with single round predictions. Thus always\n            // use roundIndex 0.\n            /* predictionIndex */ 0, this.loadModelConfig, this.predictionConfig, this.parser(content));\n        }\n    }\n    constructor(onCancel, parser) {\n        super();\n        this.onCancel = onCancel;\n        this.parser = parser;\n        this.stats = null;\n        this.modelInfo = null;\n        this.loadModelConfig = null;\n        this.predictionConfig = null;\n    }\n    /** @internal */\n    static create(onCancel, parser) {\n        const ongoingPrediction = new OngoingPrediction(onCancel, parser);\n        const finished = (stats, modelInfo, loadModelConfig, predictionConfig) => {\n            ongoingPrediction.stats = stats;\n            ongoingPrediction.modelInfo = modelInfo;\n            ongoingPrediction.loadModelConfig = loadModelConfig;\n            ongoingPrediction.predictionConfig = predictionConfig;\n            ongoingPrediction.finished();\n        };\n        const failed = (error) => ongoingPrediction.finished(error);\n        const push = (fragment) => ongoingPrediction.push(fragment);\n        return { ongoingPrediction, finished, failed, push };\n    }\n    /**\n     * Get the final prediction results. If you have been streaming the results, awaiting on this\n     * method will take no extra effort, as the results are already available in the internal buffer.\n     *\n     * Example:\n     *\n     * ```typescript\n     * const prediction = model.complete(\"When will The Winds of Winter be released?\");\n     * for await (const { content } of prediction) {\n     *   process.stdout.write(content);\n     * }\n     * const result = await prediction.result();\n     * console.log(result.stats);\n     * ```\n     *\n     * Technically, awaiting on this method is the same as awaiting on the instance itself:\n     *\n     * ```typescript\n     * await prediction.result();\n     *\n     * // Is the same as:\n     *\n     * await prediction;\n     * ```\n     */\n    async result() {\n        return (await this);\n    }\n    /**\n     * Cancels the prediction. This will stop the prediction with stop reason `userStopped`. See\n     * {@link LLMPredictionStopReason} for other reasons that a prediction might stop.\n     */\n    async cancel() {\n        this.onCancel();\n    }\n}\n\nconst llmPredictionOptsSchema = llmPredictionConfigInputSchema.extend({\n    onPromptProcessingProgress: z.function().optional(),\n    onFirstToken: z.function().optional(),\n    onPredictionFragment: z.function().optional(),\n    onToolCallRequestStart: z.function().optional(),\n    onToolCallRequestNameReceived: z.function().optional(),\n    onToolCallRequestArgumentFragmentGenerated: z.function().optional(),\n    onToolCallRequestEnd: z.function().optional(),\n    onToolCallRequestFailure: z.function().optional(),\n    signal: z.instanceof(AbortSignal).optional(),\n    preset: z.string().optional(),\n});\nfunction splitPredictionOpts(opts) {\n    const { onPromptProcessingProgress, onFirstToken, onPredictionFragment, onToolCallRequestStart, onToolCallRequestNameReceived, onToolCallRequestArgumentFragmentGenerated, onToolCallRequestEnd, onToolCallRequestFailure, signal, preset, ...config } = opts;\n    return [\n        config,\n        {\n            onPromptProcessingProgress,\n            onFirstToken,\n            onPredictionFragment,\n            onToolCallRequestStart,\n            onToolCallRequestNameReceived,\n            onToolCallRequestArgumentFragmentGenerated,\n            onToolCallRequestEnd,\n            onToolCallRequestFailure,\n            signal,\n            preset,\n        },\n    ];\n}\nconst llmRespondOptsSchema = llmPredictionOptsSchema.extend({\n    onMessage: z.function().optional(),\n    onToolCallRequestStart: z.function().optional(),\n    onToolCallRequestNameReceived: z.function().optional(),\n    onToolCallRequestArgumentFragmentGenerated: z.function().optional(),\n    onToolCallRequestEnd: z.function().optional(),\n    onToolCallRequestFailure: z.function().optional(),\n});\n/**\n * Split a llmRespondOpts into its parts.\n */\nfunction splitRespondOpts(opts) {\n    const { onMessage, ...remaining } = opts;\n    const [config, llmPredictionOpts] = splitPredictionOpts(remaining);\n    return [\n        config,\n        llmPredictionOpts,\n        {\n            onMessage,\n        },\n    ];\n}\nconst llmActionOptsSchema = llmPredictionConfigInputSchema\n    .extend(llmActBaseOptsSchema.shape)\n    .extend({\n    preset: z.string().optional(),\n});\nfunction splitActOpts(opts) {\n    const { onFirstToken, onPredictionFragment, onMessage, onRoundStart, onRoundEnd, onPredictionCompleted, onPromptProcessingProgress, onToolCallRequestStart, onToolCallRequestNameReceived, onToolCallRequestArgumentFragmentGenerated, onToolCallRequestEnd, onToolCallRequestFinalized, onToolCallRequestFailure, onToolCallRequestDequeued, guardToolCall, handleInvalidToolRequest, maxPredictionRounds, signal, preset, allowParallelToolExecution, ...config } = opts;\n    return [\n        config,\n        {\n            onFirstToken,\n            onPredictionFragment,\n            onMessage,\n            onRoundStart,\n            onRoundEnd,\n            onPredictionCompleted,\n            onPromptProcessingProgress,\n            onToolCallRequestStart,\n            onToolCallRequestNameReceived,\n            onToolCallRequestArgumentFragmentGenerated,\n            onToolCallRequestEnd,\n            onToolCallRequestFinalized,\n            onToolCallRequestFailure,\n            onToolCallRequestDequeued,\n            guardToolCall,\n            handleInvalidToolRequest,\n            maxPredictionRounds,\n            signal,\n            preset,\n            allowParallelToolExecution,\n        },\n    ];\n}\nconst noFormattingTemplate = text `\r\n  {% for message in messages %}{{ message['content'] }}{% endfor %}\r\n`;\n/**\n * This represents a set of requirements for a model. It is not tied to a specific model, but rather\n * to a set of requirements that a model must satisfy.\n *\n * For example, if you got the model via `client.llm.model(\"my-identifier\")`, you will get a\n * `LLMDynamicHandle` for the model with the identifier `my-identifier`. If the model is unloaded,\n * and another model is loaded with the same identifier, using the same `LLMDynamicHandle` will use\n * the new model.\n *\n * @public\n */\nclass LLMDynamicHandle extends DynamicHandle {\n    /**\n     * Don't construct this on your own. Use {@link LLMNamespace#model} or\n     * {@link LLMNamespace#createDynamicHandle} instead.\n     *\n     * @internal\n     */\n    constructor(\n    /** @internal */\n    port, \n    /** @internal */\n    specifier, \n    /** @internal */\n    validator, \n    /** @internal */\n    logger = new SimpleLogger(`LLMModel`)) {\n        super(port, specifier);\n        this.validator = validator;\n        this.logger = logger;\n        /** @internal */\n        this.internalKVConfigStack = { layers: [] };\n        /** @internal */\n        this.internalIgnoreServerSessionConfig = undefined;\n    }\n    /** @internal */\n    internalPredict(history, predictionConfigStack, cancelEvent, extraOpts, onFragment, onFinished, onError) {\n        let finished = false;\n        let firstTokenTriggered = false;\n        let currentCallId = null;\n        let receivedEagerToolNameReporting = false;\n        let receivedToolArgumentsStreaming = false;\n        const channel = this.port.createChannel(\"predict\", {\n            modelSpecifier: this.specifier,\n            history,\n            predictionConfigStack,\n            fuzzyPresetIdentifier: extraOpts.preset,\n            ignoreServerSessionConfig: this.internalIgnoreServerSessionConfig,\n        }, message => {\n            switch (message.type) {\n                case \"fragment\": {\n                    if (!firstTokenTriggered) {\n                        firstTokenTriggered = true;\n                        safeCallCallback(this.logger, \"onFirstToken\", extraOpts.onFirstToken, []);\n                    }\n                    safeCallCallback(this.logger, \"onFragment\", extraOpts.onPredictionFragment, [\n                        message.fragment,\n                    ]);\n                    onFragment(message.fragment);\n                    break;\n                }\n                case \"promptProcessingProgress\": {\n                    safeCallCallback(this.logger, \"onPromptProcessingProgress\", extraOpts.onPromptProcessingProgress, [message.progress]);\n                    break;\n                }\n                case \"toolCallGenerationStart\": {\n                    if (currentCallId === null) {\n                        currentCallId = 0;\n                    }\n                    else {\n                        currentCallId++;\n                    }\n                    receivedEagerToolNameReporting = false;\n                    receivedToolArgumentsStreaming = false;\n                    safeCallCallback(this.logger, \"onToolCallGenerationStart\", extraOpts.onToolCallRequestStart, [currentCallId, { toolCallId: message.toolCallId }]);\n                    break;\n                }\n                case \"toolCallGenerationNameReceived\": {\n                    receivedEagerToolNameReporting = true;\n                    safeCallCallback(this.logger, \"onToolCallGenerationNameReceived\", extraOpts.onToolCallRequestNameReceived, [currentCallId ?? -1, message.name]);\n                    break;\n                }\n                case \"toolCallGenerationArgumentFragmentGenerated\": {\n                    receivedToolArgumentsStreaming = true;\n                    safeCallCallback(this.logger, \"onToolCallGenerationArgumentFragmentGenerated\", extraOpts.onToolCallRequestArgumentFragmentGenerated, [currentCallId ?? -1, message.content]);\n                    break;\n                }\n                case \"toolCallGenerationEnd\": {\n                    if (!receivedEagerToolNameReporting) {\n                        // If eager name reporting not received, report it.\n                        safeCallCallback(this.logger, \"onToolCallGenerationNameReceived\", extraOpts.onToolCallRequestNameReceived, [currentCallId ?? -1, message.toolCallRequest.name]);\n                    }\n                    if (!receivedToolArgumentsStreaming) {\n                        // If arguments streaming not received, just pretend we have received all the\n                        // arguments as a single JSON\n                        safeCallCallback(this.logger, \"onToolCallGenerationArgumentFragmentGenerated\", extraOpts.onToolCallRequestArgumentFragmentGenerated, [\n                            currentCallId ?? -1,\n                            JSON.stringify(message.toolCallRequest.arguments ?? {}, null, 2),\n                        ]);\n                    }\n                    safeCallCallback(this.logger, \"onToolCallGenerationEnd\", extraOpts.onToolCallRequestEnd, [\n                        currentCallId ?? -1,\n                        { toolCallRequest: message.toolCallRequest, rawContent: message.rawContent },\n                    ]);\n                    break;\n                }\n                case \"toolCallGenerationFailed\": {\n                    const toolCallRequestError = new ToolCallRequestError(fromSerializedError(message.error).message, message.rawContent);\n                    safeCallCallback(this.logger, \"onToolCallGenerationFailed\", extraOpts.onToolCallRequestFailure, [currentCallId ?? -1, toolCallRequestError]);\n                    break;\n                }\n                case \"success\": {\n                    finished = true;\n                    onFinished(message.stats, message.modelInfo, message.loadModelConfig, message.predictionConfig);\n                    break;\n                }\n            }\n        }, { stack: getCurrentStack(2) });\n        cancelEvent.subscribeOnce(() => {\n            if (finished) {\n                return;\n            }\n            channel.send({ type: \"cancel\" });\n        });\n        channel.onError.subscribeOnce(onError);\n    }\n    predictionConfigInputToKVConfig(config) {\n        let structuredField = undefined;\n        if (typeof config.structured?.parse === \"function\") {\n            structuredField = {\n                type: \"json\",\n                jsonSchema: zodToJsonSchema(config.structured),\n            };\n        }\n        else {\n            structuredField = config.structured;\n        }\n        const convertedConfig = {\n            ...config,\n            structured: structuredField,\n        };\n        return llmPredictionConfigToKVConfig(convertedConfig);\n    }\n    createZodParser(zodSchema) {\n        return content => {\n            try {\n                return zodSchema.parse(JSON.parse(content));\n            }\n            catch (e) {\n                throw new Error(\"Failed to parse structured output: \" + JSON.stringify(content), {\n                    cause: e,\n                });\n            }\n        };\n    }\n    /**\n     * Use the loaded model to predict text.\n     *\n     * This method returns an {@link OngoingPrediction} object. An ongoing prediction can be used as a\n     * promise (if you only care about the final result) or as an async iterable (if you want to\n     * stream the results as they are being generated).\n     *\n     * Example usage as a promise (Resolves to a {@link PredictionResult}):\n     *\n     * ```typescript\n     * const result = await model.complete(\"When will The Winds of Winter be released?\");\n     * console.log(result.content);\n     * ```\n     *\n     * Or\n     *\n     * ```typescript\n     * model.complete(\"When will The Winds of Winter be released?\")\n     *  .then(result =\\> console.log(result.content))\n     *  .catch(error =\\> console.error(error));\n     * ```\n     *\n     * Example usage as an async iterable (streaming):\n     *\n     * ```typescript\n     * for await (const { content } of model.complete(\"When will The Winds of Winter be released?\")) {\n     *   process.stdout.write(content);\n     * }\n     * ```\n     *\n     * If you wish to stream the result, but also getting the final prediction results (for example,\n     * you wish to get the prediction stats), you can use the following pattern:\n     *\n     * ```typescript\n     * const prediction = model.complete(\"When will The Winds of Winter be released?\");\n     * for await (const { content } of prediction) {\n     *   process.stdout.write(content);\n     * }\n     * const result = await prediction.result();\n     * console.log(result.stats);\n     * ```\n     *\n     * @param prompt - The prompt to use for prediction.\n     * @param opts - Options for the prediction.\n     */\n    complete(prompt, opts = {}) {\n        const stack = getCurrentStack(1);\n        [prompt, opts] = this.validator.validateMethodParamsOrThrow(\"model\", \"complete\", [\"prompt\", \"opts\"], [z.string(), llmPredictionOptsSchema], [prompt, opts], stack);\n        const [config, extraOpts] = splitPredictionOpts(opts);\n        const [cancelEvent, emitCancelEvent] = BufferedEvent.create();\n        if (extraOpts.signal !== undefined) {\n            if (extraOpts.signal.aborted) {\n                // If the signal is already aborted, we need to cancel the prediction immediately.\n                emitCancelEvent();\n            }\n            else {\n                extraOpts.signal.addEventListener(\"abort\", () => {\n                    emitCancelEvent();\n                }, { once: true });\n            }\n        }\n        const zodSchemaParseResult = zodSchemaSchema.safeParse(config.structured);\n        const { ongoingPrediction, finished, failed, push } = OngoingPrediction.create(emitCancelEvent, !zodSchemaParseResult.success ? null : this.createZodParser(zodSchemaParseResult.data));\n        this.internalPredict(this.resolveCompletionContext(prompt), {\n            layers: [\n                ...this.internalKVConfigStack.layers,\n                {\n                    layerName: \"apiOverride\",\n                    config: this.predictionConfigInputToKVConfig({\n                        // If the user did not specify `stopStrings`, we default to an empty array. This is to\n                        // prevent the model from using the value set in the preset.\n                        stopStrings: [],\n                        ...config,\n                    }),\n                },\n                {\n                    layerName: \"completeModeFormatting\",\n                    config: llmSharedPredictionConfigSchematics.buildPartialConfig({\n                        promptTemplate: {\n                            type: \"jinja\",\n                            jinjaPromptTemplate: {\n                                template: noFormattingTemplate,\n                            },\n                            stopStrings: [],\n                        },\n                    }),\n                },\n            ],\n        }, cancelEvent, extraOpts, fragment => push(fragment), (stats, modelInfo, loadModelConfig, predictionConfig) => finished(stats, modelInfo, loadModelConfig, predictionConfig), error => failed(error));\n        return ongoingPrediction;\n    }\n    resolveCompletionContext(contextInput) {\n        return {\n            messages: [\n                {\n                    role: \"user\",\n                    content: [{ type: \"text\", text: contextInput }],\n                },\n            ],\n        };\n    }\n    /**\n     * Use the loaded model to generate a response based on the given history.\n     *\n     * This method returns an {@link OngoingPrediction} object. An ongoing prediction can be used as a\n     * promise (if you only care about the final result) or as an async iterable (if you want to\n     * stream the results as they are being generated).\n     *\n     * Example usage as a promise (Resolves to a {@link PredictionResult}):\n     *\n     * ```typescript\n     * const history = [{ role: 'user', content: \"When will The Winds of Winter be released?\" }];\n     * const result = await model.respond(history);\n     * console.log(result.content);\n     * ```\n     *\n     * Or\n     *\n     * ```typescript\n     * const history = [{ role: 'user', content: \"When will The Winds of Winter be released?\" }];\n     * model.respond(history)\n     *  .then(result => console.log(result.content))\n     *  .catch(error => console.error(error));\n     * ```\n     *\n     * Example usage as an async iterable (streaming):\n     *\n     * ```typescript\n     * const history = [{ role: 'user', content: \"When will The Winds of Winter be released?\" }];\n     * for await (const { content } of model.respond(history)) {\n     *   process.stdout.write(content);\n     * }\n     * ```\n     *\n     * If you wish to stream the result, but also getting the final prediction results (for example,\n     * you wish to get the prediction stats), you can use the following pattern:\n     *\n     * ```typescript\n     * const history = [{ role: 'user', content: \"When will The Winds of Winter be released?\" }];\n     * const prediction = model.respond(history);\n     * for await (const { content } of prediction) {\n     *   process.stdout.write(content);\n     * }\n     * const result = await prediction;\n     * console.log(result.stats);\n     * ```\n     *\n     * @param chat - The LLMChatHistory array to use for generating a response.\n     * @param opts - Options for the prediction.\n     */\n    respond(chat, opts = {}) {\n        const stack = getCurrentStack(1);\n        [chat, opts] = this.validator.validateMethodParamsOrThrow(\"model\", \"respond\", [\"chat\", \"opts\"], [chatHistoryLikeSchema, llmRespondOptsSchema], [chat, opts], stack);\n        const [cancelEvent, emitCancelEvent] = BufferedEvent.create();\n        const [config, predictionOpts, respondOpts] = splitRespondOpts(opts);\n        if (predictionOpts.signal !== undefined) {\n            if (predictionOpts.signal.aborted) {\n                // If the signal is already aborted, we need to cancel the prediction immediately.\n                emitCancelEvent();\n            }\n            else {\n                predictionOpts.signal.addEventListener(\"abort\", () => {\n                    emitCancelEvent();\n                }, { once: true });\n            }\n        }\n        const zodSchemaParseResult = zodSchemaSchema.safeParse(config.structured);\n        const { ongoingPrediction, finished, failed, push } = OngoingPrediction.create(emitCancelEvent, !zodSchemaParseResult.success ? null : this.createZodParser(zodSchemaParseResult.data));\n        this.internalPredict(accessMaybeMutableInternals(Chat.from(chat))._internalGetData(), addKVConfigToStack(this.internalKVConfigStack, \"apiOverride\", this.predictionConfigInputToKVConfig(config)), cancelEvent, predictionOpts, fragment => push(fragment), (stats, modelInfo, loadModelConfig, predictionConfig) => finished(stats, modelInfo, loadModelConfig, predictionConfig), error => failed(error));\n        ongoingPrediction.then(result => {\n            // Call the onMessage callback with the result.\n            safeCallCallback(this.logger, \"onMessage\", respondOpts.onMessage, [\n                ChatMessage.create(\"assistant\", result.content),\n            ]);\n        }, () => { });\n        return ongoingPrediction;\n    }\n    /**\n     * @param chat - The LLMChatHistory array to act from as the base\n     * @param tool - An array of tools that the model can use during the operation. You can create\n     * tools by using the `tool` function.\n     * @param opts - Additional options\n     *\n     * Example:\n     *\n     * ```\n     * import { LMStudioClient, tool } from \"@lmstudio/sdk\";\n     * import { z } from \"zod\";\n     *\n     * const client = new LMStudioClient();\n     * const model = await client.llm.model();\n     *\n     * const additionTool = tool({\n     *   name: \"add\",\n     *   description: \"Add two numbers\",\n     *   parameters: {\n     *     a: z.number(),\n     *     b: z.number(),\n     *   },\n     *   implementation: ({ a, b }) => a + b,\n     * });\n     *\n     * await model.act(\"What is 1234 + 4321?\", [additionTool], {\n     *   onMessage: message => console.log(message.toString()),\n     * });\n     * ```\n     */\n    async act(chat, tools, opts = {}) {\n        const startTime = performance.now();\n        const stack = getCurrentStack(1);\n        [chat, opts] = this.validator.validateMethodParamsOrThrow(\"model\", \"act\", [\"chat\", \"opts\"], [chatHistoryLikeSchema, llmActionOptsSchema], [chat, opts], stack);\n        const [config, { preset, ...baseOpts }] = splitActOpts(opts);\n        if (config.structured !== undefined &&\n            config.structured.type !== \"none\" &&\n            tools.length > 0) {\n            throw makePrettyError(\"Structured output is currently not supported in .act() when there are tools.\", stack);\n        }\n        if (config.structured !== undefined && config.structured.parse !== undefined) {\n            throw makePrettyError(\"zod schema is not supported in .act().\", stack);\n        }\n        if (config.rawTools !== undefined) {\n            throw makePrettyError(\"`rawTools` is not supported in act. Use `tools` instead\", stack);\n        }\n        let rawTools;\n        if (tools.length === 0) {\n            rawTools = { type: \"none\" };\n        }\n        else {\n            rawTools = {\n                type: \"toolArray\",\n                tools: tools.map(toolToLLMTool),\n            };\n        }\n        const configWithTools = addKVConfigToStack(this.internalKVConfigStack, \"apiOverride\", this.predictionConfigInputToKVConfig({\n            ...config,\n            rawTools,\n        }));\n        const configWithoutTools = addKVConfigToStack(this.internalKVConfigStack, \"apiOverride\", this.predictionConfigInputToKVConfig({\n            ...config,\n            rawTools: { type: \"none\" },\n        }));\n        return await internalAct(chat, tools, baseOpts, stack, this.logger, startTime, \n        // Implementation of the prediction function. This performs the prediction by creating a\n        // predict channel and redirect the messages to the appropriate handlers.\n        async ({ allowTools, history, signal, handleFragment, handlePromptProcessingProgress, handleToolCallGenerationStart, handleToolCallGenerationNameReceived, handleToolCallGenerationArgumentFragmentGenerated, handleToolCallGenerationEnd, handleToolCallGenerationFailed, handlePredictionEnd, handleError, }) => {\n            // Use predict channel\n            const channel = this.port.createChannel(\"predict\", {\n                modelSpecifier: this.specifier,\n                history,\n                predictionConfigStack: allowTools ? configWithTools : configWithoutTools,\n                fuzzyPresetIdentifier: preset,\n                ignoreServerSessionConfig: this.internalIgnoreServerSessionConfig,\n            }, message => {\n                const messageType = message.type;\n                switch (messageType) {\n                    case \"fragment\": {\n                        handleFragment(message.fragment);\n                        break;\n                    }\n                    case \"promptProcessingProgress\": {\n                        handlePromptProcessingProgress(message.progress);\n                        break;\n                    }\n                    case \"toolCallGenerationStart\": {\n                        handleToolCallGenerationStart(message.toolCallId);\n                        break;\n                    }\n                    case \"toolCallGenerationNameReceived\": {\n                        handleToolCallGenerationNameReceived(message.name);\n                        break;\n                    }\n                    case \"toolCallGenerationArgumentFragmentGenerated\": {\n                        handleToolCallGenerationArgumentFragmentGenerated(message.content);\n                        break;\n                    }\n                    case \"toolCallGenerationEnd\": {\n                        handleToolCallGenerationEnd(message.toolCallRequest, message.rawContent);\n                        break;\n                    }\n                    case \"toolCallGenerationFailed\": {\n                        handleToolCallGenerationFailed(fromSerializedError(message.error), message.rawContent);\n                        break;\n                    }\n                    case \"success\": {\n                        // This is the end of the prediction. The following object is passed to the\n                        // `makePredictionResult` function to create the final PredictionResult. (see below)\n                        handlePredictionEnd({\n                            stats: message.stats,\n                            modelInfo: message.modelInfo,\n                            loadModelConfig: message.loadModelConfig,\n                            predictionConfig: message.predictionConfig,\n                        });\n                        break;\n                    }\n                }\n            }, { stack });\n            if (signal.aborted) {\n                // If the signal is already aborted, we need to cancel the prediction immediately.\n                channel.send({ type: \"cancel\" });\n            }\n            else {\n                signal.addEventListener(\"abort\", () => {\n                    channel.send({ type: \"cancel\" });\n                }, { once: true });\n            }\n            channel.onError.subscribeOnce(handleError);\n        }, ({ endPacket, content, nonReasoningContent, reasoningContent, predictionsPerformed }) => {\n            return new PredictionResult(content, reasoningContent, nonReasoningContent, endPacket.stats, endPacket.modelInfo, predictionsPerformed, endPacket.loadModelConfig, endPacket.predictionConfig);\n        });\n    }\n    async getContextLength() {\n        const stack = getCurrentStack(1);\n        const loadConfig = await this.getLoadConfig(stack);\n        return llmSharedLoadConfigSchematics.access(loadConfig, \"contextLength\");\n    }\n    async applyPromptTemplate(history, opts = {}) {\n        const stack = getCurrentStack(1);\n        [history, opts] = this.validator.validateMethodParamsOrThrow(\"model\", \"applyPromptTemplate\", [\"history\", \"opts\"], [chatHistoryLikeSchema, llmApplyPromptTemplateOptsSchema], [history, opts], stack);\n        return (await this.port.callRpc(\"applyPromptTemplate\", {\n            specifier: this.specifier,\n            history: accessMaybeMutableInternals(Chat.from(history))._internalGetData(),\n            predictionConfigStack: this.internalKVConfigStack,\n            opts,\n        }, {\n            stack,\n        })).formatted;\n    }\n    async tokenize(inputString) {\n        const stack = getCurrentStack(1);\n        inputString = this.validator.validateMethodParamOrThrow(\"model\", \"tokenize\", \"inputString\", z.string().or(z.array(z.string())), inputString, stack);\n        if (Array.isArray(inputString)) {\n            return (await Promise.all(inputString.map(s => this.port.callRpc(\"tokenize\", { specifier: this.specifier, inputString: s }, { stack })))).map(r => r.tokens);\n        }\n        else {\n            return (await this.port.callRpc(\"tokenize\", {\n                specifier: this.specifier,\n                inputString,\n            }, { stack })).tokens;\n        }\n    }\n    async countTokens(inputString) {\n        const stack = getCurrentStack(1);\n        inputString = this.validator.validateMethodParamOrThrow(\"model\", \"countTokens\", \"inputString\", z.string(), inputString, stack);\n        return (await this.port.callRpc(\"countTokens\", {\n            specifier: this.specifier,\n            inputString,\n        }, { stack })).tokenCount;\n    }\n    /**\n     * Starts to eagerly preload a draft model. This is useful when you want a draft model to be ready\n     * for speculative decoding.\n     *\n     * Preloading is done on a best-effort basis and may not always succeed. It is not guaranteed that\n     * the draft model is actually loaded when this method returns. Thus, this method should only be\n     * used as an optimization. The actual draft model used only depends on the parameter set when\n     * performing the prediction.\n     */\n    async unstable_preloadDraftModel(draftModelKey) {\n        const stack = getCurrentStack(1);\n        draftModelKey = this.validator.validateMethodParamOrThrow(\"model\", \"unstable_preloadDraftModel\", \"draftModelKey\", z.string(), draftModelKey, stack);\n        await this.port.callRpc(\"preloadDraftModel\", { specifier: this.specifier, draftModelKey }, { stack });\n    }\n}\n\n/**\n * Represents a specific loaded LLM. Most LLM related operations are inherited from\n * {@link LLMDynamicHandle}.\n *\n * @public\n */\nclass LLM extends LLMDynamicHandle {\n    /** @internal */\n    constructor(llmPort, info, validator, logger = new SimpleLogger(`LLM`)) {\n        const specifier = {\n            type: \"instanceReference\",\n            instanceReference: info.instanceReference,\n        };\n        super(llmPort, specifier, validator, logger);\n        this.identifier = info.identifier;\n        this.path = info.path;\n        this.modelKey = info.modelKey;\n        this.format = info.format;\n        this.displayName = info.displayName;\n        this.sizeBytes = info.sizeBytes;\n        this.vision = info.vision;\n        this.trainedForToolUse = info.trainedForToolUse;\n    }\n    async unload() {\n        const stack = getCurrentStack(1);\n        await this.port.callRpc(\"unloadModel\", { identifier: this.identifier }, { stack });\n    }\n    async getModelInfo() {\n        const info = await super.getModelInfo();\n        if (info === undefined) {\n            const stack = getCurrentStack(1);\n            throw makePrettyError(\"This model has already been unloaded\", stack);\n        }\n        return info;\n    }\n}\n\n/** @public */\nclass LLMNamespace extends ModelNamespace {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.namespace = \"llm\";\n        /** @internal */\n        this.defaultLoadConfig = {};\n        /** @internal */\n        this.loadModelConfigSchema = llmLoadModelConfigSchema;\n    }\n    /** @internal */\n    loadConfigToKVConfig(config) {\n        return llmLlamaMoeLoadConfigSchematics.buildPartialConfig({\n            \"contextLength\": config.contextLength,\n            \"llama.evalBatchSize\": config.evalBatchSize,\n            \"llama.acceleration.offloadRatio\": config.gpu?.ratio,\n            \"numCpuExpertLayersRatio\": config.gpu?.numCpuExpertLayersRatio,\n            \"load.gpuSplitConfig\": convertGPUSettingToGPUSplitConfig(config.gpu),\n            \"llama.flashAttention\": config.flashAttention,\n            \"llama.ropeFrequencyBase\": numberToCheckboxNumeric(config.ropeFrequencyBase, 0, 0),\n            \"llama.ropeFrequencyScale\": numberToCheckboxNumeric(config.ropeFrequencyScale, 0, 0),\n            \"llama.keepModelInMemory\": config.keepModelInMemory,\n            \"seed\": numberToCheckboxNumeric(config.seed, -1, 0),\n            \"llama.useFp16ForKVCache\": config.useFp16ForKVCache,\n            \"llama.tryMmap\": config.tryMmap,\n            \"numExperts\": config.numExperts,\n            \"llama.kCacheQuantizationType\": cacheQuantizationTypeToCheckbox({\n                value: config.llamaKCacheQuantizationType,\n                falseDefault: \"f16\",\n            }),\n            \"llama.vCacheQuantizationType\": cacheQuantizationTypeToCheckbox({\n                value: config.llamaVCacheQuantizationType,\n                falseDefault: \"f16\",\n            }),\n        });\n    }\n    /** @internal */\n    createDomainSpecificModel(port, info, validator, logger) {\n        return new LLM(port, info, validator, logger);\n    }\n    /** @internal */\n    createDomainDynamicHandle(port, specifier, validator, logger) {\n        return new LLMDynamicHandle(port, specifier, validator, logger);\n    }\n}\n\n/**\n * Represents the result of a prediction from a generator plugin.\n *\n * The most notably property is {@link GeneratorPredictionResult#content}, which contains the\n * generated text.\n *\n * @public\n * @experimental [EXP-GEN-PREDICT] Using generator plugins programmatically is still in development.\n * This may change in the future without warning.\n */\nclass GeneratorPredictionResult {\n    constructor(\n    /**\n     * The newly generated text as generated by the generator plugin.\n     */\n    content, \n    /**\n     * Part of the generated text that is \"reasoning\" content. For example, text inside <think>\n     * tags. The generator is responsible for determining what is considered reasoning content.\n     */\n    reasoningContent, \n    /**\n     * Part of the generated text that is not \"reasoning\" content. For example, text outside\n     * <think> tags. The generator is responsible for determining what is considered reasoning\n     * content.\n     */\n    nonReasoningContent, \n    /**\n     * The identifier of the plugin that generated this result.\n     */\n    pluginIdentifier) {\n        this.content = content;\n        this.reasoningContent = reasoningContent;\n        this.nonReasoningContent = nonReasoningContent;\n        this.pluginIdentifier = pluginIdentifier;\n    }\n}\n\n/**\n * Represents an ongoing prediction from a generator.\n *\n * Note, this class is Promise-like, meaning you can use it as a promise. It resolves to a\n * {@link GeneratorPredictionResult}, which contains the generated text in the `.content` property. Example\n * usage:\n *\n * ```typescript\n * const result = await generator.complete(\"When will The Winds of Winter be released?\");\n * console.log(result.content);\n * ```\n *\n * Or you can use instances methods like `then` and `catch` to handle the result or error of the\n * prediction.\n *\n * ```typescript\n * generator.complete(\"When will The Winds of Winter be released?\")\n *  .then(result =\\> console.log(result.content))\n *  .catch(error =\\> console.error(error));\n * ```\n *\n * Alternatively, you can also stream the result (process the results as more content is being\n * generated). For example:\n *\n * ```typescript\n * for await (const { content } of generator.complete(\"When will The Winds of Winter be released?\")) {\n *   process.stdout.write(content);\n * }\n * ```\n *\n * @public\n * @experimental [EXP-GEN-PREDICT] Using generator plugins programmatically is still in development.\n * This may change in the future without warning.\n */\nclass OngoingGeneratorPrediction extends StreamablePromise {\n    async collect(fragments) {\n        const content = fragments.map(({ content }) => content).join(\"\");\n        const reasoningContent = fragments\n            .filter(({ isStructural }) => !isStructural)\n            .filter(({ reasoningType }) => reasoningType === \"reasoning\")\n            .map(({ content }) => content)\n            .join(\"\");\n        const nonReasoningContent = fragments\n            .filter(({ isStructural }) => !isStructural)\n            .filter(({ reasoningType }) => reasoningType === \"none\")\n            .map(({ content }) => content)\n            .join(\"\");\n        return new GeneratorPredictionResult(content, reasoningContent, nonReasoningContent, this.pluginIdentifier);\n    }\n    constructor(pluginIdentifier, onCancel) {\n        super();\n        this.pluginIdentifier = pluginIdentifier;\n        this.onCancel = onCancel;\n    }\n    /** @internal */\n    static create(pluginIdentifier, onCancel) {\n        const ongoingPrediction = new OngoingGeneratorPrediction(pluginIdentifier, onCancel);\n        const finished = () => ongoingPrediction.finished();\n        const failed = (error) => ongoingPrediction.finished(error);\n        const push = (fragment) => ongoingPrediction.push(fragment);\n        return { ongoingPrediction, finished, failed, push };\n    }\n    /**\n     * Get the final prediction results. If you have been streaming the results, awaiting on this\n     * method will take no extra effort, as the results are already available in the internal buffer.\n     *\n     * Example:\n     *\n     * ```typescript\n     * const prediction = generator.complete(\"When will The Winds of Winter be released?\");\n     * for await (const { content } of prediction) {\n     *   process.stdout.write(content);\n     * }\n     * const result = await prediction.result();\n     * console.log(result.stats);\n     * ```\n     *\n     * Technically, awaiting on this method is the same as awaiting on the instance itself:\n     *\n     * ```typescript\n     * await prediction.result();\n     *\n     * // Is the same as:\n     *\n     * await prediction;\n     * ```\n     */\n    async result() {\n        return await this;\n    }\n    /**\n     * Cancels the prediction.\n     */\n    async cancel() {\n        this.onCancel();\n    }\n}\n\nconst llmGeneratorPredictionOptsSchema = z.object({\n    onFirstToken: z.function().optional(),\n    onPredictionFragment: z.function().optional(),\n    onMessage: z.function().optional(),\n    signal: z.instanceof(AbortSignal).optional(),\n    pluginConfig: kvConfigSchema.optional(),\n    workingDirectory: z.string().optional(),\n});\nconst llmGeneratorActOptsSchema = llmActBaseOptsSchema.extend({\n    pluginConfig: kvConfigSchema.optional(),\n    workingDirectory: z.string().optional(),\n});\n/**\n * Represents a handle for a generator that can act as a LLM.\n *\n * @public\n * @experimental [EXP-GEN-PREDICT] Using generator plugins programmatically is still in development.\n * This may change in the future without warning.\n */\nclass LLMGeneratorHandle {\n    /**\n     * Don't use this method directly, use {@link LLMNamespace#createGeneratorHandle} instead.\n     *\n     * @internal\n     */\n    constructor(\n    /** @internal */\n    port, \n    /** @internal */\n    pluginIdentifier, \n    /** @internal */\n    validator, \n    /** @internal */\n    associatedPredictionProcess, \n    /** @internal */\n    logger = new SimpleLogger(`LLMGeneratorHandle`)) {\n        this.port = port;\n        this.pluginIdentifier = pluginIdentifier;\n        this.validator = validator;\n        this.associatedPredictionProcess = associatedPredictionProcess;\n        this.logger = logger;\n        /**\n         * The identifier of the plugin that this handle is associated with.\n         */\n        this.identifier = this.pluginIdentifier;\n    }\n    getPluginConfigSpecifier(userSuppliedPluginConfig, userSuppliedWorkingDirectory, stack) {\n        if (this.associatedPredictionProcess === null) {\n            // If there is no associated prediction process, we can use the user-supplied config directly.\n            return {\n                type: \"direct\",\n                config: userSuppliedPluginConfig ?? emptyKVConfig,\n                workingDirectoryPath: userSuppliedWorkingDirectory ?? undefined,\n            };\n        }\n        // If there is an associated prediction process, we first need to make sure that the user has\n        // not supplied a plugin config or working directory, as these are not allowed in this case.\n        // (The plugin config/working directory of the prediction process will be used instead.)\n        if (userSuppliedPluginConfig !== undefined) {\n            throw makeTitledPrettyError(\"Cannot use plugin config with prediction process\", text `\r\n          You cannot provide a plugin config to the generator handle when it is associated with a\r\n          prediction process. The plugin config that was configured for the prediction process will\r\n          be used instead.\r\n\r\n          If you want to use a different plugin config, you will need to create a separate\r\n          GeneratorHandle instead.\r\n        `, stack);\n        }\n        if (userSuppliedWorkingDirectory !== undefined) {\n            throw makeTitledPrettyError(\"Cannot use working directory with prediction process\", text `\r\n          You cannot provide a working directory to the generator handle when it is associated with\r\n          a prediction process. The working directory that was configured for the prediction process\r\n          will be used instead.\r\n\r\n          If you want to use a different working directory, you will need to create a separate\r\n          GeneratorHandle instead.\r\n        `, stack);\n        }\n        // If we reach here, we can safely return the plugin config specifier for the prediction\n        // process.\n        return {\n            type: \"predictionProcess\",\n            pci: this.associatedPredictionProcess.pci,\n            token: this.associatedPredictionProcess.token,\n        };\n    }\n    /**\n     * Use the generator to produce a response based on the given history.\n     */\n    respond(chat, opts = {}) {\n        const stack = getCurrentStack(1);\n        [chat, opts] = this.validator.validateMethodParamsOrThrow(\"LLMGeneratorHandle\", \"respond\", [\"chat\", \"opts\"], [chatHistoryLikeSchema, llmGeneratorPredictionOptsSchema], [chat, opts], stack);\n        const { onFirstToken, onPredictionFragment, onMessage, signal, pluginConfig, workingDirectory, } = opts;\n        let resolved = false;\n        let firstTokenTriggered = false;\n        const cancelEvent = new CancelEvent();\n        if (signal !== undefined) {\n            if (signal.aborted) {\n                // If the signal is already aborted, we can immediately cancel the event.\n                cancelEvent.cancel();\n            }\n            else {\n                signal.addEventListener(\"abort\", () => cancelEvent.cancel(), { once: true });\n            }\n        }\n        const { ongoingPrediction, finished, failed, push } = OngoingGeneratorPrediction.create(this.pluginIdentifier, () => {\n            cancelEvent.cancel();\n        });\n        const channel = this.port.createChannel(\"generateWithGenerator\", {\n            pluginIdentifier: this.pluginIdentifier,\n            pluginConfigSpecifier: this.getPluginConfigSpecifier(pluginConfig, workingDirectory, stack),\n            tools: [],\n            history: accessMaybeMutableInternals(Chat.from(chat))._internalGetData(),\n        }, message => {\n            const messageType = message.type;\n            switch (messageType) {\n                case \"fragment\": {\n                    if (!firstTokenTriggered) {\n                        firstTokenTriggered = true;\n                        safeCallCallback(this.logger, \"onFirstToken\", onFirstToken, []);\n                    }\n                    safeCallCallback(this.logger, \"onPredictionFragment\", onPredictionFragment, [\n                        message.fragment,\n                    ]);\n                    push(message.fragment);\n                    break;\n                }\n                case \"success\": {\n                    resolved = true;\n                    finished();\n                    break;\n                }\n            }\n        }, { stack });\n        channel.onError.subscribeOnce(error => {\n            if (resolved) {\n                return;\n            }\n            resolved = true;\n            failed(error);\n        });\n        cancelEvent.subscribeOnce(() => {\n            if (resolved) {\n                return;\n            }\n            channel.send({ type: \"cancel\" });\n        });\n        ongoingPrediction.then(result => {\n            // Call the onMessage callback with the result.\n            safeCallCallback(this.logger, \"onMessage\", onMessage, [\n                ChatMessage.create(\"assistant\", result.content),\n            ]);\n        }, () => { });\n        return ongoingPrediction;\n    }\n    async act(chat, tools, opts = {}) {\n        const startTime = performance.now();\n        const stack = getCurrentStack(1);\n        [chat, opts] = this.validator.validateMethodParamsOrThrow(\"LLMGeneratorHandle\", \"act\", [\"chat\", \"opts\"], [chatHistoryLikeSchema, llmGeneratorActOptsSchema], [chat, opts], stack);\n        const { pluginConfig, workingDirectory, ...baseOpts } = opts;\n        const toolDefinitions = tools.map(toolToLLMTool);\n        return await internalAct(chat, tools, baseOpts, stack, this.logger, startTime, \n        // Implementation of the prediction function. This performs the prediction by creating a\n        // predict channel and redirect the messages to the appropriate handlers.\n        async ({ allowTools, history, signal, handleFragment, handlePromptProcessingProgress, handleToolCallGenerationStart, handleToolCallGenerationNameReceived, handleToolCallGenerationArgumentFragmentGenerated, handleToolCallGenerationEnd, handleToolCallGenerationFailed, handlePredictionEnd, handleError, }) => {\n            // Use predict channel\n            const channel = this.port.createChannel(\"generateWithGenerator\", {\n                pluginIdentifier: this.pluginIdentifier,\n                pluginConfigSpecifier: this.getPluginConfigSpecifier(pluginConfig, workingDirectory, stack),\n                tools: allowTools ? toolDefinitions : [],\n                history,\n            }, message => {\n                const messageType = message.type;\n                switch (messageType) {\n                    case \"fragment\": {\n                        handleFragment(message.fragment);\n                        break;\n                    }\n                    case \"promptProcessingProgress\": {\n                        handlePromptProcessingProgress(message.progress);\n                        break;\n                    }\n                    case \"toolCallGenerationStart\": {\n                        handleToolCallGenerationStart(message.toolCallId);\n                        break;\n                    }\n                    case \"toolCallGenerationNameReceived\": {\n                        handleToolCallGenerationNameReceived(message.name);\n                        break;\n                    }\n                    case \"toolCallGenerationArgumentFragmentGenerated\": {\n                        handleToolCallGenerationArgumentFragmentGenerated(message.content);\n                        break;\n                    }\n                    case \"toolCallGenerationEnd\": {\n                        handleToolCallGenerationEnd(message.toolCallRequest, undefined);\n                        break;\n                    }\n                    case \"toolCallGenerationFailed\": {\n                        handleToolCallGenerationFailed(new Error(\"Tool call generation failed\"), // Placeholder error for now\n                        undefined);\n                        break;\n                    }\n                    case \"success\": {\n                        // Nothing to hand to the `makePredictionResult` function. Just pass in `undefined`.\n                        handlePredictionEnd(undefined);\n                        break;\n                    }\n                }\n            }, { stack });\n            if (signal.aborted) {\n                // If the signal is already aborted, we can immediately cancel the channel.\n                channel.send({ type: \"cancel\" });\n            }\n            else {\n                signal.addEventListener(\"abort\", () => {\n                    channel.send({ type: \"cancel\" });\n                }, { once: true });\n            }\n            channel.onError.subscribeOnce(handleError);\n        }, ({ content, nonReasoningContent, reasoningContent }) => new GeneratorPredictionResult(content, reasoningContent, nonReasoningContent, this.pluginIdentifier));\n    }\n}\n\nconst generatorSchema = z.function();\n\n/**\n * The base class for all controllers.\n *\n * @public\n * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n * future without warning.\n */\nclass BaseController {\n    constructor(\n    /**\n     * The LM Studio client instance. Use this to interact with the LM Studio API.\n     */\n    client, \n    /**\n     * The abort signal that you should listen to for cancellation requests.\n     *\n     * See https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal for more information about\n     * abort signals.\n     */\n    abortSignal, pluginConfig, globalPluginConfig, workingDirectoryPath) {\n        this.client = client;\n        this.abortSignal = abortSignal;\n        this.pluginConfig = pluginConfig;\n        this.globalPluginConfig = globalPluginConfig;\n        this.workingDirectoryPath = workingDirectoryPath;\n    }\n    /**\n     * Gets the working directory for the current prediction. If your plugin produces files, you\n     * should aim to put them in this directory.\n     */\n    getWorkingDirectory() {\n        if (this.workingDirectoryPath === null) {\n            throw new Error(\"This prediction process is not attached to a working directory.\");\n        }\n        return this.workingDirectoryPath;\n    }\n    /**\n     * Get the per-chat config for the plugin. Takes in the configSchematics. You can get the\n     * values of fields like so:\n     *\n     * ```ts\n     * const config = ctl.getPluginConfig(configSchematics);\n     * const value = config.get(\"fieldKey\");\n     * ```\n     *\n     * @remarks\n     *\n     * If you need to name the type of the returned value, use:\n     *\n     * `InferParsedConfig<typeof configSchematics>`.\n     *\n     * Example:\n     *\n     * ```ts\n     * function myFunction(config: InferParsedConfig<typeof configSchematics>) {\n     *   // ...\n     * }\n     *\n     * myFunction(ctl.getPluginConfig(configSchematics));\n     * ```\n     */\n    getPluginConfig(configSchematics) {\n        return configSchematics.parse(this.pluginConfig);\n    }\n    /**\n     * Get the application-wide config for the plugin. Takes in the globalConfigSchematics. You can\n     * get the values of fields like so:\n     *\n     * ```ts\n     * const config = ctl.getGlobalPluginConfig(globalConfigSchematics);\n     * const value = config.get(\"fieldKey\");\n     * ```\n     *\n     * @remarks\n     *\n     * If you need to name the type of the returned value, use:\n     *\n     * `InferParsedConfig<typeof globalConfigSchematics>`.\n     *\n     * Example:\n     *\n     * ```ts\n     * function myFunction(config: InferParsedConfig<typeof globalConfigSchematics>) {\n     *   // ...\n     * }\n     *\n     * myFunction(ctl.getGlobalPluginConfig(globalConfigSchematics));\n     * ```\n     */\n    getGlobalPluginConfig(globalConfigSchematics) {\n        return globalConfigSchematics.parse(this.globalPluginConfig);\n    }\n    /**\n     * Provides a callback that will be called when the prediction is aborted. If the prediction is\n     * already aborted, the callback will be called immediately.\n     *\n     * You can also use {@link BaseController.abortSignal} if you are using an async function that\n     * supports abort signals.\n     *\n     * See https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal for more information about\n     * abort signals.\n     */\n    onAborted(callback) {\n        if (this.abortSignal.aborted) {\n            callback();\n        }\n        else {\n            this.abortSignal.addEventListener(\"abort\", callback, { once: true });\n        }\n    }\n}\n\n/**\n * Controller for a generator.\n *\n * @public\n * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n * future without warning.\n */\nclass GeneratorController extends BaseController {\n    /**\n     * @internal Do not construct this class yourself.\n     */\n    constructor(client, pluginConfig, globalPluginConfig, workingDirectoryPath, abortSignal, toolDefinitions, connector, validator) {\n        super(client, abortSignal, pluginConfig, globalPluginConfig, workingDirectoryPath);\n        this.toolDefinitions = toolDefinitions;\n        this.connector = connector;\n        this.validator = validator;\n    }\n    /**\n     * Get the definitions of the tools available for this generation.\n     */\n    getToolDefinitions() {\n        return this.toolDefinitions;\n    }\n    /**\n     * Use this function to report a text fragment has been generated.\n     *\n     * @param content - The content that has been generated.\n     * @param opts - Additional info about the generated content, such as how many tokens it contains.\n     *   See {@link LLMPredictionFragmentInputOpts} for more info. All the fields are optional.\n     */\n    fragmentGenerated(content, opts = {}) {\n        const stack = getCurrentStack(1);\n        [content, opts] = this.validator.validateMethodParamsOrThrow(\"GeneratorController\", \"fragmentGenerated\", [\"content\", \"opts\"], [z.string(), llmPredictionFragmentInputOptsSchema], [content, opts], stack);\n        this.connector.fragmentGenerated(content, opts);\n    }\n    /**\n     * Use this function to report that a tool call generation has started. Each\n     * `toolCallGenerationStarted` must be paired up with a `toolCallGenerationEnded` call for\n     * successfully generated tool calls, or a `toolCallGenerationFailed` call for\n     * failed tool calls.\n     */\n    toolCallGenerationStarted({ toolCallId, } = {}) {\n        this.connector.toolCallGenerationStarted(toolCallId);\n    }\n    /**\n     * Use this function to report that the name of the tool call has been generated. This function\n     * should only be called once for each `toolCallGenerationStarted`.\n     *\n     * @param toolName - The name of the tool that has been generated.\n     */\n    toolCallGenerationNameReceived(toolName) {\n        const stack = getCurrentStack(1);\n        toolName = this.validator.validateMethodParamOrThrow(\"GeneratorController\", \"toolCallGenerationNameReceived\", \"toolName\", z.string(), toolName, stack);\n        this.connector.toolCallGenerationNameReceived(toolName);\n    }\n    /**\n     * Use this function to report that a new argument fragment has been generated for the tool call.\n     * This function can be called multiple times for each `toolCallGenerationStarted`.\n     *\n     * @param content - The new fragment that has been generated for the tool call.\n     */\n    toolCallGenerationArgumentFragmentGenerated(content) {\n        const stack = getCurrentStack(1);\n        content = this.validator.validateMethodParamOrThrow(\"GeneratorController\", \"toolCallGenerationArgumentFragmentGenerated\", \"content\", z.string(), content, stack);\n        this.connector.toolCallGenerationArgumentFragmentGenerated(content);\n    }\n    /**\n     * Use this function to report that a tool call generation has successfully ended. This function\n     * should only be called after a `toolCallGenerationStarted` call.\n     */\n    toolCallGenerationEnded(toolCallRequest) {\n        const stack = getCurrentStack(1);\n        toolCallRequest = this.validator.validateMethodParamOrThrow(\"GeneratorController\", \"toolCallGenerationEnded\", \"toolCallRequest\", toolCallRequestSchema, toolCallRequest, stack);\n        this.connector.toolCallGenerationEnded(toolCallRequest);\n    }\n    /**\n     * Use this function to report that a tool call generation has failed. This function should only\n     * be called after a `toolCallGenerationStarted` call.\n     *\n     * @param error - The error that occurred during the tool call generation.\n     */\n    toolCallGenerationFailed(error) {\n        const stack = getCurrentStack(1);\n        error = this.validator.validateMethodParamOrThrow(\"GeneratorController\", \"toolCallGenerationFailed\", \"error\", z.instanceof(Error), error, stack);\n        this.connector.toolCallGenerationFailed(error);\n    }\n}\n\nvar __addDisposableResource$1 = (globalThis && globalThis.__addDisposableResource) || function (env, value, async) {\n    if (value !== null && value !== void 0) {\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n        var dispose, inner;\n        if (async) {\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n            dispose = value[Symbol.asyncDispose];\n        }\n        if (dispose === void 0) {\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n            dispose = value[Symbol.dispose];\n            if (async) inner = dispose;\n        }\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n        env.stack.push({ value: value, dispose: dispose, async: async });\n    }\n    else if (async) {\n        env.stack.push({ async: true });\n    }\n    return value;\n};\nvar __disposeResources$1 = (globalThis && globalThis.__disposeResources) || (function (SuppressedError) {\n    return function (env) {\n        function fail(e) {\n            env.error = env.hasError ? new SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n            env.hasError = true;\n        }\n        var r, s = 0;\n        function next() {\n            while (r = env.stack.pop()) {\n                try {\n                    if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n                    if (r.dispose) {\n                        var result = r.dispose.call(r.value);\n                        if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n                    }\n                    else s |= 1;\n                }\n                catch (e) {\n                    fail(e);\n                }\n            }\n            if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n            if (env.hasError) throw env.error;\n        }\n        return next();\n    };\n})(typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n});\nfunction stringifyAny(message) {\n    switch (typeof message) {\n        case \"string\":\n            return message;\n        case \"number\":\n            return message.toString();\n        case \"boolean\":\n            return message ? \"true\" : \"false\";\n        case \"undefined\":\n            return \"undefined\";\n        case \"object\":\n            if (message === null) {\n                return \"null\";\n            }\n            if (message instanceof Error) {\n                return message.stack;\n            }\n            return JSON.stringify(message, null, 2);\n        case \"bigint\":\n            return message.toString();\n        case \"symbol\":\n            return message.toString();\n        case \"function\":\n            return message.toString();\n        default:\n            return \"unknown\";\n    }\n}\nfunction concatenateDebugMessages(...messages) {\n    return messages.map(stringifyAny).join(\" \");\n}\nfunction createId() {\n    return `${Date.now()}-${Math.random()}`;\n}\nclass ProcessingConnector {\n    constructor(pluginsPort, abortSignal, processingContextIdentifier, token, logger) {\n        this.pluginsPort = pluginsPort;\n        this.abortSignal = abortSignal;\n        this.processingContextIdentifier = processingContextIdentifier;\n        this.token = token;\n        this.logger = logger;\n    }\n    handleUpdate(update) {\n        this.pluginsPort\n            .callRpc(\"processingHandleUpdate\", {\n            pci: this.processingContextIdentifier,\n            token: this.token,\n            update,\n        })\n            .catch(error => {\n            this.logger.error(\"Failed to send update\", error);\n        });\n    }\n    async handleRequest(request) {\n        const { response } = await this.pluginsPort.callRpc(\"processingHandleRequest\", {\n            pci: this.processingContextIdentifier,\n            token: this.token,\n            request,\n        });\n        return response;\n    }\n    async pullHistory(includeCurrent) {\n        const chatHistoryData = await this.pluginsPort.callRpc(\"processingPullHistory\", {\n            pci: this.processingContextIdentifier,\n            token: this.token,\n            includeCurrent,\n        });\n        // We know the result of callRpc is immutable, so we can safely pass false as the second\n        // argument.\n        return Chat.createRaw(chatHistoryData, /* mutable */ false).asMutableCopy();\n    }\n    async getOrLoadTokenSource() {\n        const result = await this.pluginsPort.callRpc(\"processingGetOrLoadTokenSource\", {\n            pci: this.processingContextIdentifier,\n            token: this.token,\n        });\n        return result.tokenSourceIdentifier;\n    }\n    async hasStatus() {\n        return await this.pluginsPort.callRpc(\"processingHasStatus\", {\n            pci: this.processingContextIdentifier,\n            token: this.token,\n        });\n    }\n    async needsNaming() {\n        return await this.pluginsPort.callRpc(\"processingNeedsNaming\", {\n            pci: this.processingContextIdentifier,\n            token: this.token,\n        });\n    }\n    async suggestName(name) {\n        await this.pluginsPort.callRpc(\"processingSuggestName\", {\n            pci: this.processingContextIdentifier,\n            token: this.token,\n            name,\n        });\n    }\n}\n/**\n * @public\n */\nclass ProcessingController extends BaseController {\n    /** @internal */\n    constructor(client, pluginConfig, globalPluginConfig, workingDirectoryPath, enabledPluginInfos, \n    /** @internal */\n    connector, \n    /** @internal */\n    config, \n    /**\n     * When getting history, should the latest user input be included in the history?\n     *\n     * @internal\n     */\n    shouldIncludeCurrentInHistory) {\n        super(client, connector.abortSignal, pluginConfig, globalPluginConfig, workingDirectoryPath);\n        this.enabledPluginInfos = enabledPluginInfos;\n        this.connector = connector;\n        this.config = config;\n        this.shouldIncludeCurrentInHistory = shouldIncludeCurrentInHistory;\n        this.processingControllerHandle = {\n            abortSignal: connector.abortSignal,\n            sendUpdate: update => {\n                connector.handleUpdate(update);\n            },\n            sendRequest: async (request) => {\n                const type = request.type;\n                const response = await connector.handleRequest(request);\n                if (response.type !== type) {\n                    throw new Error(`Expected response type ${type}, but got ${response.type}. This is a bug.`);\n                }\n                return response;\n            },\n        };\n    }\n    sendUpdate(update) {\n        this.processingControllerHandle.sendUpdate(update);\n    }\n    /**\n     * Gets a mutable copy of the current history. The returned history is a copy, so mutating it will\n     * not affect the actual history. It is mutable for convenience reasons.\n     *\n     * - If you are a promptPreprocessor, this will not include the user message you are currently\n     *   preprocessing.\n     * - If you are a prediction loop handler, this will include the user message, and can be fed into\n     *   the {@link LLMDynamicHandle#respond} method directly.\n     */\n    async pullHistory() {\n        return await this.connector.pullHistory(this.shouldIncludeCurrentInHistory);\n    }\n    createStatus(initialState) {\n        const id = createId();\n        this.sendUpdate({\n            type: \"status.create\",\n            id,\n            state: initialState,\n        });\n        const statusController = new PredictionProcessStatusController(this.processingControllerHandle, initialState, id);\n        return statusController;\n    }\n    addCitations(arg) {\n        if (Array.isArray(arg)) {\n            for (const entry of arg) {\n                this.createCitationBlock(entry.content, {\n                    fileName: entry.source.name,\n                    fileIdentifier: entry.source.identifier,\n                });\n            }\n        }\n        else {\n            for (const entry of arg.entries) {\n                this.createCitationBlock(entry.content, {\n                    fileName: entry.source.name,\n                    fileIdentifier: entry.source.identifier,\n                });\n            }\n        }\n    }\n    createCitationBlock(citedText, source) {\n        const id = createId();\n        this.sendUpdate({\n            type: \"citationBlock.create\",\n            id,\n            citedText,\n            ...source,\n        });\n        const citationBlockController = new PredictionProcessCitationBlockController(this.processingControllerHandle, id);\n        return citationBlockController;\n    }\n    /**\n     * @internal\n     */\n    createDebugInfoBlock(debugInfo) {\n        const id = createId();\n        this.sendUpdate({\n            type: \"debugInfoBlock.create\",\n            id,\n            debugInfo,\n        });\n        const debugInfoBlockController = new PredictionProcessDebugInfoBlockController(this.processingControllerHandle, id);\n        return debugInfoBlockController;\n    }\n    createContentBlock({ roleOverride, includeInContext = true, style, prefix, suffix, } = {}) {\n        const id = createId();\n        this.sendUpdate({\n            type: \"contentBlock.create\",\n            id,\n            roleOverride,\n            includeInContext,\n            style,\n            prefix,\n            suffix,\n        });\n        const contentBlockController = new PredictionProcessContentBlockController(this.processingControllerHandle, id, roleOverride ?? \"assistant\");\n        return contentBlockController;\n    }\n    debug(...messages) {\n        this.createDebugInfoBlock(concatenateDebugMessages(...messages));\n    }\n    /**\n     * Gets the token source associated with this prediction process (i.e. what the user has selected\n     * on the top navigation bar).\n     *\n     * The token source can either be a model or a generator plugin. In both cases, the returned\n     * object will contain a \".act\" and a \".respond\" method, which can be used to generate text.\n     *\n     * The token source is already pre-configured to use user's prediction config - you don't need to\n     * pass through any additional configuration.\n     */\n    async tokenSource() {\n        const tokenSourceIdentifier = await this.connector.getOrLoadTokenSource();\n        const tokenSourceIdentifierType = tokenSourceIdentifier.type;\n        switch (tokenSourceIdentifierType) {\n            case \"model\": {\n                const model = await this.client.llm.model(tokenSourceIdentifier.identifier);\n                // Don't use the server session config for this model\n                model.internalIgnoreServerSessionConfig = true;\n                // Inject the prediction config\n                model.internalKVConfigStack = {\n                    layers: [\n                        {\n                            layerName: \"conversationSpecific\",\n                            config: this.config,\n                        },\n                    ],\n                };\n                return model;\n            }\n            case \"generator\": {\n                const generator = this.client.plugins.createGeneratorHandleAssociatedWithPredictionProcess(tokenSourceIdentifier.pluginIdentifier, this.connector.processingContextIdentifier, this.connector.token);\n                return generator;\n            }\n        }\n    }\n    /**\n     * Sets the sender name for this message. The sender name shown above the message in the chat.\n     */\n    async setSenderName(name) {\n        this.sendUpdate({\n            type: \"setSenderName\",\n            name,\n        });\n    }\n    /**\n     * Throws an error if the prediction process has been aborted. Sprinkle this throughout your code\n     * to ensure that the prediction process is aborted as soon as possible.\n     */\n    guardAbort() {\n        this.abortSignal.throwIfAborted();\n    }\n    /**\n     * Whether this prediction process has had any status.\n     */\n    async hasStatus() {\n        return await this.connector.hasStatus();\n    }\n    /**\n     * Returns whether this conversation needs a name.\n     */\n    async needsNaming() {\n        return await this.connector.needsNaming();\n    }\n    /**\n     * Suggests a name for this conversation.\n     */\n    async suggestName(name) {\n        await this.connector.suggestName(name);\n    }\n    async requestConfirmToolCall({ callId, pluginIdentifier, name, parameters, }) {\n        const { result } = await raceWithAbortSignal(this.processingControllerHandle.sendRequest({\n            type: \"confirmToolCall\",\n            callId,\n            pluginIdentifier,\n            name,\n            parameters,\n        }), this.abortSignal);\n        const resultType = result.type;\n        switch (resultType) {\n            case \"allow\": {\n                return {\n                    type: \"allow\",\n                    toolArgsOverride: result.toolArgsOverride,\n                };\n            }\n            case \"deny\": {\n                return {\n                    type: \"deny\",\n                    denyReason: result.denyReason,\n                };\n            }\n            default: {\n                const exhaustiveCheck = resultType;\n                throw new Error(`Unexpected result type ${exhaustiveCheck}. This is a bug. Please report it.`);\n            }\n        }\n    }\n    createToolStatus(callId, initialStatus) {\n        const id = createId();\n        this.sendUpdate({\n            type: \"toolStatus.create\",\n            id,\n            callId,\n            state: {\n                status: initialStatus,\n                customStatus: \"\",\n                customWarnings: [],\n            },\n        });\n        const toolStatusController = new PredictionProcessToolStatusController(this.processingControllerHandle, id, initialStatus);\n        return toolStatusController;\n    }\n    /**\n     * Starts a tool use session with tools available in the prediction process. Note, this method\n     * should be used with \"Explicit Resource Management\". That is, you should use it like so:\n     *\n     * ```typescript\n     * using toolUseSession = await ctl.startToolUseSession();\n     * // ^ Notice the `using` keyword here.\n     * ```\n     *\n     * If you do not `using`, you should call `toolUseSession[Symbol.dispose]()` after you are done.\n     *\n     * If you don't, lmstudio-js will close the session upon the end of the prediction step\n     * automatically. However, it is not recommended.\n     *\n     * @public\n     * @deprecated WIP\n     */\n    async startToolUseSession() {\n        const identifiersOfPluginsWithTools = this.enabledPluginInfos\n            .filter(({ hasToolsProvider }) => hasToolsProvider)\n            .map(({ identifier }) => identifier);\n        return await this.client.plugins.startToolUseSessionUsingPredictionProcess(\n        // We start a tool use session with all the plugins that have tools available\n        identifiersOfPluginsWithTools, this.connector.processingContextIdentifier, this.connector.token);\n    }\n}\n/**\n * Controller for a status block in the prediction process.\n *\n * @public\n */\nclass PredictionProcessStatusController {\n    /** @internal */\n    constructor(\n    /** @internal */\n    handle, initialState, id, indentation = 0) {\n        this.handle = handle;\n        this.id = id;\n        this.indentation = indentation;\n        this.lastSubStatus = this;\n        this.lastState = initialState;\n    }\n    setText(text) {\n        this.lastState.text = text;\n        this.handle.sendUpdate({\n            type: \"status.update\",\n            id: this.id,\n            state: this.lastState,\n        });\n    }\n    setState(state) {\n        this.lastState = state;\n        this.handle.sendUpdate({\n            type: \"status.update\",\n            id: this.id,\n            state,\n        });\n    }\n    remove() {\n        this.handle.sendUpdate({\n            type: \"status.remove\",\n            id: this.id,\n        });\n    }\n    getNestedLastSubStatusBlockId() {\n        let current = this.lastSubStatus;\n        while (current !== current.lastSubStatus) {\n            current = current.lastSubStatus;\n        }\n        return current.id;\n    }\n    addSubStatus(initialState) {\n        const id = createId();\n        this.handle.sendUpdate({\n            type: \"status.create\",\n            id,\n            state: initialState,\n            location: {\n                type: \"afterId\",\n                id: this.getNestedLastSubStatusBlockId(),\n            },\n            indentation: this.indentation + 1,\n        });\n        const controller = new PredictionProcessStatusController(this.handle, initialState, id, this.indentation + 1);\n        this.lastSubStatus = controller;\n        return controller;\n    }\n}\n/**\n * Controller for a citation block in the prediction process. Currently cannot do anything.\n *\n * @public\n */\nclass PredictionProcessCitationBlockController {\n    /** @internal */\n    constructor(\n    /** @internal */\n    handle, id) {\n        this.handle = handle;\n        this.id = id;\n    }\n}\n/**\n * Controller for a debug info block in the prediction process. Currently cannot do anything.\n *\n * @public\n */\nclass PredictionProcessDebugInfoBlockController {\n    /** @internal */\n    constructor(\n    /** @internal */\n    handle, id) {\n        this.handle = handle;\n        this.id = id;\n    }\n}\n/**\n * @public\n *\n * TODO: Documentation\n */\nclass PredictionProcessContentBlockController {\n    /** @internal */\n    constructor(\n    /** @internal */\n    handle, id, role) {\n        this.handle = handle;\n        this.id = id;\n        this.role = role;\n    }\n    appendText(text, { tokensCount, fromDraftModel, isStructural } = {}) {\n        if (this.role === \"tool\") {\n            throw new Error(\"Text cannot be appended to tool blocks.\");\n        }\n        this.handle.sendUpdate({\n            type: \"contentBlock.appendText\",\n            id: this.id,\n            text,\n            tokensCount,\n            fromDraftModel,\n            isStructural,\n        });\n    }\n    appendToolRequest({ callId, toolCallRequestId, name, parameters, pluginIdentifier, }) {\n        if (this.role !== \"assistant\") {\n            throw new Error(`Tool requests can only be appended to assistant blocks. This is a ${this.role} block.`);\n        }\n        this.handle.sendUpdate({\n            type: \"contentBlock.appendToolRequest\",\n            id: this.id,\n            callId,\n            toolCallRequestId,\n            name,\n            parameters,\n            pluginIdentifier,\n        });\n    }\n    replaceToolRequest({ callId, toolCallRequestId, name, parameters, pluginIdentifier, }) {\n        if (this.role !== \"assistant\") {\n            throw new Error(`Tool requests can only be replaced in assistant blocks. This is a ${this.role} block.`);\n        }\n        this.handle.sendUpdate({\n            type: \"contentBlock.replaceToolRequest\",\n            id: this.id,\n            callId,\n            toolCallRequestId,\n            name,\n            parameters,\n            pluginIdentifier,\n        });\n    }\n    appendToolResult({ callId, toolCallRequestId, content, }) {\n        if (this.role !== \"tool\") {\n            throw new Error(`Tool results can only be appended to tool blocks. This is a ${this.role} block.`);\n        }\n        this.handle.sendUpdate({\n            type: \"contentBlock.appendToolResult\",\n            id: this.id,\n            callId,\n            toolCallRequestId,\n            content,\n        });\n    }\n    replaceText(text) {\n        if (this.role === \"tool\") {\n            throw new Error(\"Text cannot be set in tool blocks.\");\n        }\n        this.handle.sendUpdate({\n            type: \"contentBlock.replaceText\",\n            id: this.id,\n            text,\n        });\n    }\n    setStyle(style) {\n        this.handle.sendUpdate({\n            type: \"contentBlock.setStyle\",\n            id: this.id,\n            style,\n        });\n    }\n    setPrefix(prefix) {\n        this.handle.sendUpdate({\n            type: \"contentBlock.setPrefix\",\n            id: this.id,\n            prefix,\n        });\n    }\n    setSuffix(suffix) {\n        this.handle.sendUpdate({\n            type: \"contentBlock.setSuffix\",\n            id: this.id,\n            suffix,\n        });\n    }\n    attachGenInfo(genInfo) {\n        this.handle.sendUpdate({\n            type: \"contentBlock.attachGenInfo\",\n            id: this.id,\n            genInfo,\n        });\n    }\n    async pipeFrom(prediction) {\n        const env_1 = { stack: [], error: void 0, hasError: false };\n        try {\n            const cleaner = __addDisposableResource$1(env_1, new Cleaner(), false);\n            const abortListener = () => {\n                prediction.cancel();\n            };\n            this.handle.abortSignal.addEventListener(\"abort\", abortListener);\n            cleaner.register(() => {\n                this.handle.abortSignal.removeEventListener(\"abort\", abortListener);\n            });\n            for await (const { content } of prediction) {\n                this.appendText(content);\n            }\n            const result = await prediction;\n            this.attachGenInfo({\n                indexedModelIdentifier: result.modelInfo.path,\n                identifier: result.modelInfo.identifier,\n                loadModelConfig: result.loadConfig,\n                predictionConfig: result.predictionConfig,\n                stats: result.stats,\n            });\n            this.handle.abortSignal.throwIfAborted();\n            return result;\n        }\n        catch (e_1) {\n            env_1.error = e_1;\n            env_1.hasError = true;\n        }\n        finally {\n            __disposeResources$1(env_1);\n        }\n    }\n}\n/**\n * Controller for a tool status block in the prediction process.\n *\n * @public\n */\nclass PredictionProcessToolStatusController {\n    /** @internal */\n    constructor(\n    /** @internal */\n    handle, id, initialStatus) {\n        this.handle = handle;\n        this.id = id;\n        this.customStatus = \"\";\n        this.customWarnings = [];\n        this.status = initialStatus;\n    }\n    updateState() {\n        this.handle.sendUpdate({\n            type: \"toolStatus.update\",\n            id: this.id,\n            state: {\n                status: this.status,\n                customStatus: this.customStatus,\n                customWarnings: this.customWarnings,\n            },\n        });\n    }\n    setCustomStatusText(status) {\n        this.customStatus = status;\n        this.updateState();\n    }\n    addWarning(warning) {\n        this.customWarnings.push(warning);\n        this.updateState();\n    }\n    setStatus(status) {\n        this.status = status;\n        this.updateState();\n    }\n    appendArgumentFragment(content) {\n        this.handle.sendUpdate({\n            type: \"toolStatus.argumentFragment\",\n            id: this.id,\n            content,\n        });\n    }\n}\n\n/**\n * Controller for tools provider.\n *\n * @public\n * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n * future without warning.\n */\nclass ToolsProviderController extends BaseController {\n    /**\n     * @internal Do not construct this class yourself.\n     */\n    constructor(client, signal, pluginConfig, globalPluginConfig, workingDirectoryPath) {\n        super(client, signal, pluginConfig, globalPluginConfig, workingDirectoryPath);\n    }\n}\n\nclass GeneratorConnectorImpl {\n    constructor(channel, taskId) {\n        this.channel = channel;\n        this.taskId = taskId;\n    }\n    fragmentGenerated(content, opts) {\n        this.channel.send({\n            type: \"fragmentGenerated\",\n            taskId: this.taskId,\n            content,\n            opts: opts,\n        });\n    }\n    toolCallGenerationStarted(toolCallId) {\n        this.channel.send({\n            type: \"toolCallGenerationStarted\",\n            taskId: this.taskId,\n            toolCallId,\n        });\n    }\n    toolCallGenerationNameReceived(toolName) {\n        this.channel.send({\n            type: \"toolCallGenerationNameReceived\",\n            taskId: this.taskId,\n            toolName,\n        });\n    }\n    toolCallGenerationArgumentFragmentGenerated(content) {\n        this.channel.send({\n            type: \"toolCallGenerationArgumentFragmentGenerated\",\n            taskId: this.taskId,\n            content,\n        });\n    }\n    toolCallGenerationEnded(toolCallRequest) {\n        this.channel.send({\n            type: \"toolCallGenerationEnded\",\n            taskId: this.taskId,\n            toolCallRequest,\n        });\n    }\n    toolCallGenerationFailed(error) {\n        this.channel.send({\n            type: \"toolCallGenerationFailed\",\n            taskId: this.taskId,\n            error: serializeError(error),\n        });\n    }\n}\n/**\n * @deprecated This class is used internally by a plugin to register hooks. Do not use directly.\n * @public\n */\nclass PluginSelfRegistrationHost {\n    constructor(port, client, rootLogger, validator) {\n        this.port = port;\n        this.client = client;\n        this.rootLogger = rootLogger;\n        this.validator = validator;\n    }\n    /**\n     * Sets the promptPreprocessor to be used by the plugin represented by this client.\n     *\n     * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n     * future without warning.\n     */\n    setPromptPreprocessor(promptPreprocessor) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"plugins\", \"registerPromptPreprocessor\", \"promptPreprocessor\", z.function(), promptPreprocessor, stack);\n        const logger = new SimpleLogger(`PromptPreprocessor`, this.rootLogger);\n        logger.info(\"Register with LM Studio\");\n        const tasks = new Map();\n        const channel = this.port.createChannel(\"setPromptPreprocessor\", undefined, message => {\n            switch (message.type) {\n                case \"preprocess\": {\n                    const taskLogger = new SimpleLogger(`Request (${message.taskId.substring(0, 6)})`, logger);\n                    taskLogger.info(`New preprocess request received.`);\n                    const abortController = new AbortController();\n                    const connector = new ProcessingConnector(this.port, abortController.signal, message.pci, message.token, taskLogger);\n                    const input = ChatMessage.createRaw(message.input, /* mutable */ false);\n                    const controller = new ProcessingController(this.client, message.pluginConfig, message.globalPluginConfig, message.workingDirectoryPath, message.enabledPluginInfos, connector, message.config, \n                    /* shouldIncludeInputInHistory */ false);\n                    tasks.set(message.taskId, {\n                        cancel: () => {\n                            abortController.abort();\n                        },\n                        taskLogger,\n                    });\n                    // We know the input from the channel is immutable, so we can safely pass false as the\n                    // second argument.\n                    promptPreprocessor(controller, input.asMutableCopy())\n                        .then(result => {\n                        taskLogger.info(`Preprocess request completed.`);\n                        const parsedReturned = z\n                            .union([z.string(), z.custom(v => v instanceof ChatMessage)])\n                            .safeParse(result);\n                        if (!parsedReturned.success) {\n                            throw new Error(\"PromptPreprocessor returned an invalid value:\" +\n                                Validator.prettyPrintZod(\"result\", parsedReturned.error));\n                        }\n                        const returned = parsedReturned.data;\n                        let processed;\n                        if (typeof returned === \"string\") {\n                            const messageCopy = input.asMutableCopy();\n                            messageCopy.replaceText(returned);\n                            processed = messageCopy.getRaw();\n                        }\n                        else {\n                            processed = returned.getRaw();\n                        }\n                        channel.send({\n                            type: \"complete\",\n                            taskId: message.taskId,\n                            processed,\n                        });\n                    })\n                        .catch(error => {\n                        if (error.name === \"AbortError\") {\n                            logger.info(`Request successfully aborted.`);\n                            channel.send({\n                                type: \"aborted\",\n                                taskId: message.taskId,\n                            });\n                            return;\n                        }\n                        logger.warn(`Preprocessing failed.`, error);\n                        channel.send({\n                            type: \"error\",\n                            taskId: message.taskId,\n                            error: serializeError(error),\n                        });\n                    })\n                        .finally(() => {\n                        tasks.delete(message.taskId);\n                    });\n                    break;\n                }\n                case \"abort\": {\n                    const task = tasks.get(message.taskId);\n                    if (task !== undefined) {\n                        task.taskLogger.info(`Received abort request.`);\n                        task.cancel();\n                        tasks.delete(message.taskId);\n                    }\n                    break;\n                }\n            }\n        }, { stack });\n    }\n    /**\n     * Sets the prediction loop handler to be used by the plugin represented by this client.\n     *\n     * @deprecated [DEP-PLUGIN-PREDICTION-LOOP-HANDLER] Prediction loop handler support is still in\n     * development. Stay tuned for updates.\n     */\n    setPredictionLoopHandler(predictionLoopHandler) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"plugins\", \"setPredictionLoopHandler\", \"predictionLoopHandler\", z.function(), predictionLoopHandler, stack);\n        const logger = new SimpleLogger(`   PredictionLoopHandler`, this.rootLogger);\n        logger.info(\"Register with LM Studio\");\n        const tasks = new Map();\n        const channel = this.port.createChannel(\"setPredictionLoopHandler\", undefined, message => {\n            switch (message.type) {\n                case \"handlePredictionLoop\": {\n                    const taskLogger = new SimpleLogger(`Request (${message.taskId.substring(0, 6)})`, logger);\n                    taskLogger.info(`New prediction loop handling request received.`);\n                    const abortController = new AbortController();\n                    const connector = new ProcessingConnector(this.port, abortController.signal, message.pci, message.token, taskLogger);\n                    const controller = new ProcessingController(this.client, message.pluginConfig, message.globalPluginConfig, message.workingDirectoryPath, message.enabledPluginInfos, connector, message.config, \n                    /* shouldIncludeInputInHistory */ true);\n                    tasks.set(message.taskId, {\n                        cancel: () => {\n                            abortController.abort();\n                        },\n                        taskLogger,\n                    });\n                    // We know the input from the channel is immutable, so we can safely pass false as the\n                    // second argument.\n                    predictionLoopHandler(controller)\n                        .then(() => {\n                        channel.send({\n                            type: \"complete\",\n                            taskId: message.taskId,\n                        });\n                    })\n                        .catch(error => {\n                        if (error.name === \"AbortError\") {\n                            logger.info(`Request successfully aborted.`);\n                            channel.send({\n                                type: \"aborted\",\n                                taskId: message.taskId,\n                            });\n                            return;\n                        }\n                        logger.warn(`Generation failed.`, error);\n                        channel.send({\n                            type: \"error\",\n                            taskId: message.taskId,\n                            error: serializeError(error),\n                        });\n                    })\n                        .finally(() => {\n                        tasks.delete(message.taskId);\n                    });\n                    break;\n                }\n                case \"abort\": {\n                    const task = tasks.get(message.taskId);\n                    if (task !== undefined) {\n                        task.taskLogger.info(`Received abort request.`);\n                        task.cancel();\n                        tasks.delete(message.taskId);\n                    }\n                    break;\n                }\n            }\n        }, { stack });\n    }\n    /**\n     * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n     * future without warning.\n     */\n    async setConfigSchematics(configSchematics) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"plugins\", \"setConfigSchematics\", \"configSchematics\", z.instanceof(KVConfigSchematics), configSchematics, stack);\n        await this.port.callRpc(\"setConfigSchematics\", {\n            schematics: configSchematics.serialize(),\n        }, { stack });\n    }\n    /**\n     * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n     * future without warning.\n     */\n    async setGlobalConfigSchematics(globalConfigSchematics) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"plugins\", \"setGlobalConfigSchematics\", \"globalConfigSchematics\", z.instanceof(KVConfigSchematics), globalConfigSchematics, stack);\n        await this.port.callRpc(\"setGlobalConfigSchematics\", {\n            schematics: globalConfigSchematics.serialize(),\n        }, { stack });\n    }\n    /**\n     * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n     * future without warning.\n     */\n    setToolsProvider(toolsProvider) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"plugins\", \"setToolsProvider\", \"toolsProvider\", z.function(), toolsProvider, stack);\n        const logger = new SimpleLogger(`Tools Prvdr.`, this.rootLogger);\n        logger.info(\"Register with LM Studio\");\n        /**\n         * Map from sessionId to the open session.\n         */\n        const openSessions = new Map();\n        const channel = this.port.createChannel(\"setToolsProvider\", undefined, message => {\n            const messageType = message.type;\n            switch (messageType) {\n                case \"initSession\": {\n                    const sessionId = message.sessionId;\n                    const sessionAbortController = new AbortController();\n                    const openSession = {\n                        tools: null,\n                        ongoingToolCalls: new Map(),\n                        discarded: false,\n                        abortController: sessionAbortController,\n                    };\n                    openSessions.set(sessionId, openSession);\n                    const controller = new ToolsProviderController(this.client, sessionAbortController.signal, message.pluginConfig, message.globalPluginConfig, message.workingDirectoryPath);\n                    toolsProvider(controller).then(tools => {\n                        const llmTools = tools.map(toolToLLMTool);\n                        if (openSession.discarded) {\n                            // By the time initialization is done, the session was already discarded. Don't\n                            // do anything.\n                            return;\n                        }\n                        channel.send({\n                            type: \"sessionInitialized\",\n                            sessionId,\n                            toolDefinitions: llmTools,\n                        });\n                        openSession.tools = new Map(tools.map(tool => [tool.name, tool]));\n                    }, error => {\n                        if (openSession.discarded) {\n                            // If the session was already discarded, don't do anything.\n                            return;\n                        }\n                        channel.send({\n                            type: \"sessionInitializationFailed\",\n                            sessionId,\n                            error: serializeError(error),\n                        });\n                        openSession.discarded = true;\n                        openSessions.delete(sessionId);\n                    });\n                    break;\n                }\n                case \"discardSession\": {\n                    const sessionId = message.sessionId;\n                    const openSession = openSessions.get(sessionId);\n                    if (openSession === undefined) {\n                        // Session was already discarded or doesn't exist. Ignore.\n                        return;\n                    }\n                    openSession.discarded = true;\n                    openSession.abortController.abort();\n                    openSessions.delete(sessionId);\n                    break;\n                }\n                case \"callTool\": {\n                    const sessionId = message.sessionId;\n                    const openSession = openSessions.get(sessionId);\n                    if (openSession === undefined) {\n                        // Session was already discarded or doesn't exist. Ignore.\n                        return;\n                    }\n                    if (openSession.tools === null) {\n                        throw new Error(\"Tool called before initialization completed. This is unexpected.\");\n                    }\n                    const tool = openSession.tools.get(message.toolName);\n                    if (tool === undefined) {\n                        throw new Error(`Tool ${message.toolName} not found.`);\n                    }\n                    const callId = message.callId;\n                    const ongoingToolCall = {\n                        settled: false,\n                        abortController: new AbortController(),\n                    };\n                    openSession.ongoingToolCalls.set(callId, ongoingToolCall);\n                    new SimpleLogger(`Tool (${message.toolName})`, this.rootLogger);\n                    const toolCallContext = {\n                        status(text) {\n                            channel.send({\n                                type: \"toolCallStatus\",\n                                sessionId,\n                                callId,\n                                statusText: text,\n                            });\n                        },\n                        warn(text) {\n                            channel.send({\n                                type: \"toolCallWarn\",\n                                sessionId,\n                                callId,\n                                warnText: text,\n                            });\n                        },\n                        signal: ongoingToolCall.abortController.signal,\n                        // Call ID is used to match up life cycle events of the same tool call. In this case,\n                        // each call does not have different parts, thus call ID is useless. We can just use 0.\n                        // If the user wants a \"unique\" ID, they can just have variable that goes up by one\n                        // each time the function is called.\n                        callId: 0,\n                    };\n                    (async () => {\n                        return await tool.implementation(message.parameters, toolCallContext);\n                    })().then(result => {\n                        if (openSession.discarded) {\n                            // Session was already discarded. Ignore.\n                            return;\n                        }\n                        if (ongoingToolCall.settled) {\n                            // Tool call was already settled. Ignore.\n                            return;\n                        }\n                        if (ongoingToolCall.abortController.signal.aborted) {\n                            // Tool call was aborted. Ignore.\n                            return;\n                        }\n                        if (result === undefined) {\n                            result = \"undefined\"; // Default to \"undefined\" if no result is provided.\n                            channel.send({\n                                type: \"toolCallWarn\",\n                                sessionId,\n                                callId,\n                                warnText: text `\r\n                    Tool call returned undefined. This is not expected as the model always expects\r\n                    a result. If you don't want to return anything, you can just return a string\r\n                    reporting that the tool call was successful. For example: \"operation\r\n                    successful.\" In this case, we will give the model string \"${result}\".\r\n                  `,\n                            });\n                        }\n                        // Try to see if the result is JSON serializable. If it is not, we will print a\n                        // warning.\n                        try {\n                            JSON.stringify(result);\n                        }\n                        catch (error) {\n                            result = text `\r\n                  Error: Tool call completed but returned a value that cannot be serialized to JSON\r\n                `;\n                            channel.send({\n                                type: \"toolCallWarn\",\n                                sessionId,\n                                callId,\n                                warnText: text `\r\n                    Tool call succeeded, but returned a value that is not JSON serializable. In\r\n                    order to provide the result to the model, return values of tools must be JSON\r\n                    serializable. In this case, we will give the model string \"${result}\".\r\n                  `,\n                            });\n                        }\n                        channel.send({\n                            type: \"toolCallComplete\",\n                            sessionId,\n                            callId,\n                            result,\n                        });\n                        ongoingToolCall.settled = true;\n                        openSession.ongoingToolCalls.delete(callId);\n                    }, error => {\n                        if (openSession.discarded) {\n                            // Session was already discarded. Ignore.\n                            return;\n                        }\n                        if (ongoingToolCall.settled) {\n                            // Tool call was already settled. Ignore.\n                            return;\n                        }\n                        if (ongoingToolCall.abortController.signal.aborted) {\n                            // Tool call was aborted. Ignore.\n                            return;\n                        }\n                        channel.send({\n                            type: \"toolCallError\",\n                            sessionId,\n                            callId,\n                            error: serializeError(error),\n                        });\n                        ongoingToolCall.settled = true;\n                        openSession.ongoingToolCalls.delete(callId);\n                    });\n                    break;\n                }\n                case \"abortToolCall\": {\n                    const sessionId = message.sessionId;\n                    const callId = message.callId;\n                    const openSession = openSessions.get(sessionId);\n                    if (openSession === undefined) {\n                        // Session was already discarded or doesn't exist. Ignore.\n                        return;\n                    }\n                    const ongoingToolCall = openSession.ongoingToolCalls.get(callId);\n                    if (ongoingToolCall === undefined) {\n                        // Tool call was already completed or doesn't exist. Ignore.\n                        return;\n                    }\n                    ongoingToolCall.settled = true;\n                    ongoingToolCall.abortController.abort();\n                    openSession.ongoingToolCalls.delete(callId);\n                    break;\n                }\n                default: {\n                    const exhaustiveCheck = messageType;\n                    throw new Error(`Unexpected message type: ${exhaustiveCheck}`);\n                }\n            }\n        });\n    }\n    /**\n     * Sets the generator to be used by the plugin represented by this client.\n     *\n     * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n     * future without warning.\n     */\n    setGenerator(generator) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"plugins\", \"setGenerator\", \"generator\", generatorSchema, generator, stack);\n        const logger = new SimpleLogger(`Generator`, this.rootLogger);\n        logger.info(\"Register with LM Studio\");\n        const tasks = new Map();\n        const channel = this.port.createChannel(\"setGenerator\", undefined, message => {\n            const messageType = message.type;\n            switch (messageType) {\n                case \"generate\": {\n                    const taskLogger = new SimpleLogger(`Request (${message.taskId.substring(0, 6)})`, logger);\n                    taskLogger.info(`New generate request received.`);\n                    const abortController = new AbortController();\n                    const connector = new GeneratorConnectorImpl(channel, message.taskId);\n                    const controller = new GeneratorController(this.client, message.pluginConfig, message.globalPluginConfig, message.workingDirectoryPath, abortController.signal, message.toolDefinitions, connector, this.validator);\n                    tasks.set(message.taskId, {\n                        cancel: () => {\n                            abortController.abort();\n                        },\n                        taskLogger,\n                    });\n                    const history = Chat.createRaw(message.input, false);\n                    generator(controller, history)\n                        .then(result => {\n                        if (result !== undefined) {\n                            taskLogger.warnText `\r\n                    The generator has returned a value. This it not expected. You should report\r\n                    generated content using method on the controller. The returned value will be\r\n                    ignored.\r\n                  `;\n                        }\n                        channel.send({\n                            type: \"complete\",\n                            taskId: message.taskId,\n                        });\n                    }, error => {\n                        if (error.name === \"AbortError\") {\n                            taskLogger.info(`Request successfully aborted.`);\n                            channel.send({\n                                type: \"aborted\",\n                                taskId: message.taskId,\n                            });\n                        }\n                        else {\n                            channel.send({\n                                type: \"error\",\n                                taskId: message.taskId,\n                                error: serializeError(error),\n                            });\n                            taskLogger.warn(`Generation failed.`, error);\n                        }\n                    })\n                        .finally(() => {\n                        tasks.delete(message.taskId);\n                    });\n                    break;\n                }\n                case \"abort\": {\n                    const task = tasks.get(message.taskId);\n                    if (task !== undefined) {\n                        task.taskLogger.info(`Received abort request.`);\n                        task.cancel();\n                        tasks.delete(message.taskId);\n                    }\n                    break;\n                }\n                default: {\n                    const exhaustiveCheck = messageType;\n                    throw new Error(`Unexpected message type: ${exhaustiveCheck}`);\n                }\n            }\n        });\n    }\n    /**\n     * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n     * future without warning.\n     */\n    async initCompleted() {\n        const stack = getCurrentStack(1);\n        await this.port.callRpc(\"pluginInitCompleted\", undefined, { stack });\n    }\n}\n\nvar __addDisposableResource = (globalThis && globalThis.__addDisposableResource) || function (env, value, async) {\n    if (value !== null && value !== void 0) {\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n        var dispose, inner;\n        if (async) {\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n            dispose = value[Symbol.asyncDispose];\n        }\n        if (dispose === void 0) {\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n            dispose = value[Symbol.dispose];\n            if (async) inner = dispose;\n        }\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n        env.stack.push({ value: value, dispose: dispose, async: async });\n    }\n    else if (async) {\n        env.stack.push({ async: true });\n    }\n    return value;\n};\nvar __disposeResources = (globalThis && globalThis.__disposeResources) || (function (SuppressedError) {\n    return function (env) {\n        function fail(e) {\n            env.error = env.hasError ? new SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n            env.hasError = true;\n        }\n        var r, s = 0;\n        function next() {\n            while (r = env.stack.pop()) {\n                try {\n                    if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n                    if (r.dispose) {\n                        var result = r.dispose.call(r.value);\n                        if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n                    }\n                    else s |= 1;\n                }\n                catch (e) {\n                    fail(e);\n                }\n            }\n            if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n            if (env.hasError) throw env.error;\n        }\n        return next();\n    };\n})(typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n});\n/**\n * Represents a tool use session backed by a single plugin. Don't construct this class yourself.\n *\n * @public\n */\nclass SingleRemoteToolUseSession {\n    static async create(pluginsPort, pluginIdentifier, pluginConfigSpecifier, logger, stack) {\n        const session = new SingleRemoteToolUseSession(pluginsPort, pluginIdentifier, pluginConfigSpecifier, logger);\n        await session.init(stack);\n        return session;\n    }\n    constructor(pluginsPort, pluginIdentifier, pluginConfigSpecifier, logger) {\n        this.pluginsPort = pluginsPort;\n        this.pluginIdentifier = pluginIdentifier;\n        this.pluginConfigSpecifier = pluginConfigSpecifier;\n        this.logger = logger;\n        this.status = \"initializing\";\n        /**\n         * Whether this session is \"poisoned\". A session is poisoned either when the underlying channel\n         * has errored/closed.\n         */\n        this.poison = null;\n        /**\n         * Map to track all the ongoing tool calls.\n         */\n        this.ongoingToolCalls = new Map();\n        this.callIdGiver = new IdGiver(0);\n    }\n    async init(stack) {\n        const { promise: initPromise, resolve: resolveInit, reject: rejectInit } = makePromise();\n        const channel = this.pluginsPort.createChannel(\"startToolUseSession\", {\n            pluginIdentifier: this.pluginIdentifier,\n            pluginConfigSpecifier: this.pluginConfigSpecifier,\n        }, message => {\n            const messageType = message.type;\n            switch (messageType) {\n                // Upon receiving session ready, mark self as ready and resolve the promise.\n                case \"sessionReady\": {\n                    if (this.status !== \"initializing\") {\n                        this.logger.error(\"Received sessionReady message while not initializing\");\n                        return;\n                    }\n                    this.status = \"ready\";\n                    resolveInit();\n                    this.tools = message.toolDefinitions.map(toolDefinition => this.makeTool(toolDefinition));\n                    break;\n                }\n                case \"toolCallComplete\": {\n                    const ongoingCall = this.ongoingToolCalls.get(message.callId);\n                    if (ongoingCall === undefined) {\n                        return;\n                    }\n                    ongoingCall.resolve(message.result);\n                    break;\n                }\n                case \"toolCallError\": {\n                    const ongoingCall = this.ongoingToolCalls.get(message.callId);\n                    if (ongoingCall === undefined) {\n                        return;\n                    }\n                    ongoingCall.reject(fromSerializedError(message.error));\n                    break;\n                }\n                case \"toolCallStatus\": {\n                    const ongoingCall = this.ongoingToolCalls.get(message.callId);\n                    if (ongoingCall === undefined) {\n                        return;\n                    }\n                    ongoingCall.reportStatus(message.statusText);\n                    break;\n                }\n                case \"toolCallWarn\": {\n                    const ongoingCall = this.ongoingToolCalls.get(message.callId);\n                    if (ongoingCall === undefined) {\n                        return;\n                    }\n                    ongoingCall.reportWarning(message.warnText);\n                    break;\n                }\n                default: {\n                    const exhaustiveCheck = messageType;\n                    this.logger.warn(`Received unexpected message type in tool use session: ${exhaustiveCheck}`);\n                }\n            }\n        }, { stack });\n        channel.onError.subscribeOnce(error => {\n            if (this.status === \"initializing\") {\n                // If still initializing, reject the promise with the error.\n                rejectInit(error);\n            }\n            else {\n                this.logger.error(\"Tool use session error.\", error);\n                this.poison = error;\n            }\n            // Reject all ongoing tool calls with the error.\n            for (const ongoingCall of this.ongoingToolCalls.values()) {\n                ongoingCall.reject(error);\n            }\n            this.status = \"disposed\";\n        });\n        channel.onClose.subscribeOnce(() => {\n            let error;\n            if (this.status === \"initializing\") {\n                // If still initializing, reject the promise with the error.\n                error = new Error(\"Tool use session channel closed unexpectedly during initialization.\");\n                rejectInit(error);\n            }\n            else {\n                error = new Error(\"Tool use session has already ended.\");\n                // We don't print an error here because channel can close normally. We only poison this\n                // session so it throws the error when used.\n                this.poison = error;\n            }\n            // Reject all ongoing tool calls with the error.\n            for (const ongoingCall of this.ongoingToolCalls.values()) {\n                ongoingCall.reject(error);\n            }\n            this.status = \"disposed\";\n        });\n        this.channel = channel;\n        await initPromise;\n    }\n    [Symbol.dispose]() {\n        // As long as we are not already disposed, we send a discard message to the channel.\n        if (this.status !== \"disposed\") {\n            this.channel.send({ type: \"discardSession\" });\n            this.status = \"disposed\";\n            const error = new Error(\"Session disposed by client.\");\n            // Reject all ongoing tool calls with the error.\n            for (const ongoingCall of this.ongoingToolCalls.values()) {\n                ongoingCall.reject(error);\n            }\n            this.poison = error;\n        }\n    }\n    makeTool(toolDefinition) {\n        return internalCreateRemoteTool({\n            name: toolDefinition.function.name,\n            description: toolDefinition.function.description ?? \"\",\n            pluginIdentifier: this.pluginIdentifier,\n            parametersJsonSchema: toolDefinition.function.parameters ?? {},\n            implementation: async (args, ctx) => {\n                const env_1 = { stack: [], error: void 0, hasError: false };\n                try {\n                    // We now need to provide an implementation that basically proxies the execution of the tool\n                    // to the backend.\n                    if (this.poison !== null) {\n                        // If the session is already poisoned, throw the error.\n                        throw this.poison;\n                    }\n                    // Handling the case where the request is already aborted before we start the tool call.\n                    if (ctx.signal.aborted) {\n                        throw ctx.signal.reason;\n                    }\n                    const callId = this.callIdGiver.next();\n                    const { promise, resolve, reject } = makePromise();\n                    const cleaner = __addDisposableResource(env_1, new Cleaner(), false);\n                    this.ongoingToolCalls.set(callId, {\n                        callId,\n                        resolve,\n                        reject,\n                        reportStatus: status => ctx.status(status),\n                        reportWarning: warning => ctx.warn(warning),\n                    });\n                    cleaner.register(() => {\n                        this.ongoingToolCalls.delete(callId);\n                    });\n                    this.channel.send({\n                        type: \"callTool\",\n                        callId,\n                        name: toolDefinition.function.name,\n                        arguments: args,\n                    });\n                    ctx.signal.addEventListener(\"abort\", () => {\n                        if (this.status === \"disposed\") {\n                            return;\n                        }\n                        this.channel.send({\n                            type: \"abortToolCall\",\n                            callId,\n                        });\n                        reject(ctx.signal.reason);\n                    }, { once: true });\n                    return await promise;\n                }\n                catch (e_1) {\n                    env_1.error = e_1;\n                    env_1.hasError = true;\n                }\n                finally {\n                    __disposeResources(env_1);\n                }\n            },\n        });\n    }\n}\n/**\n * Represents a tool use session backed by multiple plugins. Don't construct this class yourself.\n *\n * @public\n */\nclass MultiRemoteToolUseSession {\n    static async createUsingPredictionProcess(pluginsPort, pluginIdentifiers, predictionContextIdentifier, token, logger, stack) {\n        // Start initializing all the sessions in parallel. This is OK because usually all the plugins\n        // are already loaded for the prediction process anyway.\n        const results = await Promise.allSettled(pluginIdentifiers.map(pluginIdentifier => SingleRemoteToolUseSession.create(pluginsPort, pluginIdentifier, {\n            type: \"predictionProcess\",\n            pci: predictionContextIdentifier,\n            token,\n        }, logger, stack)));\n        const failed = results.filter(result => result.status === \"rejected\");\n        if (failed.length > 0) {\n            // Some sessions failed to initialize. We need to terminate all the sessions that\n            // successfully initialized.\n            for (const result of results) {\n                if (result.status === \"fulfilled\") {\n                    try {\n                        result.value[Symbol.dispose]();\n                    }\n                    catch (error) {\n                        logger.error(\"Failed to dispose a session after initialization failure.\", error);\n                    }\n                }\n            }\n            throw new AggregateError(failed.map(result => result.reason), \"Failed to initialize some tool use sessions.\");\n        }\n        return new MultiRemoteToolUseSession(results.map(result => result.value), logger);\n    }\n    constructor(sessions, logger) {\n        this.sessions = sessions;\n        this.logger = logger;\n        this.tools = [];\n        this.tools = sessions.flatMap(session => session.tools);\n    }\n    [Symbol.dispose]() {\n        // Dispose all the sessions.\n        for (const session of this.sessions) {\n            try {\n                session[Symbol.dispose]();\n            }\n            catch (error) {\n                this.logger.error(\"Failed to dispose a session.\", error);\n            }\n        }\n    }\n}\n\nconst pluginToolsOptsSchema = z.object({\n    pluginConfig: kvConfigSchema.optional(),\n    workingDirectory: z.string().optional(),\n});\nconst registerDevelopmentPluginOptsSchema = z.object({\n    manifest: pluginManifestSchema,\n});\n/**\n * @public\n *\n * The namespace for file-related operations. Currently no public-facing methods.\n */\nclass PluginsNamespace {\n    /** @internal */\n    constructor(\n    /** @internal */\n    port, client, validator, parentLogger, rootLogger) {\n        this.port = port;\n        this.client = client;\n        this.validator = validator;\n        this.rootLogger = rootLogger;\n        this.logger = new SimpleLogger(\"Plugins\", parentLogger);\n    }\n    /**\n     * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n     * future without warning.\n     */\n    async registerDevelopmentPlugin(opts) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"plugins\", \"registerDevelopmentPlugin\", \"opts\", registerDevelopmentPluginOptsSchema, opts, stack);\n        const { promise, resolve } = makePromise();\n        const channel = this.port.createChannel(\"registerDevelopmentPlugin\", opts, message => {\n            if (message.type === \"ready\") {\n                resolve({\n                    clientIdentifier: message.clientIdentifier,\n                    clientPasskey: message.clientPasskey,\n                });\n            }\n        }, { stack });\n        let unregisterCalled = false;\n        const unregister = async () => {\n            if (unregisterCalled) {\n                return;\n            }\n            unregisterCalled = true;\n            channel.send({ type: \"end\" });\n            const { promise, resolve } = makePromise();\n            channel.onClose.subscribeOnce(resolve);\n            await promise;\n        };\n        const base = await promise;\n        return {\n            ...base,\n            unregister,\n        };\n    }\n    /**\n     * Requests LM Studio to reindex all the plugins.\n     *\n     * CAVEAT: Currently, we do not wait for the reindex to complete before returning. In the future,\n     * we will change this behavior and only return after the reindex is completed.\n     *\n     * @experimental [EXP-PLUGIN-CORE] Plugin support is still in development. This may change in the\n     * future without warning.\n     */\n    async reindexPlugins() {\n        const stack = getCurrentStack(1);\n        await this.port.callRpc(\"reindexPlugins\", undefined, { stack });\n    }\n    /**\n     * If this client is currently running as a plugin, get the self registration host which can be\n     * used to register hooks.\n     *\n     * @deprecated This method is used by plugins internally to register hooks. Do not use directly.\n     */\n    getSelfRegistrationHost() {\n        return new PluginSelfRegistrationHost(this.port, this.client, this.rootLogger, this.validator);\n    }\n    /**\n     * Starts a tool use session use any config specifier.\n     */\n    async internalStartToolUseSession(pluginIdentifier, pluginConfigSpecifier, _stack) {\n        return await SingleRemoteToolUseSession.create(this.port, pluginIdentifier, pluginConfigSpecifier, this.logger);\n    }\n    /**\n     * Start a tool use session with a plugin. Note, this method must be used with \"Explicit Resource\n     * Management\". That is, you should use it like so:\n     *\n     * ```typescript\n     * using pluginTools = await client.plugins.pluginTools(\"owner/name\", { ... });\n     * // ^ Notice the `using` keyword here.\n     * ```\n     *\n     * If you do not use `using`, you must call `pluginTools[Symbol.dispose]()` after you are done.\n     * Otherwise, there will be a memory leak and the plugins you requested tools from will be loaded\n     * indefinitely.\n     *\n     * @experimental [EXP-USE-USE-PLUGIN-TOOLS] Using tools from other applications is still in\n     * development. This may change in the future without warning.\n     */\n    async pluginTools(pluginIdentifier, opts = {}) {\n        const stack = getCurrentStack(1);\n        [pluginIdentifier, opts] = this.validator.validateMethodParamsOrThrow(\"plugins\", \"pluginTools\", [\"pluginIdentifier\", \"opts\"], [artifactIdentifierSchema, pluginToolsOptsSchema], [pluginIdentifier, opts], stack);\n        return await this.internalStartToolUseSession(pluginIdentifier, {\n            type: \"direct\",\n            config: opts.pluginConfig ?? emptyKVConfig,\n            workingDirectoryPath: opts.workingDirectory,\n        });\n    }\n    /**\n     * Start a tool use session associated with a prediction process.\n     *\n     * This method is used internally by processing controllers and will be stripped by the internal\n     * tag.\n     *\n     * @internal\n     */\n    async startToolUseSessionUsingPredictionProcess(pluginIdentifiers, predictionContextIdentifier, token, stack) {\n        return await MultiRemoteToolUseSession.createUsingPredictionProcess(this.port, pluginIdentifiers, predictionContextIdentifier, token, this.logger, stack);\n    }\n    /**\n     * @experimental [EXP-GEN-PREDICT] Using generator plugins programmatically is still in\n     * development. This may change in the future without warning.\n     */\n    createGeneratorHandle(pluginIdentifier) {\n        return new LLMGeneratorHandle(this.port, pluginIdentifier, this.validator, null, this.logger);\n    }\n    /**\n     * Creates a generator handle that is already associated with a prediction process.\n     *\n     * This method is used internally by the processing controllers to create generator handles. It is\n     * marked as internal and will be stripped.\n     *\n     * @internal\n     */\n    createGeneratorHandleAssociatedWithPredictionProcess(pluginIdentifier, predictionContextIdentifier, token) {\n        return new LLMGeneratorHandle(this.port, pluginIdentifier, this.validator, { pci: predictionContextIdentifier, token }, this.logger);\n    }\n}\n\nconst artifactDownloadPlannerDownloadOptsSchema = z.object({\n    onStartFinalizing: z.function().optional(),\n    onProgress: z.function().optional(),\n    signal: z.instanceof(AbortSignal).optional(),\n});\n/**\n * Represents a planner to download an artifact. The plan is not guaranteed to be ready until you\n * await on the method \"untilReady\".\n *\n * @deprecated [DEP-HUB-API-ACCESS] LM Studio Hub API access is still in active development. Stay\n * tuned for updates.\n * @public\n */\nclass ArtifactDownloadPlanner {\n    /**\n     * @internal Do not construct this class yourself.\n     */\n    constructor(owner, name, onPlanUpdated, \n    /** @internal */\n    channel, validator, onDisposed) {\n        this.owner = owner;\n        this.name = name;\n        this.onPlanUpdated = onPlanUpdated;\n        this.channel = channel;\n        this.validator = validator;\n        this.onDisposed = onDisposed;\n        this.readyDeferredPromise = makePromise();\n        this.isReadyBoolean = false;\n        this.currentDownload = null;\n        /**\n         * If we received an error after the download starts, we will just raise the error in the download\n         * promise.\n         *\n         * However, if the error was received before download was called (e.g. plan resolution failed),\n         * we will store the error here and throw it as soon as `.download` is called. In addition, we\n         * will also raise the error in the ready promise. However, since it is not required to attach\n         * a listener there\n         */\n        this.errorReceivedBeforeDownloadStart = null;\n        this.logger = new SimpleLogger(`ArtifactDownloadPlanner(${owner}/${name})`);\n        // Don't unhandled rejection - we don't require user to await on this promise.\n        this.readyDeferredPromise.promise.catch(() => { });\n        this.planValue = {\n            nodes: [\n                {\n                    type: \"artifact\",\n                    owner,\n                    name,\n                    state: \"pending\",\n                    dependencyNodes: [],\n                },\n            ],\n            downloadSizeBytes: 0,\n        };\n        this.channel.onMessage.subscribe(message => {\n            const messageType = message.type;\n            switch (messageType) {\n                case \"planReady\": {\n                    this.isReadyBoolean = true;\n                    this.readyDeferredPromise.resolve();\n                    this.planValue = message.plan;\n                    break;\n                }\n                case \"planUpdated\": {\n                    this.planValue = message.plan;\n                    safeCallCallback(this.logger, \"onPlanUpdated\", this.onPlanUpdated, [message.plan]);\n                    break;\n                }\n                case \"success\": {\n                    if (this.currentDownload === null) {\n                        throw new Error(\"Unexpected: received success message without a download.\");\n                    }\n                    this.currentDownload.downloadFinished();\n                    break;\n                }\n                case \"downloadProgress\": {\n                    if (this.currentDownload === null) {\n                        throw new Error(\"Unexpected: received progress message without a download.\");\n                    }\n                    this.currentDownload.progressUpdate(message.update);\n                    break;\n                }\n                case \"startFinalizing\": {\n                    if (this.currentDownload === null) {\n                        throw new Error(\"Unexpected: received startFinalizing message without a download.\");\n                    }\n                    this.currentDownload.startFinalizing();\n                    break;\n                }\n            }\n        });\n        this.channel.onError.subscribeOnce(error => {\n            if (this.currentDownload === null) {\n                this.errorReceivedBeforeDownloadStart = error;\n                this.readyDeferredPromise.reject(error);\n            }\n            else {\n                this.currentDownload.downloadFailed(error);\n            }\n        });\n    }\n    [Symbol.dispose]() {\n        this.channel.send({ type: \"cancel\" });\n        this.onDisposed();\n    }\n    isReady() {\n        return this.isReadyBoolean;\n    }\n    async untilReady() {\n        return await this.readyDeferredPromise.promise;\n    }\n    getPlan() {\n        return this.planValue;\n    }\n    /**\n     * Download this artifact. `download` can only be called once.\n     */\n    async download(opts) {\n        const stack = getCurrentStack(1);\n        opts = this.validator.validateMethodParamOrThrow(\"ArtifactDownloadPlanner\", \"download\", \"opts\", artifactDownloadPlannerDownloadOptsSchema, opts, stack);\n        const { onProgress, onStartFinalizing, signal = new AbortController().signal } = opts;\n        if (this.currentDownload !== null) {\n            throw new Error(\"You can only call `download` once for each planner.\");\n        }\n        if (this.errorReceivedBeforeDownloadStart !== null) {\n            // There has been an error. Raise it immediately.\n            const error = this.errorReceivedBeforeDownloadStart;\n            this.errorReceivedBeforeDownloadStart = null;\n            throw error;\n        }\n        const { promise, resolve, reject } = makePromise();\n        this.currentDownload = {\n            downloadFinished: () => {\n                resolve();\n            },\n            startFinalizing: () => {\n                safeCallCallback(this.logger, \"onStartFinalizing\", onStartFinalizing, []);\n            },\n            progressUpdate: update => {\n                safeCallCallback(this.logger, \"onProgress\", onProgress, [update]);\n            },\n            downloadFailed: error => {\n                reject(error);\n            },\n        };\n        this.channel.send({ type: \"commit\" });\n        if (signal.aborted) {\n            this.channel.send({ type: \"cancel\" });\n        }\n        else {\n            signal.addEventListener(\"abort\", () => {\n                this.channel.send({ type: \"cancel\" });\n            });\n        }\n        return await promise.catch(error => {\n            if (signal.aborted) {\n                // If the signal was aborted, we need to reject with the reason of the abort.\n                throw signal.reason;\n            }\n            else {\n                // Otherwise, we just reject with the error.\n                throw error;\n            }\n        });\n    }\n}\n\nconst downloadOptsSchema = z.object({\n    onProgress: z.function().optional(),\n    onStartFinalizing: z.function().optional(),\n    signal: z.instanceof(AbortSignal).optional(),\n});\n/** @public */\nclass ModelSearchResultDownloadOption {\n    /** @internal */\n    constructor(\n    /** @internal */\n    repositoryPort, \n    /** @internal */\n    validator, logger, data) {\n        this.repositoryPort = repositoryPort;\n        this.validator = validator;\n        this.logger = logger;\n        this.data = data;\n        this.quantization = data.quantization;\n        this.name = data.name;\n        this.sizeBytes = data.sizeBytes;\n        this.fitEstimation = this.data.fitEstimation;\n        this.indexedModelIdentifier = this.data.indexedModelIdentifier;\n    }\n    isRecommended() {\n        return this.data.recommended ?? false;\n    }\n    /**\n     * Download the model. Returns the model key which can be used to load the model.\n     */\n    async download(opts = {}) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"ModelSearchResultDownloadOption\", \"download\", \"opts\", downloadOptsSchema, opts, stack);\n        const { promise, resolve, reject } = makePromise();\n        const channel = this.repositoryPort.createChannel(\"downloadModel\", {\n            downloadIdentifier: this.data.downloadIdentifier,\n        }, message => {\n            switch (message.type) {\n                case \"downloadProgress\": {\n                    safeCallCallback(this.logger, \"onProgress\", opts.onProgress, [message.update]);\n                    break;\n                }\n                case \"startFinalizing\": {\n                    safeCallCallback(this.logger, \"onStartFinalizing\", opts.onStartFinalizing, []);\n                    break;\n                }\n                case \"success\": {\n                    resolve(message.defaultIdentifier);\n                    break;\n                }\n                default: {\n                    const exhaustiveCheck = message;\n                    throw new Error(`Unexpected message type: ${exhaustiveCheck}`);\n                }\n            }\n        }, { stack });\n        channel.onError.subscribeOnce(error => {\n            if (opts.signal?.aborted) {\n                reject(opts.signal.reason);\n            }\n            else {\n                reject(error);\n            }\n        });\n        channel.onClose.subscribeOnce(() => {\n            if (opts.signal?.aborted) {\n                reject(opts.signal.reason);\n            }\n            else {\n                reject(new Error(\"Channel closed unexpectedly.\"));\n            }\n        });\n        const abortListener = () => {\n            channel.send({ type: \"cancel\" });\n        };\n        opts.signal?.addEventListener(\"abort\", abortListener);\n        promise.finally(() => {\n            opts.signal?.removeEventListener(\"abort\", abortListener);\n        });\n        return await promise;\n    }\n}\n\n/** @public */\nclass ModelSearchResultEntry {\n    /**\n     * @internal\n     */\n    constructor(\n    /** @internal */\n    repositoryPort, \n    /** @internal */\n    validator, logger, data) {\n        this.repositoryPort = repositoryPort;\n        this.validator = validator;\n        this.logger = logger;\n        this.data = data;\n        this.name = data.name;\n    }\n    isExactMatch() {\n        return this.data.exact ?? false;\n    }\n    isStaffPick() {\n        return this.data.staffPick ?? false;\n    }\n    async getDownloadOptions() {\n        const { results } = await this.repositoryPort.callRpc(\"getModelDownloadOptions\", {\n            modelSearchResultIdentifier: this.data.identifier,\n        });\n        return results.map(data => new ModelSearchResultDownloadOption(this.repositoryPort, this.validator, this.logger, data));\n    }\n}\n\nconst downloadArtifactOptsSchema = z.object({\n    owner: z.string(),\n    name: z.string(),\n    revisionNumber: z.number(),\n    path: z.string(),\n    onProgress: z.function().optional(),\n    onStartFinalizing: z.function().optional(),\n    signal: z.instanceof(AbortSignal).optional(),\n});\nconst pushArtifactOptsSchema = z.object({\n    path: z.string(),\n    description: z.string().optional(),\n    makePrivate: z.boolean().optional(),\n    writeRevision: z.boolean().optional(),\n    overrides: jsonSerializableSchema.optional(),\n    onMessage: z.function().optional(),\n});\nconst ensureAuthenticatedOptsSchema = z.object({\n    onAuthenticationUrl: z.function(),\n});\nconst loginWithPreAuthenticatedKeysOptsSchema = z.object({\n    keyId: z.string(),\n    publicKey: z.string(),\n    privateKey: z.string(),\n});\nz.object({\n    userName: z.string(),\n});\nconst createArtifactDownloadPlannerOptsSchema = z.object({\n    owner: z.string(),\n    name: z.string(),\n    onPlanUpdated: z.function().optional(),\n});\n/** @public */\nclass RepositoryNamespace {\n    /** @internal */\n    constructor(repositoryPort, validator, parentLogger) {\n        this.repositoryPort = repositoryPort;\n        this.validator = validator;\n        this.downloadPlanFinalizationRegistry = new FinalizationRegistry(({ owner, name }) => {\n            this.logger.warn(`\r\n      A download plan for artifact ${owner}/${name} has been garbage collected without being\r\n      disposed. Please make sure you are creating the download plan with the \"using\" keyword.\r\n\r\n      This is a memory leak and needs to be fixed.\r\n    `);\n        });\n        this.logger = new SimpleLogger(\"Repository\", parentLogger);\n    }\n    async searchModels(opts) {\n        const stack = getCurrentStack(1);\n        opts = this.validator.validateMethodParamOrThrow(\"repository\", \"search\", \"opts\", modelSearchOptsSchema, opts, stack);\n        const { results } = await this.repositoryPort.callRpc(\"searchModels\", { opts }, { stack });\n        return results.map(data => new ModelSearchResultEntry(this.repositoryPort, this.validator, this.logger, data));\n    }\n    /**\n     * @deprecated [DEP-HUB-API-ACCESS] LM Studio Hub API access is still in active development. Stay\n     * tuned for updates.\n     */\n    async installPluginDependencies(pluginFolder) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"repository\", \"installPluginDependencies\", \"pluginFolder\", z.string(), pluginFolder, stack);\n        await this.repositoryPort.callRpc(\"installPluginDependencies\", { pluginFolder }, { stack });\n    }\n    /**\n     * @deprecated [DEP-HUB-API-ACCESS] LM Studio Hub API access is still in active development. Stay\n     * tuned for updates.\n     */\n    async downloadArtifact(opts) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"client.repository\", \"downloadArtifact\", \"opts\", downloadArtifactOptsSchema, opts, stack);\n        const { owner, name, revisionNumber, path, onProgress, onStartFinalizing, signal } = opts;\n        const { promise, resolve, reject } = makePromise();\n        const channel = this.repositoryPort.createChannel(\"downloadArtifact\", { artifactOwner: owner, artifactName: name, revisionNumber, path }, message => {\n            switch (message.type) {\n                case \"downloadProgress\": {\n                    safeCallCallback(this.logger, \"onProgress\", onProgress, [message.update]);\n                    break;\n                }\n                case \"startFinalizing\": {\n                    safeCallCallback(this.logger, \"onStartFinalizing\", onStartFinalizing, []);\n                    break;\n                }\n                case \"success\": {\n                    resolve();\n                    break;\n                }\n                default: {\n                    const exhaustiveCheck = message;\n                    throw new Error(`Unexpected message type: ${exhaustiveCheck}`);\n                }\n            }\n        }, { stack });\n        channel.onError.subscribeOnce(reject);\n        channel.onClose.subscribeOnce(() => {\n            if (signal?.aborted) {\n                reject(signal.reason);\n            }\n            else {\n                reject(new Error(\"Channel closed unexpectedly.\"));\n            }\n        });\n        const abortListener = () => {\n            channel.send({ type: \"cancel\" });\n        };\n        signal?.addEventListener(\"abort\", abortListener);\n        promise.finally(() => {\n            signal?.removeEventListener(\"abort\", abortListener);\n        });\n        return await promise;\n    }\n    /**\n     * @deprecated [DEP-HUB-API-ACCESS] LM Studio Hub API access is still in active development. Stay\n     * tuned for updates.\n     */\n    async pushArtifact(opts) {\n        const stack = getCurrentStack(1);\n        const { path, description, makePrivate, writeRevision, overrides, onMessage } = this.validator.validateMethodParamOrThrow(\"repository\", \"pushArtifact\", \"opts\", pushArtifactOptsSchema, opts, stack);\n        const channel = this.repositoryPort.createChannel(\"pushArtifact\", { path, description, makePrivate, writeRevision, overrides }, message => {\n            const type = message.type;\n            switch (type) {\n                case \"message\": {\n                    safeCallCallback(this.logger, \"onMessage\", onMessage, [message.message]);\n                    break;\n                }\n                default: {\n                    const exhaustiveCheck = type;\n                    throw new Error(`Unexpected message type: ${exhaustiveCheck}`);\n                }\n            }\n        }, { stack });\n        const { promise, resolve, reject } = makePromise();\n        channel.onError.subscribeOnce(reject);\n        channel.onClose.subscribeOnce(resolve);\n        await promise;\n    }\n    /**\n     * @deprecated [DEP-HUB-API-ACCESS] LM Studio Hub API access is still in active development. Stay\n     * tuned for updates.\n     */\n    async getLocalArtifactFileList(path) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"repository\", \"getLocalArtifactFileList\", \"path\", z.string(), path, stack);\n        const { fileList } = await this.repositoryPort.callRpc(\"getLocalArtifactFiles\", { path }, { stack });\n        return fileList;\n    }\n    /**\n     * @deprecated [DEP-HUB-API-ACCESS] LM Studio Hub API access is still in active development. Stay\n     * tuned for updates.\n     */\n    async ensureAuthenticated(opts) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"repository\", \"ensureAuthenticated\", \"opts\", ensureAuthenticatedOptsSchema, opts, stack);\n        const { promise, resolve, reject } = makePromise();\n        const channel = this.repositoryPort.createChannel(\"ensureAuthenticated\", undefined, message => {\n            const type = message.type;\n            switch (type) {\n                case \"authenticationUrl\": {\n                    safeCallCallback(this.logger, \"onAuthenticationUrl\", opts.onAuthenticationUrl, [\n                        message.url,\n                    ]);\n                    break;\n                }\n                case \"authenticated\": {\n                    resolve();\n                    break;\n                }\n                default: {\n                    const exhaustiveCheck = type;\n                    throw new Error(`Unexpected message type: ${exhaustiveCheck}`);\n                }\n            }\n        });\n        channel.onError.subscribeOnce(reject);\n        await promise;\n    }\n    async loginWithPreAuthenticatedKeys(opts) {\n        const stack = getCurrentStack(1);\n        this.validator.validateMethodParamOrThrow(\"repository\", \"loginWithPreAuthenticatedKeys\", \"opts\", loginWithPreAuthenticatedKeysOptsSchema, opts, stack);\n        const { keyId, publicKey, privateKey } = opts;\n        const { userName } = await this.repositoryPort.callRpc(\"loginWithPreAuthenticatedKeys\", { keyId, publicKey, privateKey }, { stack });\n        return { userName };\n    }\n    /**\n     * @deprecated [DEP-HUB-API-ACCESS] LM Studio Hub API access is still in active development. Stay\n     * tuned for updates.\n     */\n    createArtifactDownloadPlanner(opts) {\n        const { owner, name, onPlanUpdated } = this.validator.validateMethodParamOrThrow(\"repository\", \"createArtifactDownloadPlanner\", \"opts\", createArtifactDownloadPlannerOptsSchema, opts);\n        const stack = getCurrentStack(1);\n        const channel = this.repositoryPort.createChannel(\"createArtifactDownloadPlan\", { owner, name }, undefined, // Don't listen to the messages yet.\n        { stack });\n        const planner = new ArtifactDownloadPlanner(owner, name, onPlanUpdated, channel, this.validator, () => {\n            this.downloadPlanFinalizationRegistry.unregister(planner);\n        });\n        this.downloadPlanFinalizationRegistry.register(planner, { owner, name }, planner);\n        return planner;\n    }\n}\n\nconst startHttpServerOptsSchema = z.object({\n    port: z\n        .number()\n        .int()\n        .min(1)\n        .max(65535)\n        .describe(\"Port to run the API server on. Must be between 1 and 65535.\"),\n    cors: z\n        .boolean()\n        .describe(\"Enable CORS on the API server. Allows any website to access the server.\"),\n});\n/** @public */\nclass SystemNamespace {\n    /** @internal */\n    constructor(systemPort, validator, parentLogger) {\n        this.systemPort = systemPort;\n        this.validator = validator;\n        this.logger = new SimpleLogger(\"System\", parentLogger);\n    }\n    async listDownloadedModels(domain) {\n        const stack = getCurrentStack(1);\n        domain = this.validator.validateMethodParamOrThrow(\"client.system\", \"listDownloadedModels\", \"domain\", z.union([z.literal(\"llm\"), z.literal(\"embedding\"), z.undefined()]), domain, stack);\n        const models = await this.systemPort.callRpc(\"listDownloadedModels\", undefined, {\n            stack: getCurrentStack(1),\n        });\n        if (domain === undefined) {\n            return models;\n        }\n        return models.filter(model => model.type === domain);\n    }\n    async whenDisconnected() {\n        const stack = getCurrentStack(1);\n        const channel = this.systemPort.createChannel(\"alive\", undefined, undefined, { stack });\n        const { promise, resolve } = makePromise();\n        channel.onError.subscribeOnce(resolve);\n        channel.onClose.subscribeOnce(resolve);\n        await promise;\n    }\n    async notify(notification) {\n        const stack = getCurrentStack(1);\n        notification = this.validator.validateMethodParamOrThrow(\"client.system\", \"notify\", \"notification\", backendNotificationSchema, notification, stack);\n        await this.systemPort.callRpc(\"notify\", notification, { stack });\n    }\n    async getLMStudioVersion() {\n        const stack = getCurrentStack(1);\n        return await this.systemPort.callRpc(\"version\", undefined, { stack });\n    }\n    /**\n     * Sets an experiment flags for LM Studio. This is an unstable API and may change without notice.\n     *\n     * @experimental\n     */\n    async unstable_setExperimentFlag(flag, value) {\n        const stack = getCurrentStack(1);\n        [flag, value] = this.validator.validateMethodParamsOrThrow(\"client.system\", \"setExperimentFlag\", [\"flag\", \"value\"], [z.string(), z.boolean()], [flag, value], stack);\n        await this.systemPort.callRpc(\"setExperimentFlag\", { code: flag, value }, { stack });\n    }\n    /**\n     * Gets all experiment flags for LM Studio. This is an unstable API and may change without notice.\n     *\n     * @experimental\n     */\n    async unstable_getExperimentFlags() {\n        const stack = getCurrentStack(1);\n        return await this.systemPort.callRpc(\"getExperimentFlags\", undefined, { stack });\n    }\n    /**\n     * Starts the API server on the specified port.\n     *\n     * @experimental\n     */\n    async startHttpServer(opts) {\n        const stack = getCurrentStack(1);\n        opts = this.validator.validateMethodParamOrThrow(\"client.system\", \"startHttpServer\", \"args\", startHttpServerOptsSchema, opts);\n        return await this.systemPort.callRpc(\"startHttpServer\", { port: opts.port, cors: opts.cors }, {\n            stack,\n        });\n    }\n    /**\n     * Stops the API server if it is running.\n     *\n     * @experimental\n     */\n    async stopHttpServer() {\n        const stack = getCurrentStack(1);\n        return await this.systemPort.callRpc(\"stopHttpServer\", undefined, { stack });\n    }\n}\n\nconst constructorOptsSchema = z\n    .object({\n    logger: z.any().optional(),\n    baseUrl: z.string().optional(),\n    verboseErrorMessages: z.boolean().optional(),\n    clientIdentifier: z.string().optional(),\n    clientPasskey: z.string().optional(),\n    // Internal testing options\n    disableConnection: z.boolean().optional(),\n    llmPort: z.any().optional(),\n    embeddingPort: z.any().optional(),\n    systemPort: z.any().optional(),\n    diagnosticsPort: z.any().optional(),\n    retrievalPort: z.any().optional(),\n    filesPort: z.any().optional(),\n    repositoryPort: z.any().optional(),\n    pluginsPort: z.any().optional(),\n})\n    .strict();\n/** @public */\nclass LMStudioClient {\n    /** @internal */\n    validateBaseUrlOrThrow(baseUrl) {\n        let url;\n        try {\n            url = new URL(baseUrl);\n        }\n        catch (e) {\n            this.logger.throw(text `\r\n        Failed to construct LMStudioClient. The baseUrl passed in is invalid. Received: ${baseUrl}\r\n      `);\n        }\n        if (![\"ws:\", \"wss:\"].includes(url.protocol)) {\n            this.logger.throw(text `\r\n        Failed to construct LMStudioClient. The baseUrl passed in must have protocol \"ws\" or \"wss\". \r\n        Received: ${baseUrl}\r\n      `);\n        }\n        if (url.search !== \"\") {\n            this.logger.throw(text `\r\n        Failed to construct LMStudioClient. The baseUrl passed contains search parameters\r\n        (\"${url.search}\").\r\n      `);\n        }\n        if (url.hash !== \"\") {\n            this.logger.throw(text `\r\n        Failed to construct LMStudioClient. The baseUrl passed contains a hash (\"${url.hash}\").\r\n      `);\n        }\n        if (url.username !== \"\" || url.password !== \"\") {\n            this.logger.throw(text `\r\n        Failed to construct LMStudioClient. The baseUrl passed contains a username or password. We\r\n        do not support these in the baseUrl. Received: ${baseUrl}\r\n      `);\n        }\n        if (baseUrl.endsWith(\"/\")) {\n            this.logger.throw(text `\r\n        Failed to construct LMStudioClient. The baseUrl passed in must not end with a \"/\". If you\r\n        are reverse-proxying, you should remove the trailing slash from the baseUrl. Received:\r\n        ${baseUrl}\r\n      `);\n        }\n    }\n    async isLocalhostWithGivenPortLMStudioServer(port) {\n        const response = await fetch(`http://127.0.0.1:${port}/lmstudio-greeting`);\n        if (response.status !== 200) {\n            throw new Error(\"Status is not 200.\");\n        }\n        const json = await response.json();\n        if (json?.lmstudio !== true) {\n            throw new Error(\"Not an LM Studio server.\");\n        }\n        return port;\n    }\n    /**\n     * Guess the base URL of the LM Studio server by visiting localhost on various default ports.\n     */\n    async guessBaseUrl(stack) {\n        if (getHostedEnv() !== null) {\n            return Promise.resolve(\"Using hosted env\");\n        }\n        // On browser, those apiServerPorts are not accessible anyway. We will just try to see if we can\n        // reach the server on 127.0.0.1:1234 (the default port).\n        if (process$1.browser) {\n            try {\n                this.isLocalhostWithGivenPortLMStudioServer(1234);\n                return \"ws://127.0.0.1:1234\";\n            }\n            catch (error) {\n                text `\r\n          ${chalk.redBright(\"Failed to connect to LM Studio.\")}\r\n\r\n          Is LM Studio running? If not, please start it by running:\r\n\r\n              ${chalk.yellow(\"lms server start --cors\")}\r\n\r\n          If you are attempting to connect to LM Studio on a separate machine, please provide the\r\n          baseUrl option when creating the LMStudioClient:\r\n\r\n              ${chalk.blueBright(text `\r\n                const client = new LMStudioClient({ baseUrl: 'ws://<host_name>:<port>' });\r\n              `)}\r\n\r\n          ${chalk.white(\"(i) For more information, refer to the LM Studio documentation:\")}\r\n\r\n              ${chalk.gray(\"https://lmstudio.ai/docs/local-server\")}\r\n        `;\n            }\n        }\n        return Promise.any(apiServerPorts.map(this.isLocalhostWithGivenPortLMStudioServer)).then(port => `ws://127.0.0.1:${port}`, () => {\n            throw makePrettyError(text `\r\n            ${chalk.redBright(\"Failed to connect to LM Studio.\")}\r\n\r\n            Please make sure LM Studio is running on your machine.\r\n            \r\n            If you are attempting to connect to LM Studio on a separate machine, please provide the\r\n            baseUrl option when creating the LMStudioClient:\r\n\r\n                ${chalk.blueBright(text `\r\n                  const client = new LMStudioClient({ baseUrl: 'ws://<host_name>:<port>' });\r\n                `)}\r\n\r\n            ${chalk.white(\"(i) For more information, refer to the LM Studio documentation:\")}\r\n\r\n                ${chalk.gray(\"https://lmstudio.ai/docs/local-server\")}\r\n          `, stack);\n        });\n    }\n    createPort(namespace, name, backendInterface) {\n        return createAuthenticatedClientPort(backendInterface, this.resolvingBaseUrl, namespace, this.clientIdentifier, this.clientPasskey, new SimpleLogger(name, this.logger), {\n            errorDeserializer: friendlyErrorDeserializer,\n            verboseErrorMessage: this.verboseErrorMessages,\n        });\n    }\n    constructor(opts = {}) {\n        const { logger, baseUrl, verboseErrorMessages, clientIdentifier, clientPasskey, disableConnection, llmPort, embeddingPort, systemPort, diagnosticsPort, retrievalPort, filesPort, repositoryPort, pluginsPort, } = new Validator().validateConstructorParamOrThrow(\"LMStudioClient\", \"opts\", constructorOptsSchema, opts);\n        if (globalThis.__LMS_PLUGIN_CONTEXT && opts.baseUrl === undefined) {\n            throw new Error(text `\r\n          You cannot create a local LMStudioClient in a plugin context. To use LM Studio APIs, use\r\n          the \"client\" property attached to the Controllers.\r\n\r\n          For example, instead of:\r\n\r\n          ${\"const client = new LMStudioClient(); // <-- Error\\n\" +\n                \"export async function generate(ctl: GeneratorController) {\\n\" +\n                \"  const model = await client.llm.model(...);\\n\" +\n                \"}\"}\r\n\r\n          Do this:\r\n            \r\n          ${\"export async function generate(ctl: GeneratorController) {\\n\" +\n                \"  const model = await ctl.client.llm.model(...);\\n\" +\n                \"}\"}\r\n\r\n          If you need to connect to a remote LM Studio, you should pass in the \\`baseUrl\\` option to\r\n          the LMStudioClient constructor:\r\n\r\n          ${\"const client = new LMStudioClient({ baseUrl: 'ws://<host_name>:<port>' });\"}\r\n        `);\n        }\n        this.logger = new SimpleLogger(\"LMStudioClient\", logger);\n        this.clientIdentifier = clientIdentifier ?? generateRandomBase64(18);\n        this.clientPasskey = clientPasskey ?? generateRandomBase64(18);\n        const stack = getCurrentStack(1);\n        if (disableConnection) {\n            this.resolvingBaseUrl = new Promise(() => undefined);\n        }\n        else {\n            if (baseUrl === undefined) {\n                this.resolvingBaseUrl = this.guessBaseUrl(verboseErrorMessages ? stack : undefined);\n            }\n            else {\n                this.validateBaseUrlOrThrow(baseUrl);\n                this.resolvingBaseUrl = baseUrl;\n            }\n        }\n        this.verboseErrorMessages = verboseErrorMessages ?? true;\n        this.llmPort = llmPort ?? this.createPort(\"llm\", \"LLM\", createLlmBackendInterface());\n        this.embeddingPort =\n            embeddingPort ?? this.createPort(\"embedding\", \"Embedding\", createEmbeddingBackendInterface());\n        this.systemPort =\n            systemPort ?? this.createPort(\"system\", \"System\", createSystemBackendInterface());\n        this.diagnosticsPort =\n            diagnosticsPort ??\n                this.createPort(\"diagnostics\", \"Diagnostics\", createDiagnosticsBackendInterface());\n        this.filesPort = filesPort ?? this.createPort(\"files\", \"Files\", createFilesBackendInterface());\n        this.repositoryPort =\n            repositoryPort ??\n                this.createPort(\"repository\", \"Repository\", createRepositoryBackendInterface());\n        this.pluginsPort =\n            pluginsPort ?? this.createPort(\"plugins\", \"Plugins\", createPluginsBackendInterface());\n        const validator = new Validator();\n        this.llm = new LLMNamespace(this, this.llmPort, new SimpleLogger(\"LLM\", this.logger), validator);\n        this.embedding = new EmbeddingNamespace(this, this.embeddingPort, new SimpleLogger(\"Embedding\", this.logger), validator);\n        this.system = new SystemNamespace(this.systemPort, validator, this.logger);\n        this.diagnostics = new DiagnosticsNamespace(this.diagnosticsPort, validator, this.logger);\n        this.files = new FilesNamespace(this.filesPort, validator, this.logger);\n        this.repository = new RepositoryNamespace(this.repositoryPort, validator, this.logger);\n        this.plugins = new PluginsNamespace(this.pluginsPort, this, validator, this.logger, logger);\n    }\n    async [Symbol.asyncDispose]() {\n        await Promise.all([\n            this.llmPort[Symbol.asyncDispose](),\n            this.embeddingPort[Symbol.asyncDispose](),\n            this.systemPort[Symbol.asyncDispose](),\n            this.diagnosticsPort[Symbol.asyncDispose](),\n            this.filesPort[Symbol.asyncDispose](),\n            this.repositoryPort[Symbol.asyncDispose](),\n            this.pluginsPort[Symbol.asyncDispose](),\n        ]);\n    }\n}\n\nexport { Chat, ChatMessage, FileHandle, LMStudioClient, MaybeMutable, ToolCallRequestError, createConfigSchematics, kvValueTypesLibrary, rawFunctionTool, text, tool, unimplementedRawFunctionTool };\n", "export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const jsonDescription = (jsonSchema, def) => {\n    if (def.description) {\n        try {\n            return {\n                ...jsonSchema,\n                ...JSON.parse(def.description),\n            };\n        }\n        catch { }\n    }\n    return jsonSchema;\n};\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    allowedAdditionalProperties: true,\n    rejectedAdditionalProperties: false,\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n", "import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n", "export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n", "export function parseAnyDef() {\n    return {};\n}\n", "import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n", "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n", "export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n", "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n", "import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport function parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? parseDef(_def.schema._def, refs)\n        : {};\n}\n", "export function parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: Array.from(def.values),\n    };\n}\n", "import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n", "export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n", "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n", "import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: refs.rejectedAdditionalProperties,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? refs.allowedAdditionalProperties,\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n", "import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n", "export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n", "export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n", "export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport const primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n", "import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n", "import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                addErrorMessage(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n", "import { ZodOptional } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        properties: {},\n    };\n    const required = [];\n    const shape = def.shape();\n    for (const propName in shape) {\n        let propDef = shape[propName];\n        if (propDef === undefined || propDef._def === undefined) {\n            continue;\n        }\n        let propOptional = safeIsOptional(propDef);\n        if (propOptional && forceOptionalIntoNullable) {\n            if (propDef instanceof ZodOptional) {\n                propDef = propDef._def.innerType;\n            }\n            if (!propDef.isNullable()) {\n                propDef = propDef.nullable();\n            }\n            propOptional = false;\n        }\n        const parsedDef = parseDef(propDef._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", propName],\n            propertyPath: [...refs.currentPath, \"properties\", propName],\n        });\n        if (parsedDef === undefined) {\n            continue;\n        }\n        result.properties[propName] = parsedDef;\n        if (!propOptional) {\n            required.push(propName);\n        }\n    }\n    if (required.length) {\n        result.required = required;\n    }\n    const additionalProperties = decideAdditionalProperties(def, refs);\n    if (additionalProperties !== undefined) {\n        result.additionalProperties = additionalProperties;\n    }\n    return result;\n}\nfunction decideAdditionalProperties(def, refs) {\n    if (def.catchall._def.typeName !== \"ZodNever\") {\n        return parseDef(def.catchall._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        });\n    }\n    switch (def.unknownKeys) {\n        case \"passthrough\":\n            return refs.allowedAdditionalProperties;\n        case \"strict\":\n            return refs.rejectedAdditionalProperties;\n        case \"strip\":\n            return refs.removeAdditionalStrategy === \"strict\"\n                ? refs.allowedAdditionalProperties\n                : refs.rejectedAdditionalProperties;\n    }\n}\nfunction safeIsOptional(schema) {\n    try {\n        return schema.isOptional();\n    }\n    catch {\n        return true;\n    }\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n", "import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n", "import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n", "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n", "export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n", "export function parseUnknownDef() {\n    return {};\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n", "import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nexport const selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return () => def.getter()._def;\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\n", "import { ignoreOverride } from \"./Options.js\";\nimport { selectParser } from \"./selectParser.js\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchemaOrGetter = selectParser(def, def.typeName, refs);\n    // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n    const jsonSchema = typeof jsonSchemaOrGetter === \"function\"\n        ? parseDef(jsonSchemaOrGetter(), refs)\n        : jsonSchemaOrGetter;\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    if (refs.postProcess) {\n        const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n        newItem.jsonSchema = jsonSchema;\n        return postProcessResult;\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n", "import { parseDef } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n"],
  "mappings": "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",
  "names": ["z", "z2", "conversions", "current", "conversions", "route", "get", "colorConvert", "chalk", "current", "styles", "ansiStyles", "isArray", "chalk", "generateRandomBase64", "readFileAsBase64", "terminalSize", "util", "objectUtil", "errorUtil", "errorMap", "_a", "ctx", "result", "issues", "elements", "processed", "freeze", "r", "_b", "ZodFirstPartyTypeKind", "_a", "emojiRegex", "_a", "_a", "types", "x", "base", "_a", "_a", "name", "schema", "_a", "previousSize", "isArray", "copy", "tags", "updater", "current", "process$1", "ansiRegex", "emojiRegex", "stripAnsi", "isFullwidthCodePoint", "stringWidth", "text", "z", "z2", "conversions", "route", "get", "colorConvert", "ansiStyles", "code", "chalk", "widestLine", "cliBoxes", "unsubscribe", "logger", "errors", "key", "builder", "ValidationError", "ValidatorResult", "SchemaError", "SchemaContext", "validator", "makeSuffix", "resolveUrl", "helpers", "validateMultipleOfOrDivisbleBy", "scan", "schema", "Validator", "uri", "tool", "ConnectionStatus", "DoubleIndexedKV", "Registry", "d", "b", "ClassRegistry", "CustomTransformerRegistry", "walker", "SuperJSON", "WsClientTransportStatus", "error", "wsAddress", "finished", "content", "globalConfigSchematics", "SuppressedError", "promise", "resolve"]
}
